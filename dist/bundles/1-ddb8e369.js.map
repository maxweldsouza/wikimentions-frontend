{"version":3,"sources":["webpack:///1-ddb8e369.js","webpack:///./~/react-cropper/dist/react-cropper.js","webpack:///./~/cropperjs/dist/cropper.js"],"names":["webpackJsonp","583","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","setPrototypeOf","__proto__","_extends","assign","target","i","arguments","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_reactDom","optionProps","unchangeableProps","slice","ReactCropper","_Component","this","getPrototypeOf","apply","_this2","options","keys","filter","propKey","indexOf","reduce","prevOptions","Cropper","cropper","img","nextProps","_this3","src","reset","clear","replace","aspectRatio","setAspectRatio","data","setData","dragMode","setDragMode","cropBoxData","setCropBoxData","canvasData","setCanvasData","moveTo","zoomTo","rotateTo","scaleX","scaleY","enable","disable","forEach","Error","destroy","mode","getCroppedCanvas","getCropBoxData","getCanvasData","getImageData","getContainerData","rounded","getData","crop","offsetX","offsetY","move","x","y","ratio","zoom","degree","rotate","url","onlyColorChanged","scale","_scaleX","_scaleY","_this4","_props","alt","crossOrigin","createElement","style","className","ref","undefined","opacity","Component","propTypes","PropTypes","object","string","number","oneOf","shape","width","height","bool","left","top","hegiht","arrayOf","viewMode","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRation","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minContainerWidth","minContainerHeight","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","ready","func","cropstart","cropmove","cropend","defaultProps","692","root","factory","modules","moduleId","installedModules","id","loaded","m","c","p","_interopRequireWildcard","newObj","_defaults","_defaults2","_template","_template2","_render","_render2","_preview","_preview2","_events","_events2","_handlers","_handlers2","_change","_change2","_methods","_methods2","_utilities","$","NAMESPACE","CLASS_HIDDEN","EVENT_ERROR","EVENT_LOAD","EVENT_READY","EVENT_CROP","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","AnotherCropper","element","extend","isPlainObject","complete","rotated","cropped","disabled","replaced","limited","wheeling","isImg","originalUrl","previews","init","tagName","toLowerCase","getAttribute","window","HTMLCanvasElement","toDataURL","load","imageData","ArrayBuffer","clone","test","read","dataURLToArrayBuffer","xhr","XMLHttpRequest","onerror","onabort","onload","response","isCrossOriginURL","addTimestamp","open","responseType","send","arrayBuffer","orientation","getOrientation","arrayBufferToDataURL","crossOriginUrl","start","stop","image","onStart","proxy","onStop","addListener","addClass","parentNode","insertBefore","nextSibling","event","removeListener","getImageSize","naturalWidth","naturalHeight","build","removeChild","container","canvas","dragBox","cropBox","face","unbuild","template","innerHTML","getByClass","viewBox","appendChild","removeClass","initPreview","bind","Math","max","NaN","min","round","render","completing","setTimeout","isFunction","dispatchEvent","clearTimeout","initialImageData","initialCanvasData","initialCropBoxData","containerData","unbind","resetPreview","wheelZoomRatio","initContainer","initCanvas","initCropBox","renderCanvas","renderCropBox","offsetWidth","Number","offsetHeight","setStyle","abs","canvasWidth","canvasHeight","oldLeft","oldTop","limitCanvas","sizeLimited","positionLimited","newCanvasLeft","newCanvasTop","minWidth","minHeight","maxWidth","Infinity","maxHeight","minLeft","minTop","maxLeft","maxTop","changed","rotatedData","getRotatedSizes","renderImage","limitCropBox","output","newImageData","reversedData","reversedWidth","reversedHeight","transform","getTransform","marginLeft","marginTop","WebkitTransform","msTransform","maxCropBoxWidth","maxCropBoxHeight","typeOf","toString","isNumber","num","isNaN","isUndefined","isObject","_typeof","_constructor","e","fn","isArray","arr","Array","toArray","offset","from","trim","str","REGEXP_TRIM","each","callback","_len","args","_key","deep","shift","arg","context","_len2","_key2","_len3","args2","_key3","concat","styles","property","REGEXP_SUFFIX","hasClass","classList","contains","elem","add","remove","toggleClass","added","hyphenate","REGEXP_HYPHENATE","name","dataset","setAttribute","removeData","removeAttribute","type","handler","types","split","REGEXP_SPACES","t","removeEventListener","detachEvent","_handler","once","originalHandler","_len4","_key4","addEventListener","attachEvent","Event","CustomEvent","bubbles","cancelable","detail","document","createEvent","initEvent","initCustomEvent","fireEvent","getEvent","srcElement","pageX","clientX","eventDoc","ownerDocument","doc","documentElement","body","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","getOffset","box","getBoundingClientRect","scrollX","scrollY","getTouchesCenter","touches","touch","getByTag","getElementsByTagName","getElementsByClassName","querySelectorAll","empty","firstChild","parts","match","REGEXP_ORIGINS","location","protocol","hostname","port","timestamp","Date","getTime","IS_SAFARI_OR_UIWEBVIEW","newImage","transforms","push","join","reversed","deg","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","getContext","dstX","dstY","dstWidth","dstHeight","advanced","translateX","translateY","save","translate","drawImage","floor","getStringFromCharCode","dataView","fromCharCode","getUint8","DataView","byteLength","exifIDCode","tiffOffset","firstIFDOffset","littleEndian","endianness","app1Start","ifdStart","getUint16","getUint32","setUint16","dataURL","base64","REGEXP_DATA_URL_HEAD","binary","atob","Uint8Array","charCodeAt","btoa","Symbol","iterator","REGEXP_USERAGENT","navigator","userAgent","objectProto","String","DATA_PREVIEW","image2","html","cssText","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","EVENT_MOUSE_DOWN","EVENT_MOUSE_MOVE","EVENT_MOUSE_UP","EVENT_WHEEL","EVENT_DBLCLICK","EVENT_RESIZE","EVENT_CROP_START","EVENT_CROP_MOVE","EVENT_CROP_END","EVENT_ZOOM","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","REGEXP_ACTIONS","n","delta","preventDefault","deltaY","wheelDelta","touchesLength","action","startX2","startY2","originalEvent","cropping","startX","startY","endX2","endY2","endX","endY","change","shiftKey","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","ACTION_NORTH_EAST","ACTION_NORTH_WEST","right","bottom","renderable","range","X","Y","x1","y1","x2","y2","z1","sqrt","z2","_toConsumableArray","arr2","_originalEvent","oldRatio","scaled","widthChanged","heightChanged","scaledWidth","scaledHeight","scaledRatio","fillColor","fillStyle","fillRect","parameters","sourceWidth","sourceHeight","params","srcX","srcY","srcWidth","srcHeight","croppable"],"mappings":"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","file":"1-ddb8e369.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 583:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(76);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar optionProps = ['dragMode', 'aspectRatio', 'data',\n// unchangeable props start from here\n'viewMode', 'preview', 'responsive', 'restore', 'checkCrossOrigin', 'checkOrientation', 'modal', 'guides', 'center', 'highlight', 'background', 'autoCrop', 'autoCropArea', 'movable', 'rotatable', 'scalable', 'zoomable', 'zoomOnTouch', 'zoomOnWheel', 'wheelZoomRation', 'cropBoxMovable', 'cropBoxResizable', 'toggleDragModeOnDblclick', 'minContainerWidth', 'minContainerHeight', 'minCanvasWidth', 'minCanvasHeight', 'minCropBoxWidth', 'minCropBoxHeight', 'ready', 'cropstart', 'cropmove', 'cropend', 'crop', 'zoom'];\n\nvar unchangeableProps = optionProps.slice(3);\n\nvar ReactCropper = function (_Component) {\n  _inherits(ReactCropper, _Component);\n\n  function ReactCropper() {\n    _classCallCheck(this, ReactCropper);\n\n    return _possibleConstructorReturn(this, (ReactCropper.__proto__ || Object.getPrototypeOf(ReactCropper)).apply(this, arguments));\n  }\n\n  _createClass(ReactCropper, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var options = Object.keys(this.props).filter(function (propKey) {\n        return optionProps.indexOf(propKey) !== -1;\n      }).reduce(function (prevOptions, propKey) {\n        return _extends({}, prevOptions, _defineProperty({}, propKey, _this2.props[propKey]));\n      }, {});\n\n      var Cropper = __webpack_require__(692).default;\n      this.cropper = new Cropper(this.img, options);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      if (nextProps.src !== this.props.src) {\n        this.cropper.reset().clear().replace(nextProps.src);\n      }\n      if (nextProps.aspectRatio !== this.props.aspectRatio) {\n        this.setAspectRatio(nextProps.aspectRatio);\n      }\n      if (nextProps.data !== this.props.data) {\n        this.setData(nextProps.data);\n      }\n      if (nextProps.dragMode !== this.props.dragMode) {\n        this.setDragMode(nextProps.dragMode);\n      }\n      if (nextProps.cropBoxData !== this.props.cropBoxData) {\n        this.setCropBoxData(nextProps.cropBoxData);\n      }\n      if (nextProps.canvasData !== this.props.canvasData) {\n        this.setCanvasData(nextProps.canvasData);\n      }\n      if (nextProps.moveTo !== this.props.moveTo) {\n        if (nextProps.moveTo.length > 1) {\n          this.moveTo(nextProps.moveTo[0], nextProps.moveTo[1]);\n        } else {\n          this.moveTo(nextProps.moveTo[0]);\n        }\n      }\n      if (nextProps.zoomTo !== this.props.zoomTo) {\n        this.zoomTo(nextProps.zoomTo);\n      }\n      if (nextProps.rotateTo !== this.props.rotateTo) {\n        this.rotateTo(nextProps.rotateTo);\n      }\n      if (nextProps.scaleX !== this.props.scaleX) {\n        this.scaleX(nextProps.scaleX);\n      }\n      if (nextProps.scaleY !== this.props.scaleY) {\n        this.scaleY(nextProps.scaleY);\n      }\n      if (nextProps.enable !== this.props.enable) {\n        if (nextProps.enable) {\n          this.enable();\n        } else {\n          this.disable();\n        }\n      }\n\n      Object.keys(nextProps).forEach(function (propKey) {\n        if (nextProps[propKey] !== _this3.props[propKey] && unchangeableProps.indexOf(propKey) !== -1) {\n          throw new Error('prop: ' + propKey + ' can\\'t be change after componentDidMount');\n        }\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.img) {\n        // Destroy the cropper, this makes sure events such as resize are cleaned up and do not leak\n        this.cropper.destroy();\n        delete this.img;\n        delete this.cropper;\n      }\n    }\n  }, {\n    key: 'setDragMode',\n    value: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }, {\n    key: 'setAspectRatio',\n    value: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    }\n  }, {\n    key: 'getCroppedCanvas',\n    value: function getCroppedCanvas(options) {\n      return this.cropper.getCroppedCanvas(options);\n    }\n  }, {\n    key: 'setCropBoxData',\n    value: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    }\n  }, {\n    key: 'getCropBoxData',\n    value: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    }\n  }, {\n    key: 'setCanvasData',\n    value: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    }\n  }, {\n    key: 'getCanvasData',\n    value: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    }\n  }, {\n    key: 'getImageData',\n    value: function getImageData() {\n      return this.cropper.getImageData();\n    }\n  }, {\n    key: 'getContainerData',\n    value: function getContainerData() {\n      return this.cropper.getContainerData();\n    }\n  }, {\n    key: 'setData',\n    value: function setData(data) {\n      return this.cropper.setData(data);\n    }\n  }, {\n    key: 'getData',\n    value: function getData(rounded) {\n      return this.cropper.getData(rounded);\n    }\n  }, {\n    key: 'crop',\n    value: function crop() {\n      return this.cropper.crop();\n    }\n  }, {\n    key: 'move',\n    value: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    }\n  }, {\n    key: 'moveTo',\n    value: function moveTo(x, y) {\n      return this.cropper.moveTo(x, y);\n    }\n  }, {\n    key: 'zoom',\n    value: function zoom(ratio) {\n      return this.cropper.zoom(ratio);\n    }\n  }, {\n    key: 'zoomTo',\n    value: function zoomTo(ratio) {\n      return this.cropper.zoomTo(ratio);\n    }\n  }, {\n    key: 'rotate',\n    value: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    }\n  }, {\n    key: 'rotateTo',\n    value: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      return this.cropper.enable();\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      return this.cropper.disable();\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      return this.cropper.reset();\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      return this.cropper.clear();\n    }\n  }, {\n    key: 'replace',\n    value: function replace(url, onlyColorChanged) {\n      return this.cropper.replace(url, onlyColorChanged);\n    }\n  }, {\n    key: 'scale',\n    value: function scale(scaleX, scaleY) {\n      return this.cropper.scale(scaleX, scaleY);\n    }\n  }, {\n    key: 'scaleX',\n    value: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    }\n  }, {\n    key: 'scaleY',\n    value: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          src = _props.src,\n          alt = _props.alt,\n          crossOrigin = _props.crossOrigin;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          src: null,\n          crossOrigin: null,\n          alt: null,\n          style: this.props.style,\n          className: this.props.className\n        },\n        _react2.default.createElement('img', {\n          crossOrigin: crossOrigin,\n          ref: function ref(img) {\n            _this4.img = img;\n          },\n          src: src,\n          alt: alt === undefined ? 'picture' : alt,\n          style: { opacity: 0 }\n        })\n      );\n    }\n  }]);\n\n  return ReactCropper;\n}(_react.Component);\n\nReactCropper.propTypes = {\n  style: _react.PropTypes.object,\n  className: _react.PropTypes.string,\n\n  // react cropper options\n  crossOrigin: _react.PropTypes.string,\n  src: _react.PropTypes.string,\n  alt: _react.PropTypes.string,\n\n  // props of option can be changed after componentDidmount\n  aspectRatio: _react.PropTypes.number,\n  dragMode: _react.PropTypes.oneOf(['crop', 'move', 'none']),\n  data: _react.PropTypes.shape({\n    x: _react.PropTypes.number,\n    y: _react.PropTypes.number,\n    width: _react.PropTypes.number,\n    height: _react.PropTypes.number,\n    rotate: _react.PropTypes.number,\n    scaleX: _react.PropTypes.number,\n    scaleY: _react.PropTypes.number\n  }),\n  scaleX: _react.PropTypes.number,\n  scaleY: _react.PropTypes.number,\n  enable: _react.PropTypes.bool,\n  cropBoxData: _react.PropTypes.shape({\n    left: _react.PropTypes.number,\n    top: _react.PropTypes.number,\n    width: _react.PropTypes.number,\n    hegiht: _react.PropTypes.number\n  }),\n  canvasData: _react.PropTypes.shape({\n    left: _react.PropTypes.number,\n    top: _react.PropTypes.number,\n    width: _react.PropTypes.number,\n    hegiht: _react.PropTypes.number\n  }),\n  zoomTo: _react.PropTypes.number,\n  moveTo: _react.PropTypes.arrayOf(_react.PropTypes.number),\n  rotateTo: _react.PropTypes.number,\n\n  // cropperjs options\n  // https://github.com/fengyuanchen/cropperjs#options\n  // aspectRatio, dragMode, data\n  viewMode: _react.PropTypes.oneOf([0, 1, 2, 3]),\n  preview: _react.PropTypes.string,\n  responsive: _react.PropTypes.bool,\n  restore: _react.PropTypes.bool,\n  checkCrossOrigin: _react.PropTypes.bool,\n  checkOrientation: _react.PropTypes.bool,\n  modal: _react.PropTypes.bool,\n  guides: _react.PropTypes.bool,\n  center: _react.PropTypes.bool,\n  highlight: _react.PropTypes.bool,\n  background: _react.PropTypes.bool,\n  autoCrop: _react.PropTypes.bool,\n  autoCropArea: _react.PropTypes.number,\n  movable: _react.PropTypes.bool,\n  rotatable: _react.PropTypes.bool,\n  scalable: _react.PropTypes.bool,\n  zoomable: _react.PropTypes.bool,\n  zoomOnTouch: _react.PropTypes.bool,\n  zoomOnWheel: _react.PropTypes.bool,\n  wheelZoomRation: _react.PropTypes.number,\n  cropBoxMovable: _react.PropTypes.bool,\n  cropBoxResizable: _react.PropTypes.bool,\n  toggleDragModeOnDblclick: _react.PropTypes.bool,\n  minContainerWidth: _react.PropTypes.number,\n  minContainerHeight: _react.PropTypes.number,\n  minCanvasWidth: _react.PropTypes.number,\n  minCanvasHeight: _react.PropTypes.number,\n  minCropBoxWidth: _react.PropTypes.number,\n  minCropBoxHeight: _react.PropTypes.number,\n  ready: _react.PropTypes.func,\n  cropstart: _react.PropTypes.func,\n  cropmove: _react.PropTypes.func,\n  cropend: _react.PropTypes.func,\n  crop: _react.PropTypes.func,\n  zoom: _react.PropTypes.func\n};\n\nReactCropper.defaultProps = {\n  src: null,\n  dragMode: 'crop',\n  data: null,\n  scaleX: 1,\n  scaleY: 1,\n  enable: true,\n  zoomTo: 1,\n  rotateTo: 0\n};\n\nexports.default = ReactCropper;\n\n\n/***/ }),\n\n/***/ 692:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * Cropper.js v0.8.1\n * https://github.com/fengyuanchen/cropperjs\n *\n * Copyright (c) 2015-2016 Fengyuan Chen\n * Released under the MIT license\n *\n * Date: 2016-09-03T04:55:16.458Z\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _defaults = __webpack_require__(1);\n\t\n\tvar _defaults2 = _interopRequireDefault(_defaults);\n\t\n\tvar _template = __webpack_require__(2);\n\t\n\tvar _template2 = _interopRequireDefault(_template);\n\t\n\tvar _render = __webpack_require__(3);\n\t\n\tvar _render2 = _interopRequireDefault(_render);\n\t\n\tvar _preview = __webpack_require__(5);\n\t\n\tvar _preview2 = _interopRequireDefault(_preview);\n\t\n\tvar _events = __webpack_require__(6);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _handlers = __webpack_require__(7);\n\t\n\tvar _handlers2 = _interopRequireDefault(_handlers);\n\t\n\tvar _change = __webpack_require__(8);\n\t\n\tvar _change2 = _interopRequireDefault(_change);\n\t\n\tvar _methods = __webpack_require__(9);\n\t\n\tvar _methods2 = _interopRequireDefault(_methods);\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Constants\n\tvar NAMESPACE = 'cropper';\n\t\n\t// Classes\n\tvar CLASS_HIDDEN = NAMESPACE + '-hidden';\n\t\n\t// Events\n\tvar EVENT_ERROR = 'error';\n\tvar EVENT_LOAD = 'load';\n\tvar EVENT_READY = 'ready';\n\tvar EVENT_CROP = 'crop';\n\t\n\t// RegExps\n\tvar REGEXP_DATA_URL = /^data:/;\n\tvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg.*;base64,/;\n\t\n\tvar AnotherCropper = void 0;\n\t\n\tvar Cropper = function () {\n\t  function Cropper(element, options) {\n\t    _classCallCheck(this, Cropper);\n\t\n\t    var self = this;\n\t\n\t    self.element = element;\n\t    self.options = $.extend({}, _defaults2.default, $.isPlainObject(options) && options);\n\t    self.loaded = false;\n\t    self.ready = false;\n\t    self.complete = false;\n\t    self.rotated = false;\n\t    self.cropped = false;\n\t    self.disabled = false;\n\t    self.replaced = false;\n\t    self.limited = false;\n\t    self.wheeling = false;\n\t    self.isImg = false;\n\t    self.originalUrl = '';\n\t    self.canvasData = null;\n\t    self.cropBoxData = null;\n\t    self.previews = null;\n\t    self.init();\n\t  }\n\t\n\t  _createClass(Cropper, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var self = this;\n\t      var element = self.element;\n\t      var tagName = element.tagName.toLowerCase();\n\t      var url = void 0;\n\t\n\t      if ($.getData(element, NAMESPACE)) {\n\t        return;\n\t      }\n\t\n\t      $.setData(element, NAMESPACE, self);\n\t\n\t      if (tagName === 'img') {\n\t        self.isImg = true;\n\t\n\t        // e.g.: \"img/picture.jpg\"\n\t        self.originalUrl = url = element.getAttribute('src');\n\t\n\t        // Stop when it's a blank image\n\t        if (!url) {\n\t          return;\n\t        }\n\t\n\t        // e.g.: \"http://example.com/img/picture.jpg\"\n\t        url = element.src;\n\t      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n\t        url = element.toDataURL();\n\t      }\n\t\n\t      self.load(url);\n\t    }\n\t  }, {\n\t    key: 'load',\n\t    value: function load(url) {\n\t      var self = this;\n\t      var options = self.options;\n\t      var element = self.element;\n\t\n\t      if (!url) {\n\t        return;\n\t      }\n\t\n\t      self.url = url;\n\t      self.imageData = {};\n\t\n\t      if (!options.checkOrientation || !window.ArrayBuffer) {\n\t        self.clone();\n\t        return;\n\t      }\n\t\n\t      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\t      if (REGEXP_DATA_URL.test(url)) {\n\t        if (REGEXP_DATA_URL_JPEG) {\n\t          self.read($.dataURLToArrayBuffer(url));\n\t        } else {\n\t          self.clone();\n\t        }\n\t        return;\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest();\n\t\n\t      xhr.onerror = xhr.onabort = function () {\n\t        self.clone();\n\t      };\n\t\n\t      xhr.onload = function () {\n\t        self.read(xhr.response);\n\t      };\n\t\n\t      if (options.checkCrossOrigin && $.isCrossOriginURL(url) && element.crossOrigin) {\n\t        url = $.addTimestamp(url);\n\t      }\n\t\n\t      xhr.open('get', url);\n\t      xhr.responseType = 'arraybuffer';\n\t      xhr.send();\n\t    }\n\t  }, {\n\t    key: 'read',\n\t    value: function read(arrayBuffer) {\n\t      var self = this;\n\t      var options = self.options;\n\t      var orientation = $.getOrientation(arrayBuffer);\n\t      var imageData = self.imageData;\n\t      var rotate = 0;\n\t      var scaleX = 1;\n\t      var scaleY = 1;\n\t\n\t      if (orientation > 1) {\n\t        self.url = $.arrayBufferToDataURL(arrayBuffer);\n\t\n\t        switch (orientation) {\n\t\n\t          // flip horizontal\n\t          case 2:\n\t            scaleX = -1;\n\t            break;\n\t\n\t          // rotate left 180°\n\t          case 3:\n\t            rotate = -180;\n\t            break;\n\t\n\t          // flip vertical\n\t          case 4:\n\t            scaleY = -1;\n\t            break;\n\t\n\t          // flip vertical + rotate right 90°\n\t          case 5:\n\t            rotate = 90;\n\t            scaleY = -1;\n\t            break;\n\t\n\t          // rotate right 90°\n\t          case 6:\n\t            rotate = 90;\n\t            break;\n\t\n\t          // flip horizontal + rotate right 90°\n\t          case 7:\n\t            rotate = 90;\n\t            scaleX = -1;\n\t            break;\n\t\n\t          // rotate left 90°\n\t          case 8:\n\t            rotate = -90;\n\t            break;\n\t        }\n\t      }\n\t\n\t      if (options.rotatable) {\n\t        imageData.rotate = rotate;\n\t      }\n\t\n\t      if (options.scalable) {\n\t        imageData.scaleX = scaleX;\n\t        imageData.scaleY = scaleY;\n\t      }\n\t\n\t      self.clone();\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      var self = this;\n\t      var element = self.element;\n\t      var url = self.url;\n\t      var crossOrigin = void 0;\n\t      var crossOriginUrl = void 0;\n\t      var start = void 0;\n\t      var stop = void 0;\n\t\n\t      if (self.options.checkCrossOrigin && $.isCrossOriginURL(url)) {\n\t        crossOrigin = element.crossOrigin;\n\t\n\t        if (crossOrigin) {\n\t          crossOriginUrl = url;\n\t        } else {\n\t          crossOrigin = 'anonymous';\n\t\n\t          // Bust cache when there is not a \"crossOrigin\" property\n\t          crossOriginUrl = $.addTimestamp(url);\n\t        }\n\t      }\n\t\n\t      self.crossOrigin = crossOrigin;\n\t      self.crossOriginUrl = crossOriginUrl;\n\t\n\t      var image = $.createElement('img');\n\t\n\t      if (crossOrigin) {\n\t        image.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      image.src = crossOriginUrl || url;\n\t      self.image = image;\n\t      self.onStart = start = $.proxy(self.start, self);\n\t      self.onStop = stop = $.proxy(self.stop, self);\n\t\n\t      if (self.isImg) {\n\t        if (element.complete) {\n\t          self.start();\n\t        } else {\n\t          $.addListener(element, EVENT_LOAD, start);\n\t        }\n\t      } else {\n\t        $.addListener(image, EVENT_LOAD, start);\n\t        $.addListener(image, EVENT_ERROR, stop);\n\t        $.addClass(image, 'cropper-hide');\n\t        element.parentNode.insertBefore(image, element.nextSibling);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start(event) {\n\t      var self = this;\n\t      var image = self.isImg ? self.element : self.image;\n\t\n\t      if (event) {\n\t        $.removeListener(image, EVENT_LOAD, self.onStart);\n\t        $.removeListener(image, EVENT_ERROR, self.onStop);\n\t      }\n\t\n\t      $.getImageSize(image, function (naturalWidth, naturalHeight) {\n\t        $.extend(self.imageData, {\n\t          naturalWidth: naturalWidth,\n\t          naturalHeight: naturalHeight,\n\t          aspectRatio: naturalWidth / naturalHeight\n\t        });\n\t\n\t        self.loaded = true;\n\t        self.build();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      var self = this;\n\t      var image = self.image;\n\t\n\t      $.removeListener(image, EVENT_LOAD, self.onStart);\n\t      $.removeListener(image, EVENT_ERROR, self.onStop);\n\t\n\t      $.removeChild(image);\n\t      self.image = null;\n\t    }\n\t  }, {\n\t    key: 'build',\n\t    value: function build() {\n\t      var self = this;\n\t      var options = self.options;\n\t      var element = self.element;\n\t      var image = self.image;\n\t      var container = void 0;\n\t      var cropper = void 0;\n\t      var canvas = void 0;\n\t      var dragBox = void 0;\n\t      var cropBox = void 0;\n\t      var face = void 0;\n\t\n\t      if (!self.loaded) {\n\t        return;\n\t      }\n\t\n\t      // Unbuild first when replace\n\t      if (self.ready) {\n\t        self.unbuild();\n\t      }\n\t\n\t      var template = $.createElement('div');\n\t      template.innerHTML = _template2.default;\n\t\n\t      // Create cropper elements\n\t      self.container = container = element.parentNode;\n\t      self.cropper = cropper = $.getByClass(template, 'cropper-container')[0];\n\t      self.canvas = canvas = $.getByClass(cropper, 'cropper-canvas')[0];\n\t      self.dragBox = dragBox = $.getByClass(cropper, 'cropper-drag-box')[0];\n\t      self.cropBox = cropBox = $.getByClass(cropper, 'cropper-crop-box')[0];\n\t      self.viewBox = $.getByClass(cropper, 'cropper-view-box')[0];\n\t      self.face = face = $.getByClass(cropBox, 'cropper-face')[0];\n\t\n\t      $.appendChild(canvas, image);\n\t\n\t      // Hide the original image\n\t      $.addClass(element, CLASS_HIDDEN);\n\t\n\t      // Inserts the cropper after to the current image\n\t      container.insertBefore(cropper, element.nextSibling);\n\t\n\t      // Show the image if is hidden\n\t      if (!self.isImg) {\n\t        $.removeClass(image, 'cropper-hide');\n\t      }\n\t\n\t      self.initPreview();\n\t      self.bind();\n\t\n\t      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n\t      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\t\n\t      if (options.autoCrop) {\n\t        self.cropped = true;\n\t\n\t        if (options.modal) {\n\t          $.addClass(dragBox, 'cropper-modal');\n\t        }\n\t      } else {\n\t        $.addClass(cropBox, CLASS_HIDDEN);\n\t      }\n\t\n\t      if (!options.guides) {\n\t        $.addClass($.getByClass(cropBox, 'cropper-dashed'), CLASS_HIDDEN);\n\t      }\n\t\n\t      if (!options.center) {\n\t        $.addClass($.getByClass(cropBox, 'cropper-center'), CLASS_HIDDEN);\n\t      }\n\t\n\t      if (options.background) {\n\t        $.addClass(cropper, 'cropper-bg');\n\t      }\n\t\n\t      if (!options.highlight) {\n\t        $.addClass(face, 'cropper-invisible');\n\t      }\n\t\n\t      if (options.cropBoxMovable) {\n\t        $.addClass(face, 'cropper-move');\n\t        $.setData(face, 'action', 'all');\n\t      }\n\t\n\t      if (!options.cropBoxResizable) {\n\t        $.addClass($.getByClass(cropBox, 'cropper-line'), CLASS_HIDDEN);\n\t        $.addClass($.getByClass(cropBox, 'cropper-point'), CLASS_HIDDEN);\n\t      }\n\t\n\t      self.setDragMode(options.dragMode);\n\t      self.render();\n\t      self.ready = true;\n\t      self.setData(options.data);\n\t\n\t      // Call the \"ready\" option asynchronously to keep \"image.cropper\" is defined\n\t      self.completing = setTimeout(function () {\n\t        if ($.isFunction(options.ready)) {\n\t          $.addListener(element, EVENT_READY, options.ready, true);\n\t        }\n\t\n\t        $.dispatchEvent(element, EVENT_READY);\n\t        $.dispatchEvent(element, EVENT_CROP, self.getData());\n\t\n\t        self.complete = true;\n\t      }, 0);\n\t    }\n\t  }, {\n\t    key: 'unbuild',\n\t    value: function unbuild() {\n\t      var self = this;\n\t\n\t      if (!self.ready) {\n\t        return;\n\t      }\n\t\n\t      if (!self.complete) {\n\t        clearTimeout(self.completing);\n\t      }\n\t\n\t      self.ready = false;\n\t      self.complete = false;\n\t      self.initialImageData = null;\n\t\n\t      // Clear `initialCanvasData` is necessary when replace\n\t      self.initialCanvasData = null;\n\t      self.initialCropBoxData = null;\n\t      self.containerData = null;\n\t      self.canvasData = null;\n\t\n\t      // Clear `cropBoxData` is necessary when replace\n\t      self.cropBoxData = null;\n\t      self.unbind();\n\t\n\t      self.resetPreview();\n\t      self.previews = null;\n\t\n\t      self.viewBox = null;\n\t      self.cropBox = null;\n\t      self.dragBox = null;\n\t      self.canvas = null;\n\t      self.container = null;\n\t\n\t      $.removeChild(self.cropper);\n\t      self.cropper = null;\n\t    }\n\t  }], [{\n\t    key: 'noConflict',\n\t    value: function noConflict() {\n\t      window.Cropper = AnotherCropper;\n\t      return Cropper;\n\t    }\n\t  }, {\n\t    key: 'setDefaults',\n\t    value: function setDefaults(options) {\n\t      $.extend(_defaults2.default, $.isPlainObject(options) && options);\n\t    }\n\t  }]);\n\t\n\t  return Cropper;\n\t}();\n\t\n\t$.extend(Cropper.prototype, _render2.default);\n\t$.extend(Cropper.prototype, _preview2.default);\n\t$.extend(Cropper.prototype, _events2.default);\n\t$.extend(Cropper.prototype, _handlers2.default);\n\t$.extend(Cropper.prototype, _change2.default);\n\t$.extend(Cropper.prototype, _methods2.default);\n\t\n\tif (typeof window !== 'undefined') {\n\t  AnotherCropper = window.Cropper;\n\t  window.Cropper = Cropper;\n\t}\n\t\n\texports.default = Cropper;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  // Define the view mode of the cropper\n\t  viewMode: 0, // 0, 1, 2, 3\n\t\n\t  // Define the dragging mode of the cropper\n\t  dragMode: 'crop', // 'crop', 'move' or 'none'\n\t\n\t  // Define the aspect ratio of the crop box\n\t  aspectRatio: NaN,\n\t\n\t  // An object with the previous cropping result data\n\t  data: null,\n\t\n\t  // A selector for adding extra containers to preview\n\t  preview: '',\n\t\n\t  // Re-render the cropper when resize the window\n\t  responsive: true,\n\t\n\t  // Restore the cropped area after resize the window\n\t  restore: true,\n\t\n\t  // Check if the current image is a cross-origin image\n\t  checkCrossOrigin: true,\n\t\n\t  // Check the current image's Exif Orientation information\n\t  checkOrientation: true,\n\t\n\t  // Show the black modal\n\t  modal: true,\n\t\n\t  // Show the dashed lines for guiding\n\t  guides: true,\n\t\n\t  // Show the center indicator for guiding\n\t  center: true,\n\t\n\t  // Show the white modal to highlight the crop box\n\t  highlight: true,\n\t\n\t  // Show the grid background\n\t  background: true,\n\t\n\t  // Enable to crop the image automatically when initialize\n\t  autoCrop: true,\n\t\n\t  // Define the percentage of automatic cropping area when initializes\n\t  autoCropArea: 0.8,\n\t\n\t  // Enable to move the image\n\t  movable: true,\n\t\n\t  // Enable to rotate the image\n\t  rotatable: true,\n\t\n\t  // Enable to scale the image\n\t  scalable: true,\n\t\n\t  // Enable to zoom the image\n\t  zoomable: true,\n\t\n\t  // Enable to zoom the image by dragging touch\n\t  zoomOnTouch: true,\n\t\n\t  // Enable to zoom the image by wheeling mouse\n\t  zoomOnWheel: true,\n\t\n\t  // Define zoom ratio when zoom the image by wheeling mouse\n\t  wheelZoomRatio: 0.1,\n\t\n\t  // Enable to move the crop box\n\t  cropBoxMovable: true,\n\t\n\t  // Enable to resize the crop box\n\t  cropBoxResizable: true,\n\t\n\t  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n\t  toggleDragModeOnDblclick: true,\n\t\n\t  // Size limitation\n\t  minCanvasWidth: 0,\n\t  minCanvasHeight: 0,\n\t  minCropBoxWidth: 0,\n\t  minCropBoxHeight: 0,\n\t  minContainerWidth: 200,\n\t  minContainerHeight: 100,\n\t\n\t  // Shortcuts of events\n\t  ready: null,\n\t  cropstart: null,\n\t  cropmove: null,\n\t  cropend: null,\n\t  crop: null,\n\t  zoom: null\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = '<div class=\"cropper-container\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = {\n\t  render: function render() {\n\t    var self = this;\n\t\n\t    self.initContainer();\n\t    self.initCanvas();\n\t    self.initCropBox();\n\t\n\t    self.renderCanvas();\n\t\n\t    if (self.cropped) {\n\t      self.renderCropBox();\n\t    }\n\t  },\n\t  initContainer: function initContainer() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var element = self.element;\n\t    var container = self.container;\n\t    var cropper = self.cropper;\n\t    var containerData = void 0;\n\t\n\t    $.addClass(cropper, 'cropper-hidden');\n\t    $.removeClass(element, 'cropper-hidden');\n\t\n\t    self.containerData = containerData = {\n\t      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n\t      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n\t    };\n\t\n\t    $.setStyle(cropper, {\n\t      width: containerData.width,\n\t      height: containerData.height\n\t    });\n\t\n\t    $.addClass(element, 'cropper-hidden');\n\t    $.removeClass(cropper, 'cropper-hidden');\n\t  },\n\t\n\t\n\t  // Canvas (image wrapper)\n\t  initCanvas: function initCanvas() {\n\t    var self = this;\n\t    var viewMode = self.options.viewMode;\n\t    var containerData = self.containerData;\n\t    var imageData = self.imageData;\n\t    var rotated = Math.abs(imageData.rotate) === 90;\n\t    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n\t    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n\t    var aspectRatio = naturalWidth / naturalHeight;\n\t    var canvasWidth = containerData.width;\n\t    var canvasHeight = containerData.height;\n\t\n\t    if (containerData.height * aspectRatio > containerData.width) {\n\t      if (viewMode === 3) {\n\t        canvasWidth = containerData.height * aspectRatio;\n\t      } else {\n\t        canvasHeight = containerData.width / aspectRatio;\n\t      }\n\t    } else if (viewMode === 3) {\n\t      canvasHeight = containerData.width / aspectRatio;\n\t    } else {\n\t      canvasWidth = containerData.height * aspectRatio;\n\t    }\n\t\n\t    var canvasData = {\n\t      naturalWidth: naturalWidth,\n\t      naturalHeight: naturalHeight,\n\t      aspectRatio: aspectRatio,\n\t      width: canvasWidth,\n\t      height: canvasHeight\n\t    };\n\t\n\t    canvasData.oldLeft = canvasData.left = (containerData.width - canvasWidth) / 2;\n\t    canvasData.oldTop = canvasData.top = (containerData.height - canvasHeight) / 2;\n\t\n\t    self.canvasData = canvasData;\n\t    self.limited = viewMode === 1 || viewMode === 2;\n\t    self.limitCanvas(true, true);\n\t    self.initialImageData = $.extend({}, imageData);\n\t    self.initialCanvasData = $.extend({}, canvasData);\n\t  },\n\t  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var viewMode = options.viewMode;\n\t    var containerData = self.containerData;\n\t    var canvasData = self.canvasData;\n\t    var aspectRatio = canvasData.aspectRatio;\n\t    var cropBoxData = self.cropBoxData;\n\t    var cropped = self.cropped && cropBoxData;\n\t    var minCanvasWidth = void 0;\n\t    var minCanvasHeight = void 0;\n\t    var newCanvasLeft = void 0;\n\t    var newCanvasTop = void 0;\n\t\n\t    if (sizeLimited) {\n\t      minCanvasWidth = Number(options.minCanvasWidth) || 0;\n\t      minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\t\n\t      if (viewMode > 1) {\n\t        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n\t        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\t\n\t        if (viewMode === 3) {\n\t          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n\t            minCanvasWidth = minCanvasHeight * aspectRatio;\n\t          } else {\n\t            minCanvasHeight = minCanvasWidth / aspectRatio;\n\t          }\n\t        }\n\t      } else if (viewMode > 0) {\n\t        if (minCanvasWidth) {\n\t          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n\t        } else if (minCanvasHeight) {\n\t          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n\t        } else if (cropped) {\n\t          minCanvasWidth = cropBoxData.width;\n\t          minCanvasHeight = cropBoxData.height;\n\t\n\t          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n\t            minCanvasWidth = minCanvasHeight * aspectRatio;\n\t          } else {\n\t            minCanvasHeight = minCanvasWidth / aspectRatio;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (minCanvasWidth && minCanvasHeight) {\n\t        if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n\t          minCanvasHeight = minCanvasWidth / aspectRatio;\n\t        } else {\n\t          minCanvasWidth = minCanvasHeight * aspectRatio;\n\t        }\n\t      } else if (minCanvasWidth) {\n\t        minCanvasHeight = minCanvasWidth / aspectRatio;\n\t      } else if (minCanvasHeight) {\n\t        minCanvasWidth = minCanvasHeight * aspectRatio;\n\t      }\n\t\n\t      canvasData.minWidth = minCanvasWidth;\n\t      canvasData.minHeight = minCanvasHeight;\n\t      canvasData.maxWidth = Infinity;\n\t      canvasData.maxHeight = Infinity;\n\t    }\n\t\n\t    if (positionLimited) {\n\t      if (viewMode) {\n\t        newCanvasLeft = containerData.width - canvasData.width;\n\t        newCanvasTop = containerData.height - canvasData.height;\n\t\n\t        canvasData.minLeft = Math.min(0, newCanvasLeft);\n\t        canvasData.minTop = Math.min(0, newCanvasTop);\n\t        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n\t        canvasData.maxTop = Math.max(0, newCanvasTop);\n\t\n\t        if (cropped && self.limited) {\n\t          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n\t          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n\t          canvasData.maxLeft = cropBoxData.left;\n\t          canvasData.maxTop = cropBoxData.top;\n\t\n\t          if (viewMode === 2) {\n\t            if (canvasData.width >= containerData.width) {\n\t              canvasData.minLeft = Math.min(0, newCanvasLeft);\n\t              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n\t            }\n\t\n\t            if (canvasData.height >= containerData.height) {\n\t              canvasData.minTop = Math.min(0, newCanvasTop);\n\t              canvasData.maxTop = Math.max(0, newCanvasTop);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        canvasData.minLeft = -canvasData.width;\n\t        canvasData.minTop = -canvasData.height;\n\t        canvasData.maxLeft = containerData.width;\n\t        canvasData.maxTop = containerData.height;\n\t      }\n\t    }\n\t  },\n\t  renderCanvas: function renderCanvas(changed) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var imageData = self.imageData;\n\t    var rotate = imageData.rotate;\n\t    var aspectRatio = void 0;\n\t    var rotatedData = void 0;\n\t\n\t    if (self.rotated) {\n\t      self.rotated = false;\n\t\n\t      // Computes rotated sizes with image sizes\n\t      rotatedData = $.getRotatedSizes({\n\t        width: imageData.width,\n\t        height: imageData.height,\n\t        degree: rotate\n\t      });\n\t\n\t      aspectRatio = rotatedData.width / rotatedData.height;\n\t\n\t      if (aspectRatio !== canvasData.aspectRatio) {\n\t        canvasData.left -= (rotatedData.width - canvasData.width) / 2;\n\t        canvasData.top -= (rotatedData.height - canvasData.height) / 2;\n\t        canvasData.width = rotatedData.width;\n\t        canvasData.height = rotatedData.height;\n\t        canvasData.aspectRatio = aspectRatio;\n\t        canvasData.naturalWidth = imageData.naturalWidth;\n\t        canvasData.naturalHeight = imageData.naturalHeight;\n\t\n\t        // Computes rotated sizes with natural image sizes\n\t        if (rotate % 180) {\n\t          rotatedData = $.getRotatedSizes({\n\t            width: imageData.naturalWidth,\n\t            height: imageData.naturalHeight,\n\t            degree: rotate\n\t          });\n\t\n\t          canvasData.naturalWidth = rotatedData.width;\n\t          canvasData.naturalHeight = rotatedData.height;\n\t        }\n\t\n\t        self.limitCanvas(true, false);\n\t      }\n\t    }\n\t\n\t    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n\t      canvasData.left = canvasData.oldLeft;\n\t    }\n\t\n\t    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n\t      canvasData.top = canvasData.oldTop;\n\t    }\n\t\n\t    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n\t    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n\t\n\t    self.limitCanvas(false, true);\n\t\n\t    canvasData.oldLeft = canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n\t    canvasData.oldTop = canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n\t\n\t    $.setStyle(self.canvas, {\n\t      width: canvasData.width,\n\t      height: canvasData.height,\n\t      left: canvasData.left,\n\t      top: canvasData.top\n\t    });\n\t\n\t    self.renderImage();\n\t\n\t    if (self.cropped && self.limited) {\n\t      self.limitCropBox(true, true);\n\t    }\n\t\n\t    if (changed) {\n\t      self.output();\n\t    }\n\t  },\n\t  renderImage: function renderImage(changed) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var imageData = self.imageData;\n\t    var newImageData = void 0;\n\t    var reversedData = void 0;\n\t    var reversedWidth = void 0;\n\t    var reversedHeight = void 0;\n\t\n\t    if (imageData.rotate) {\n\t      reversedData = $.getRotatedSizes({\n\t        width: canvasData.width,\n\t        height: canvasData.height,\n\t        degree: imageData.rotate,\n\t        aspectRatio: imageData.aspectRatio\n\t      }, true);\n\t\n\t      reversedWidth = reversedData.width;\n\t      reversedHeight = reversedData.height;\n\t\n\t      newImageData = {\n\t        width: reversedWidth,\n\t        height: reversedHeight,\n\t        left: (canvasData.width - reversedWidth) / 2,\n\t        top: (canvasData.height - reversedHeight) / 2\n\t      };\n\t    }\n\t\n\t    $.extend(imageData, newImageData || {\n\t      width: canvasData.width,\n\t      height: canvasData.height,\n\t      left: 0,\n\t      top: 0\n\t    });\n\t\n\t    var transform = $.getTransform(imageData);\n\t\n\t    $.setStyle(self.image, {\n\t      width: imageData.width,\n\t      height: imageData.height,\n\t      marginLeft: imageData.left,\n\t      marginTop: imageData.top,\n\t      WebkitTransform: transform,\n\t      msTransform: transform,\n\t      transform: transform\n\t    });\n\t\n\t    if (changed) {\n\t      self.output();\n\t    }\n\t  },\n\t  initCropBox: function initCropBox() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var aspectRatio = options.aspectRatio;\n\t    var autoCropArea = Number(options.autoCropArea) || 0.8;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = {\n\t      width: canvasData.width,\n\t      height: canvasData.height\n\t    };\n\t\n\t    if (aspectRatio) {\n\t      if (canvasData.height * aspectRatio > canvasData.width) {\n\t        cropBoxData.height = cropBoxData.width / aspectRatio;\n\t      } else {\n\t        cropBoxData.width = cropBoxData.height * aspectRatio;\n\t      }\n\t    }\n\t\n\t    self.cropBoxData = cropBoxData;\n\t    self.limitCropBox(true, true);\n\t\n\t    // Initialize auto crop area\n\t    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n\t    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\t\n\t    // The width/height of auto crop area must large than \"minWidth/Height\"\n\t    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n\t    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n\t    cropBoxData.oldLeft = cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n\t    cropBoxData.oldTop = cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n\t\n\t    self.initialCropBoxData = $.extend({}, cropBoxData);\n\t  },\n\t  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var aspectRatio = options.aspectRatio;\n\t    var containerData = self.containerData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = self.cropBoxData;\n\t    var limited = self.limited;\n\t    var minCropBoxWidth = void 0;\n\t    var minCropBoxHeight = void 0;\n\t    var maxCropBoxWidth = void 0;\n\t    var maxCropBoxHeight = void 0;\n\t\n\t    if (sizeLimited) {\n\t      minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n\t      minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n\t\n\t      // The min/maxCropBoxWidth/Height must be less than containerWidth/Height\n\t      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n\t      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\t      maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n\t      maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\n\t\n\t      if (aspectRatio) {\n\t        if (minCropBoxWidth && minCropBoxHeight) {\n\t          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n\t            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n\t          } else {\n\t            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n\t          }\n\t        } else if (minCropBoxWidth) {\n\t          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n\t        } else if (minCropBoxHeight) {\n\t          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n\t        }\n\t\n\t        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n\t          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n\t        } else {\n\t          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n\t        }\n\t      }\n\t\n\t      // The minWidth/Height must be less than maxWidth/Height\n\t      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n\t      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n\t      cropBoxData.maxWidth = maxCropBoxWidth;\n\t      cropBoxData.maxHeight = maxCropBoxHeight;\n\t    }\n\t\n\t    if (positionLimited) {\n\t      if (limited) {\n\t        cropBoxData.minLeft = Math.max(0, canvasData.left);\n\t        cropBoxData.minTop = Math.max(0, canvasData.top);\n\t        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n\t        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n\t      } else {\n\t        cropBoxData.minLeft = 0;\n\t        cropBoxData.minTop = 0;\n\t        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n\t        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n\t      }\n\t    }\n\t  },\n\t  renderCropBox: function renderCropBox() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var containerData = self.containerData;\n\t    var cropBoxData = self.cropBoxData;\n\t\n\t    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n\t      cropBoxData.left = cropBoxData.oldLeft;\n\t    }\n\t\n\t    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n\t      cropBoxData.top = cropBoxData.oldTop;\n\t    }\n\t\n\t    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n\t    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\t\n\t    self.limitCropBox(false, true);\n\t\n\t    cropBoxData.oldLeft = cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n\t    cropBoxData.oldTop = cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n\t\n\t    if (options.movable && options.cropBoxMovable) {\n\t      // Turn to move the canvas when the crop box is equal to the container\n\t      $.setData(self.face, 'action', cropBoxData.width === containerData.width && cropBoxData.height === containerData.height ? 'move' : 'all');\n\t    }\n\t\n\t    $.setStyle(self.cropBox, {\n\t      width: cropBoxData.width,\n\t      height: cropBoxData.height,\n\t      left: cropBoxData.left,\n\t      top: cropBoxData.top\n\t    });\n\t\n\t    if (self.cropped && self.limited) {\n\t      self.limitCanvas(true, true);\n\t    }\n\t\n\t    if (!self.disabled) {\n\t      self.output();\n\t    }\n\t  },\n\t  output: function output() {\n\t    var self = this;\n\t\n\t    self.preview();\n\t\n\t    if (self.complete) {\n\t      $.dispatchEvent(self.element, 'crop', self.getData());\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\texports.typeOf = typeOf;\n\texports.isNumber = isNumber;\n\texports.isUndefined = isUndefined;\n\texports.isObject = isObject;\n\texports.isPlainObject = isPlainObject;\n\texports.isFunction = isFunction;\n\texports.isArray = isArray;\n\texports.toArray = toArray;\n\texports.trim = trim;\n\texports.each = each;\n\texports.extend = extend;\n\texports.proxy = proxy;\n\texports.setStyle = setStyle;\n\texports.hasClass = hasClass;\n\texports.addClass = addClass;\n\texports.removeClass = removeClass;\n\texports.toggleClass = toggleClass;\n\texports.hyphenate = hyphenate;\n\texports.getData = getData;\n\texports.setData = setData;\n\texports.removeData = removeData;\n\texports.removeListener = removeListener;\n\texports.dispatchEvent = dispatchEvent;\n\texports.getEvent = getEvent;\n\texports.getOffset = getOffset;\n\texports.getTouchesCenter = getTouchesCenter;\n\texports.getByTag = getByTag;\n\texports.getByClass = getByClass;\n\texports.createElement = createElement;\n\texports.appendChild = appendChild;\n\texports.removeChild = removeChild;\n\texports.empty = empty;\n\texports.isCrossOriginURL = isCrossOriginURL;\n\texports.addTimestamp = addTimestamp;\n\texports.getImageSize = getImageSize;\n\texports.getTransform = getTransform;\n\texports.getRotatedSizes = getRotatedSizes;\n\texports.getSourceCanvas = getSourceCanvas;\n\texports.getStringFromCharCode = getStringFromCharCode;\n\texports.getOrientation = getOrientation;\n\texports.dataURLToArrayBuffer = dataURLToArrayBuffer;\n\texports.arrayBufferToDataURL = arrayBufferToDataURL;\n\t// RegExps\n\tvar REGEXP_DATA_URL_HEAD = /^data:([^;]+);base64,/;\n\tvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\tvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:\\/\\?#]+):?(\\d*)/i;\n\tvar REGEXP_SPACES = /\\s+/;\n\tvar REGEXP_SUFFIX = /^(width|height|left|top|marginLeft|marginTop)$/;\n\tvar REGEXP_TRIM = /^\\s+(.*)\\s+$/;\n\tvar REGEXP_USERAGENT = /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i;\n\tvar navigator = window.navigator;\n\tvar IS_SAFARI_OR_UIWEBVIEW = navigator && REGEXP_USERAGENT.test(navigator.userAgent);\n\t\n\t// Utilities\n\tvar objectProto = Object.prototype;\n\tvar toString = objectProto.toString;\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\tvar slice = Array.prototype.slice;\n\tvar fromCharCode = String.fromCharCode;\n\t\n\tfunction typeOf(obj) {\n\t  return toString.call(obj).slice(8, -1).toLowerCase();\n\t}\n\t\n\tfunction isNumber(num) {\n\t  return typeof num === 'number' && !isNaN(num);\n\t}\n\t\n\tfunction isUndefined(obj) {\n\t  return typeof obj === 'undefined';\n\t}\n\t\n\tfunction isObject(obj) {\n\t  return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t  if (!isObject(obj)) {\n\t    return false;\n\t  }\n\t\n\t  try {\n\t    var _constructor = obj.constructor;\n\t    var prototype = _constructor.prototype;\n\t\n\t    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\t\n\tfunction isFunction(fn) {\n\t  return typeOf(fn) === 'function';\n\t}\n\t\n\tfunction isArray(arr) {\n\t  return Array.isArray ? Array.isArray(arr) : typeOf(arr) === 'array';\n\t}\n\t\n\tfunction toArray(obj, offset) {\n\t  offset = offset >= 0 ? offset : 0;\n\t\n\t  if (Array.from) {\n\t    return Array.from(obj).slice(offset);\n\t  }\n\t\n\t  return slice.call(obj, offset);\n\t}\n\t\n\tfunction trim(str) {\n\t  if (typeof str === 'string') {\n\t    str = str.trim ? str.trim() : str.replace(REGEXP_TRIM, '$1');\n\t  }\n\t\n\t  return str;\n\t}\n\t\n\tfunction each(obj, callback) {\n\t  if (obj && isFunction(callback)) {\n\t    var i = void 0;\n\t\n\t    if (isArray(obj) || isNumber(obj.length) /* array-like */) {\n\t        var length = obj.length;\n\t\n\t        for (i = 0; i < length; i++) {\n\t          if (callback.call(obj, obj[i], i, obj) === false) {\n\t            break;\n\t          }\n\t        }\n\t      } else if (isObject(obj)) {\n\t      Object.keys(obj).forEach(function (key) {\n\t        callback.call(obj, obj[key], key, obj);\n\t      });\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\tfunction extend() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  var deep = args[0] === true;\n\t  var data = deep ? args[1] : args[0];\n\t\n\t  if (args.length > 1) {\n\t    // if (Object.assign) {\n\t    //   return Object.assign.apply(Object, args);\n\t    // }\n\t\n\t    args.shift();\n\t\n\t    args.forEach(function (arg) {\n\t      if (isObject(arg)) {\n\t        Object.keys(arg).forEach(function (key) {\n\t          if (deep && isObject(data[key])) {\n\t            extend(true, data[key], arg[key]);\n\t          } else {\n\t            data[key] = arg[key];\n\t          }\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  return data;\n\t}\n\t\n\tfunction proxy(fn, context) {\n\t  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t    args[_key2 - 2] = arguments[_key2];\n\t  }\n\t\n\t  return function () {\n\t    for (var _len3 = arguments.length, args2 = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t      args2[_key3] = arguments[_key3];\n\t    }\n\t\n\t    return fn.apply(context, args.concat(args2));\n\t  };\n\t}\n\t\n\tfunction setStyle(element, styles) {\n\t  var style = element.style;\n\t\n\t  each(styles, function (value, property) {\n\t    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n\t      value += 'px';\n\t    }\n\t\n\t    style[property] = value;\n\t  });\n\t}\n\t\n\tfunction hasClass(element, value) {\n\t  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n\t}\n\t\n\tfunction addClass(element, value) {\n\t  if (isNumber(element.length)) {\n\t    each(element, function (elem) {\n\t      addClass(elem, value);\n\t    });\n\t    return;\n\t  }\n\t\n\t  if (element.classList) {\n\t    element.classList.add(value);\n\t    return;\n\t  }\n\t\n\t  var className = trim(element.className);\n\t\n\t  if (!className) {\n\t    element.className = value;\n\t  } else if (className.indexOf(value) < 0) {\n\t    element.className = className + ' ' + value;\n\t  }\n\t}\n\t\n\tfunction removeClass(element, value) {\n\t  if (isNumber(element.length)) {\n\t    each(element, function (elem) {\n\t      removeClass(elem, value);\n\t    });\n\t    return;\n\t  }\n\t\n\t  if (element.classList) {\n\t    element.classList.remove(value);\n\t    return;\n\t  }\n\t\n\t  if (element.className.indexOf(value) >= 0) {\n\t    element.className = element.className.replace(value, '');\n\t  }\n\t}\n\t\n\tfunction toggleClass(element, value, added) {\n\t  if (isNumber(element.length)) {\n\t    each(element, function (elem) {\n\t      toggleClass(elem, value, added);\n\t    });\n\t    return;\n\t  }\n\t\n\t  // IE10-11 doesn't support the second parameter of `classList.toggle`\n\t  if (added) {\n\t    addClass(element, value);\n\t  } else {\n\t    removeClass(element, value);\n\t  }\n\t}\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n\t}\n\t\n\tfunction getData(element, name) {\n\t  if (isObject(element[name])) {\n\t    return element[name];\n\t  } else if (element.dataset) {\n\t    return element.dataset[name];\n\t  }\n\t\n\t  return element.getAttribute('data-' + hyphenate(name));\n\t}\n\t\n\tfunction setData(element, name, data) {\n\t  if (isObject(data)) {\n\t    element[name] = data;\n\t  } else if (element.dataset) {\n\t    element.dataset[name] = data;\n\t  } else {\n\t    element.setAttribute('data-' + hyphenate(name), data);\n\t  }\n\t}\n\t\n\tfunction removeData(element, name) {\n\t  if (isObject(element[name])) {\n\t    delete element[name];\n\t  } else if (element.dataset) {\n\t    delete element.dataset[name];\n\t  } else {\n\t    element.removeAttribute('data-' + hyphenate(name));\n\t  }\n\t}\n\t\n\tfunction removeListener(element, type, handler) {\n\t  var types = trim(type).split(REGEXP_SPACES);\n\t\n\t  if (types.length > 1) {\n\t    each(types, function (t) {\n\t      removeListener(element, t, handler);\n\t    });\n\t    return;\n\t  }\n\t\n\t  if (element.removeEventListener) {\n\t    element.removeEventListener(type, handler, false);\n\t  } else if (element.detachEvent) {\n\t    element.detachEvent('on' + type, handler);\n\t  }\n\t}\n\t\n\tfunction addListener(element, type, _handler, once) {\n\t  var types = trim(type).split(REGEXP_SPACES);\n\t  var originalHandler = _handler;\n\t\n\t  if (types.length > 1) {\n\t    each(types, function (t) {\n\t      addListener(element, t, _handler);\n\t    });\n\t    return;\n\t  }\n\t\n\t  if (once) {\n\t    _handler = function handler() {\n\t      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t        args[_key4] = arguments[_key4];\n\t      }\n\t\n\t      removeListener(element, type, _handler);\n\t\n\t      return originalHandler.apply(element, args);\n\t    };\n\t  }\n\t\n\t  if (element.addEventListener) {\n\t    element.addEventListener(type, _handler, false);\n\t  } else if (element.attachEvent) {\n\t    element.attachEvent('on${type}', _handler);\n\t  }\n\t}\n\t\n\texports.addListener = addListener;\n\tfunction dispatchEvent(element, type, data) {\n\t  if (element.dispatchEvent) {\n\t    var event = void 0;\n\t\n\t    // Event and CustomEvent on IE9-11 are global objects, not constructors\n\t    if (isFunction(Event) && isFunction(CustomEvent)) {\n\t      if (isUndefined(data)) {\n\t        event = new Event(type, {\n\t          bubbles: true,\n\t          cancelable: true\n\t        });\n\t      } else {\n\t        event = new CustomEvent(type, {\n\t          detail: data,\n\t          bubbles: true,\n\t          cancelable: true\n\t        });\n\t      }\n\t    } else if (isUndefined(data)) {\n\t      event = document.createEvent('Event');\n\t      event.initEvent(type, true, true);\n\t    } else {\n\t      event = document.createEvent('CustomEvent');\n\t      event.initCustomEvent(type, true, true, data);\n\t    }\n\t\n\t    // IE9+\n\t    return element.dispatchEvent(event);\n\t  } else if (element.fireEvent) {\n\t    // IE6-10 (native events only)\n\t    return element.fireEvent('on' + type);\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tfunction getEvent(event) {\n\t  var e = event || window.event;\n\t\n\t  // Fix target property (IE8)\n\t  if (!e.target) {\n\t    e.target = e.srcElement || document;\n\t  }\n\t\n\t  if (!isNumber(e.pageX) && isNumber(e.clientX)) {\n\t    var eventDoc = event.target.ownerDocument || document;\n\t    var doc = eventDoc.documentElement;\n\t    var body = eventDoc.body;\n\t\n\t    e.pageX = e.clientX + ((doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0));\n\t    e.pageY = e.clientY + ((doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0));\n\t  }\n\t\n\t  return e;\n\t}\n\t\n\tfunction getOffset(element) {\n\t  var doc = document.documentElement;\n\t  var box = element.getBoundingClientRect();\n\t\n\t  return {\n\t    left: box.left + ((window.scrollX || doc && doc.scrollLeft || 0) - (doc && doc.clientLeft || 0)),\n\t    top: box.top + ((window.scrollY || doc && doc.scrollTop || 0) - (doc && doc.clientTop || 0))\n\t  };\n\t}\n\t\n\tfunction getTouchesCenter(touches) {\n\t  var length = touches.length;\n\t  var pageX = 0;\n\t  var pageY = 0;\n\t\n\t  if (length) {\n\t    each(touches, function (touch) {\n\t      pageX += touch.pageX;\n\t      pageY += touch.pageY;\n\t    });\n\t\n\t    pageX /= length;\n\t    pageY /= length;\n\t  }\n\t\n\t  return {\n\t    pageX: pageX,\n\t    pageY: pageY\n\t  };\n\t}\n\t\n\tfunction getByTag(element, tagName) {\n\t  return element.getElementsByTagName(tagName);\n\t}\n\t\n\tfunction getByClass(element, className) {\n\t  return element.getElementsByClassName ? element.getElementsByClassName(className) : element.querySelectorAll('.' + className);\n\t}\n\t\n\tfunction createElement(tagName) {\n\t  return document.createElement(tagName);\n\t}\n\t\n\tfunction appendChild(element, elem) {\n\t  element.appendChild(elem);\n\t}\n\t\n\tfunction removeChild(element) {\n\t  if (element.parentNode) {\n\t    element.parentNode.removeChild(element);\n\t  }\n\t}\n\t\n\tfunction empty(element) {\n\t  while (element.firstChild) {\n\t    element.removeChild(element.firstChild);\n\t  }\n\t}\n\t\n\tfunction isCrossOriginURL(url) {\n\t  var parts = url.match(REGEXP_ORIGINS);\n\t\n\t  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n\t}\n\t\n\tfunction addTimestamp(url) {\n\t  var timestamp = 'timestamp=' + new Date().getTime();\n\t\n\t  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n\t}\n\t\n\tfunction getImageSize(image, callback) {\n\t  // Modern browsers (ignore Safari)\n\t  if (image.naturalWidth && !IS_SAFARI_OR_UIWEBVIEW) {\n\t    callback(image.naturalWidth, image.naturalHeight);\n\t    return;\n\t  }\n\t\n\t  // IE8: Don't use `new Image()` here\n\t  var newImage = createElement('img');\n\t\n\t  newImage.onload = function load() {\n\t    callback(this.width, this.height);\n\t  };\n\t\n\t  newImage.src = image.src;\n\t}\n\t\n\tfunction getTransform(data) {\n\t  var transforms = [];\n\t  var rotate = data.rotate;\n\t  var scaleX = data.scaleX;\n\t  var scaleY = data.scaleY;\n\t\n\t  // Rotate should come first before scale to match orientation transform\n\t  if (isNumber(rotate) && rotate !== 0) {\n\t    transforms.push('rotate(' + rotate + 'deg)');\n\t  }\n\t\n\t  if (isNumber(scaleX) && scaleX !== 1) {\n\t    transforms.push('scaleX(' + scaleX + ')');\n\t  }\n\t\n\t  if (isNumber(scaleY) && scaleY !== 1) {\n\t    transforms.push('scaleY(' + scaleY + ')');\n\t  }\n\t\n\t  return transforms.length ? transforms.join(' ') : 'none';\n\t}\n\t\n\tfunction getRotatedSizes(data, reversed) {\n\t  var deg = Math.abs(data.degree) % 180;\n\t  var arc = (deg > 90 ? 180 - deg : deg) * Math.PI / 180;\n\t  var sinArc = Math.sin(arc);\n\t  var cosArc = Math.cos(arc);\n\t  var width = data.width;\n\t  var height = data.height;\n\t  var aspectRatio = data.aspectRatio;\n\t  var newWidth = void 0;\n\t  var newHeight = void 0;\n\t\n\t  if (!reversed) {\n\t    newWidth = width * cosArc + height * sinArc;\n\t    newHeight = width * sinArc + height * cosArc;\n\t  } else {\n\t    newWidth = width / (cosArc + sinArc / aspectRatio);\n\t    newHeight = newWidth / aspectRatio;\n\t  }\n\t\n\t  return {\n\t    width: newWidth,\n\t    height: newHeight\n\t  };\n\t}\n\t\n\tfunction getSourceCanvas(image, data) {\n\t  var canvas = createElement('canvas');\n\t  var context = canvas.getContext('2d');\n\t  var dstX = 0;\n\t  var dstY = 0;\n\t  var dstWidth = data.naturalWidth;\n\t  var dstHeight = data.naturalHeight;\n\t  var rotate = data.rotate;\n\t  var scaleX = data.scaleX;\n\t  var scaleY = data.scaleY;\n\t  var scalable = isNumber(scaleX) && isNumber(scaleY) && (scaleX !== 1 || scaleY !== 1);\n\t  var rotatable = isNumber(rotate) && rotate !== 0;\n\t  var advanced = rotatable || scalable;\n\t  var canvasWidth = dstWidth * Math.abs(scaleX || 1);\n\t  var canvasHeight = dstHeight * Math.abs(scaleY || 1);\n\t  var translateX = void 0;\n\t  var translateY = void 0;\n\t  var rotated = void 0;\n\t\n\t  if (scalable) {\n\t    translateX = canvasWidth / 2;\n\t    translateY = canvasHeight / 2;\n\t  }\n\t\n\t  if (rotatable) {\n\t    rotated = getRotatedSizes({\n\t      width: canvasWidth,\n\t      height: canvasHeight,\n\t      degree: rotate\n\t    });\n\t\n\t    canvasWidth = rotated.width;\n\t    canvasHeight = rotated.height;\n\t    translateX = canvasWidth / 2;\n\t    translateY = canvasHeight / 2;\n\t  }\n\t\n\t  canvas.width = canvasWidth;\n\t  canvas.height = canvasHeight;\n\t\n\t  if (advanced) {\n\t    dstX = -dstWidth / 2;\n\t    dstY = -dstHeight / 2;\n\t\n\t    context.save();\n\t    context.translate(translateX, translateY);\n\t  }\n\t\n\t  // Rotate should come first before scale as in the \"getTransform\" function\n\t  if (rotatable) {\n\t    context.rotate(rotate * Math.PI / 180);\n\t  }\n\t\n\t  if (scalable) {\n\t    context.scale(scaleX, scaleY);\n\t  }\n\t\n\t  context.drawImage(image, Math.floor(dstX), Math.floor(dstY), Math.floor(dstWidth), Math.floor(dstHeight));\n\t\n\t  if (advanced) {\n\t    context.restore();\n\t  }\n\t\n\t  return canvas;\n\t}\n\t\n\tfunction getStringFromCharCode(dataView, start, length) {\n\t  var str = '';\n\t  var i = start;\n\t\n\t  for (length += start; i < length; i++) {\n\t    str += fromCharCode(dataView.getUint8(i));\n\t  }\n\t\n\t  return str;\n\t}\n\t\n\tfunction getOrientation(arrayBuffer) {\n\t  var dataView = new DataView(arrayBuffer);\n\t  var length = dataView.byteLength;\n\t  var orientation = void 0;\n\t  var exifIDCode = void 0;\n\t  var tiffOffset = void 0;\n\t  var firstIFDOffset = void 0;\n\t  var littleEndian = void 0;\n\t  var endianness = void 0;\n\t  var app1Start = void 0;\n\t  var ifdStart = void 0;\n\t  var offset = void 0;\n\t  var i = void 0;\n\t\n\t  // Only handle JPEG image (start by 0xFFD8)\n\t  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n\t    offset = 2;\n\t\n\t    while (offset < length) {\n\t      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n\t        app1Start = offset;\n\t        break;\n\t      }\n\t\n\t      offset++;\n\t    }\n\t  }\n\t\n\t  if (app1Start) {\n\t    exifIDCode = app1Start + 4;\n\t    tiffOffset = app1Start + 10;\n\t\n\t    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n\t      endianness = dataView.getUint16(tiffOffset);\n\t      littleEndian = endianness === 0x4949;\n\t\n\t      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n\t          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n\t            firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\t\n\t            if (firstIFDOffset >= 0x00000008) {\n\t              ifdStart = tiffOffset + firstIFDOffset;\n\t            }\n\t          }\n\t        }\n\t    }\n\t  }\n\t\n\t  if (ifdStart) {\n\t    length = dataView.getUint16(ifdStart, littleEndian);\n\t\n\t    for (i = 0; i < length; i++) {\n\t      offset = ifdStart + i * 12 + 2;\n\t\n\t      if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n\t          // 8 is the offset of the current tag's value\n\t          offset += 8;\n\t\n\t          // Get the original orientation value\n\t          orientation = dataView.getUint16(offset, littleEndian);\n\t\n\t          // Override the orientation with its default value for Safari\n\t          if (IS_SAFARI_OR_UIWEBVIEW) {\n\t            dataView.setUint16(offset, 1, littleEndian);\n\t          }\n\t\n\t          break;\n\t        }\n\t    }\n\t  }\n\t\n\t  return orientation;\n\t}\n\t\n\tfunction dataURLToArrayBuffer(dataURL) {\n\t  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n\t  var binary = atob(base64);\n\t  var length = binary.length;\n\t  var arrayBuffer = new ArrayBuffer(length);\n\t  var dataView = new Uint8Array(arrayBuffer);\n\t  var i = void 0;\n\t\n\t  for (i = 0; i < length; i++) {\n\t    dataView[i] = binary.charCodeAt(i);\n\t  }\n\t\n\t  return arrayBuffer;\n\t}\n\t\n\t// Only available for JPEG image\n\tfunction arrayBufferToDataURL(arrayBuffer) {\n\t  var dataView = new Uint8Array(arrayBuffer);\n\t  var length = dataView.length;\n\t  var base64 = '';\n\t  var i = void 0;\n\t\n\t  for (i = 0; i < length; i++) {\n\t    base64 += fromCharCode(dataView[i]);\n\t  }\n\t\n\t  return 'data:image/jpeg;base64,' + btoa(base64);\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar DATA_PREVIEW = 'preview';\n\t\n\texports.default = {\n\t  initPreview: function initPreview() {\n\t    var self = this;\n\t    var preview = self.options.preview;\n\t    var image = $.createElement('img');\n\t    var crossOrigin = self.crossOrigin;\n\t    var url = crossOrigin ? self.crossOriginUrl : self.url;\n\t\n\t    if (crossOrigin) {\n\t      image.crossOrigin = crossOrigin;\n\t    }\n\t\n\t    image.src = url;\n\t    $.appendChild(self.viewBox, image);\n\t    self.image2 = image;\n\t\n\t    if (!preview) {\n\t      return;\n\t    }\n\t\n\t    var previews = document.querySelectorAll(preview);\n\t\n\t    self.previews = previews;\n\t\n\t    $.each(previews, function (element) {\n\t      var img = $.createElement('img');\n\t\n\t      // Save the original size for recover\n\t      $.setData(element, DATA_PREVIEW, {\n\t        width: element.offsetWidth,\n\t        height: element.offsetHeight,\n\t        html: element.innerHTML\n\t      });\n\t\n\t      if (crossOrigin) {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t\n\t      /**\n\t       * Override img element styles\n\t       * Add `display:block` to avoid margin top issue\n\t       * Add `height:auto` to override `height` attribute on IE8\n\t       * (Occur only when margin-top <= -height)\n\t       */\n\t\n\t      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n\t\n\t      $.empty(element);\n\t      $.appendChild(element, img);\n\t    });\n\t  },\n\t  resetPreview: function resetPreview() {\n\t    $.each(this.previews, function (element) {\n\t      var data = $.getData(element, DATA_PREVIEW);\n\t\n\t      $.setStyle(element, {\n\t        width: data.width,\n\t        height: data.height\n\t      });\n\t\n\t      element.innerHTML = data.html;\n\t      $.removeData(element, DATA_PREVIEW);\n\t    });\n\t  },\n\t  preview: function preview() {\n\t    var self = this;\n\t    var imageData = self.imageData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = self.cropBoxData;\n\t    var cropBoxWidth = cropBoxData.width;\n\t    var cropBoxHeight = cropBoxData.height;\n\t    var width = imageData.width;\n\t    var height = imageData.height;\n\t    var left = cropBoxData.left - canvasData.left - imageData.left;\n\t    var top = cropBoxData.top - canvasData.top - imageData.top;\n\t    var transform = $.getTransform(imageData);\n\t    var transforms = {\n\t      WebkitTransform: transform,\n\t      msTransform: transform,\n\t      transform: transform\n\t    };\n\t\n\t    if (!self.cropped || self.disabled) {\n\t      return;\n\t    }\n\t\n\t    $.setStyle(self.image2, $.extend({\n\t      width: width,\n\t      height: height,\n\t      marginLeft: -left,\n\t      marginTop: -top\n\t    }, transforms));\n\t\n\t    $.each(self.previews, function (element) {\n\t      var data = $.getData(element, DATA_PREVIEW);\n\t      var originalWidth = data.width;\n\t      var originalHeight = data.height;\n\t      var newWidth = originalWidth;\n\t      var newHeight = originalHeight;\n\t      var ratio = 1;\n\t\n\t      if (cropBoxWidth) {\n\t        ratio = originalWidth / cropBoxWidth;\n\t        newHeight = cropBoxHeight * ratio;\n\t      }\n\t\n\t      if (cropBoxHeight && newHeight > originalHeight) {\n\t        ratio = originalHeight / cropBoxHeight;\n\t        newWidth = cropBoxWidth * ratio;\n\t        newHeight = originalHeight;\n\t      }\n\t\n\t      $.setStyle(element, {\n\t        width: newWidth,\n\t        height: newHeight\n\t      });\n\t\n\t      $.setStyle($.getByTag(element, 'img')[0], $.extend({\n\t        width: width * ratio,\n\t        height: height * ratio,\n\t        marginLeft: -left * ratio,\n\t        marginTop: -top * ratio\n\t      }, transforms));\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// Events\n\tvar EVENT_MOUSE_DOWN = 'mousedown touchstart pointerdown MSPointerDown';\n\tvar EVENT_MOUSE_MOVE = 'mousemove touchmove pointermove MSPointerMove';\n\tvar EVENT_MOUSE_UP = 'mouseup touchend touchcancel pointerup pointercancel' + ' MSPointerUp MSPointerCancel';\n\tvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\n\tvar EVENT_DBLCLICK = 'dblclick';\n\tvar EVENT_RESIZE = 'resize';\n\tvar EVENT_CROP_START = 'cropstart';\n\tvar EVENT_CROP_MOVE = 'cropmove';\n\tvar EVENT_CROP_END = 'cropend';\n\tvar EVENT_CROP = 'crop';\n\tvar EVENT_ZOOM = 'zoom';\n\t\n\texports.default = {\n\t  bind: function bind() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var element = self.element;\n\t    var cropper = self.cropper;\n\t\n\t    if ($.isFunction(options.cropstart)) {\n\t      $.addListener(element, EVENT_CROP_START, options.cropstart);\n\t    }\n\t\n\t    if ($.isFunction(options.cropmove)) {\n\t      $.addListener(element, EVENT_CROP_MOVE, options.cropmove);\n\t    }\n\t\n\t    if ($.isFunction(options.cropend)) {\n\t      $.addListener(element, EVENT_CROP_END, options.cropend);\n\t    }\n\t\n\t    if ($.isFunction(options.crop)) {\n\t      $.addListener(element, EVENT_CROP, options.crop);\n\t    }\n\t\n\t    if ($.isFunction(options.zoom)) {\n\t      $.addListener(element, EVENT_ZOOM, options.zoom);\n\t    }\n\t\n\t    $.addListener(cropper, EVENT_MOUSE_DOWN, self.onCropStart = $.proxy(self.cropStart, self));\n\t\n\t    if (options.zoomable && options.zoomOnWheel) {\n\t      $.addListener(cropper, EVENT_WHEEL, self.onWheel = $.proxy(self.wheel, self));\n\t    }\n\t\n\t    if (options.toggleDragModeOnDblclick) {\n\t      $.addListener(cropper, EVENT_DBLCLICK, self.onDblclick = $.proxy(self.dblclick, self));\n\t    }\n\t\n\t    $.addListener(document, EVENT_MOUSE_MOVE, self.onCropMove = $.proxy(self.cropMove, self));\n\t    $.addListener(document, EVENT_MOUSE_UP, self.onCropEnd = $.proxy(self.cropEnd, self));\n\t\n\t    if (options.responsive) {\n\t      $.addListener(window, EVENT_RESIZE, self.onResize = $.proxy(self.resize, self));\n\t    }\n\t  },\n\t  unbind: function unbind() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var element = self.element;\n\t    var cropper = self.cropper;\n\t\n\t    if ($.isFunction(options.cropstart)) {\n\t      $.removeListener(element, EVENT_CROP_START, options.cropstart);\n\t    }\n\t\n\t    if ($.isFunction(options.cropmove)) {\n\t      $.removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n\t    }\n\t\n\t    if ($.isFunction(options.cropend)) {\n\t      $.removeListener(element, EVENT_CROP_END, options.cropend);\n\t    }\n\t\n\t    if ($.isFunction(options.crop)) {\n\t      $.removeListener(element, EVENT_CROP, options.crop);\n\t    }\n\t\n\t    if ($.isFunction(options.zoom)) {\n\t      $.removeListener(element, EVENT_ZOOM, options.zoom);\n\t    }\n\t\n\t    $.removeListener(cropper, EVENT_MOUSE_DOWN, self.onCropStart);\n\t\n\t    if (options.zoomable && options.zoomOnWheel) {\n\t      $.removeListener(cropper, EVENT_WHEEL, self.onWheel);\n\t    }\n\t\n\t    if (options.toggleDragModeOnDblclick) {\n\t      $.removeListener(cropper, EVENT_DBLCLICK, self.onDblclick);\n\t    }\n\t\n\t    $.removeListener(document, EVENT_MOUSE_MOVE, self.onCropMove);\n\t    $.removeListener(document, EVENT_MOUSE_UP, self.onCropEnd);\n\t\n\t    if (options.responsive) {\n\t      $.removeListener(window, EVENT_RESIZE, self.onResize);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.REGEXP_ACTIONS = undefined;\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar REGEXP_ACTIONS = exports.REGEXP_ACTIONS = /^(e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\n\t\n\texports.default = {\n\t  resize: function resize() {\n\t    var self = this;\n\t    var restore = self.options.restore;\n\t    var container = self.container;\n\t    var containerData = self.containerData;\n\t\n\t    // Check `container` is necessary for IE8\n\t    if (self.disabled || !containerData) {\n\t      return;\n\t    }\n\t\n\t    var ratio = container.offsetWidth / containerData.width;\n\t    var canvasData = void 0;\n\t    var cropBoxData = void 0;\n\t\n\t    // Resize when width changed or height changed\n\t    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n\t      if (restore) {\n\t        canvasData = self.getCanvasData();\n\t        cropBoxData = self.getCropBoxData();\n\t      }\n\t\n\t      self.render();\n\t\n\t      if (restore) {\n\t        self.setCanvasData($.each(canvasData, function (n, i) {\n\t          canvasData[i] = n * ratio;\n\t        }));\n\t        self.setCropBoxData($.each(cropBoxData, function (n, i) {\n\t          cropBoxData[i] = n * ratio;\n\t        }));\n\t      }\n\t    }\n\t  },\n\t  dblclick: function dblclick() {\n\t    var self = this;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    self.setDragMode($.hasClass(self.dragBox, 'cropper-crop') ? 'move' : 'crop');\n\t  },\n\t  wheel: function wheel(event) {\n\t    var self = this;\n\t    var e = $.getEvent(event);\n\t    var ratio = Number(self.options.wheelZoomRatio) || 0.1;\n\t    var delta = 1;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    e.preventDefault();\n\t\n\t    // Limit wheel speed to prevent zoom too fast (#21)\n\t    if (self.wheeling) {\n\t      return;\n\t    }\n\t\n\t    self.wheeling = true;\n\t\n\t    setTimeout(function () {\n\t      self.wheeling = false;\n\t    }, 50);\n\t\n\t    if (e.deltaY) {\n\t      delta = e.deltaY > 0 ? 1 : -1;\n\t    } else if (e.wheelDelta) {\n\t      delta = -e.wheelDelta / 120;\n\t    } else if (e.detail) {\n\t      delta = e.detail > 0 ? 1 : -1;\n\t    }\n\t\n\t    self.zoom(-delta * ratio, e);\n\t  },\n\t  cropStart: function cropStart(event) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var e = $.getEvent(event);\n\t    var touches = e.touches;\n\t    var touchesLength = void 0;\n\t    var touch = void 0;\n\t    var action = void 0;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    if (touches) {\n\t      touchesLength = touches.length;\n\t\n\t      if (touchesLength > 1) {\n\t        if (options.zoomable && options.zoomOnTouch && touchesLength === 2) {\n\t          touch = touches[1];\n\t          self.startX2 = touch.pageX;\n\t          self.startY2 = touch.pageY;\n\t          action = 'zoom';\n\t        } else {\n\t          return;\n\t        }\n\t      }\n\t\n\t      touch = touches[0];\n\t    }\n\t\n\t    action = action || $.getData(e.target, 'action');\n\t\n\t    if (REGEXP_ACTIONS.test(action)) {\n\t      if ($.dispatchEvent(self.element, 'cropstart', {\n\t        originalEvent: e,\n\t        action: action\n\t      }) === false) {\n\t        return;\n\t      }\n\t\n\t      e.preventDefault();\n\t\n\t      self.action = action;\n\t      self.cropping = false;\n\t\n\t      self.startX = touch ? touch.pageX : e.pageX;\n\t      self.startY = touch ? touch.pageY : e.pageY;\n\t\n\t      if (action === 'crop') {\n\t        self.cropping = true;\n\t        $.addClass(self.dragBox, 'cropper-modal');\n\t      }\n\t    }\n\t  },\n\t  cropMove: function cropMove(event) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var e = $.getEvent(event);\n\t    var touches = e.touches;\n\t    var action = self.action;\n\t    var touchesLength = void 0;\n\t    var touch = void 0;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    if (touches) {\n\t      touchesLength = touches.length;\n\t\n\t      if (touchesLength > 1) {\n\t        if (options.zoomable && options.zoomOnTouch && touchesLength === 2) {\n\t          touch = touches[1];\n\t          self.endX2 = touch.pageX;\n\t          self.endY2 = touch.pageY;\n\t        } else {\n\t          return;\n\t        }\n\t      }\n\t\n\t      touch = touches[0];\n\t    }\n\t\n\t    if (action) {\n\t      if ($.dispatchEvent(self.element, 'cropmove', {\n\t        originalEvent: e,\n\t        action: action\n\t      }) === false) {\n\t        return;\n\t      }\n\t\n\t      e.preventDefault();\n\t\n\t      self.endX = touch ? touch.pageX : e.pageX;\n\t      self.endY = touch ? touch.pageY : e.pageY;\n\t\n\t      self.change(e.shiftKey, action === 'zoom' ? e : null);\n\t    }\n\t  },\n\t  cropEnd: function cropEnd(event) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var e = $.getEvent(event);\n\t    var action = self.action;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    if (action) {\n\t      e.preventDefault();\n\t\n\t      if (self.cropping) {\n\t        self.cropping = false;\n\t        $.toggleClass(self.dragBox, 'cropper-modal', self.cropped && options.modal);\n\t      }\n\t\n\t      self.action = '';\n\t\n\t      $.dispatchEvent(self.element, 'cropend', {\n\t        originalEvent: e,\n\t        action: action\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// Actions\n\tvar ACTION_EAST = 'e';\n\tvar ACTION_WEST = 'w';\n\tvar ACTION_SOUTH = 's';\n\tvar ACTION_NORTH = 'n';\n\tvar ACTION_SOUTH_EAST = 'se';\n\tvar ACTION_SOUTH_WEST = 'sw';\n\tvar ACTION_NORTH_EAST = 'ne';\n\tvar ACTION_NORTH_WEST = 'nw';\n\t\n\texports.default = {\n\t  change: function change(shiftKey, originalEvent) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var containerData = self.containerData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = self.cropBoxData;\n\t    var aspectRatio = options.aspectRatio;\n\t    var action = self.action;\n\t    var width = cropBoxData.width;\n\t    var height = cropBoxData.height;\n\t    var left = cropBoxData.left;\n\t    var top = cropBoxData.top;\n\t    var right = left + width;\n\t    var bottom = top + height;\n\t    var minLeft = 0;\n\t    var minTop = 0;\n\t    var maxWidth = containerData.width;\n\t    var maxHeight = containerData.height;\n\t    var renderable = true;\n\t    var offset = void 0;\n\t\n\t    // Locking aspect ratio in \"free mode\" by holding shift key\n\t    if (!aspectRatio && shiftKey) {\n\t      aspectRatio = width && height ? width / height : 1;\n\t    }\n\t\n\t    if (self.limited) {\n\t      minLeft = cropBoxData.minLeft;\n\t      minTop = cropBoxData.minTop;\n\t      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n\t      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n\t    }\n\t\n\t    var range = {\n\t      x: self.endX - self.startX,\n\t      y: self.endY - self.startY\n\t    };\n\t\n\t    if (aspectRatio) {\n\t      range.X = range.y * aspectRatio;\n\t      range.Y = range.x / aspectRatio;\n\t    }\n\t\n\t    switch (action) {\n\t      // Move crop box\n\t      case 'all':\n\t        left += range.x;\n\t        top += range.y;\n\t        break;\n\t\n\t      // Resize crop box\n\t      case ACTION_EAST:\n\t        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        width += range.x;\n\t\n\t        if (aspectRatio) {\n\t          height = width / aspectRatio;\n\t          top -= range.Y / 2;\n\t        }\n\t\n\t        if (width < 0) {\n\t          action = ACTION_WEST;\n\t          width = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_NORTH:\n\t        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        height -= range.y;\n\t        top += range.y;\n\t\n\t        if (aspectRatio) {\n\t          width = height * aspectRatio;\n\t          left += range.X / 2;\n\t        }\n\t\n\t        if (height < 0) {\n\t          action = ACTION_SOUTH;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_WEST:\n\t        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        width -= range.x;\n\t        left += range.x;\n\t\n\t        if (aspectRatio) {\n\t          height = width / aspectRatio;\n\t          top += range.Y / 2;\n\t        }\n\t\n\t        if (width < 0) {\n\t          action = ACTION_EAST;\n\t          width = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_SOUTH:\n\t        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        height += range.y;\n\t\n\t        if (aspectRatio) {\n\t          width = height * aspectRatio;\n\t          left -= range.X / 2;\n\t        }\n\t\n\t        if (height < 0) {\n\t          action = ACTION_NORTH;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_NORTH_EAST:\n\t        if (aspectRatio) {\n\t          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n\t            renderable = false;\n\t            break;\n\t          }\n\t\n\t          height -= range.y;\n\t          top += range.y;\n\t          width = height * aspectRatio;\n\t        } else {\n\t          if (range.x >= 0) {\n\t            if (right < maxWidth) {\n\t              width += range.x;\n\t            } else if (range.y <= 0 && top <= minTop) {\n\t              renderable = false;\n\t            }\n\t          } else {\n\t            width += range.x;\n\t          }\n\t\n\t          if (range.y <= 0) {\n\t            if (top > minTop) {\n\t              height -= range.y;\n\t              top += range.y;\n\t            }\n\t          } else {\n\t            height -= range.y;\n\t            top += range.y;\n\t          }\n\t        }\n\t\n\t        if (width < 0 && height < 0) {\n\t          action = ACTION_SOUTH_WEST;\n\t          height = 0;\n\t          width = 0;\n\t        } else if (width < 0) {\n\t          action = ACTION_NORTH_WEST;\n\t          width = 0;\n\t        } else if (height < 0) {\n\t          action = ACTION_SOUTH_EAST;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_NORTH_WEST:\n\t        if (aspectRatio) {\n\t          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n\t            renderable = false;\n\t            break;\n\t          }\n\t\n\t          height -= range.y;\n\t          top += range.y;\n\t          width = height * aspectRatio;\n\t          left += range.X;\n\t        } else {\n\t          if (range.x <= 0) {\n\t            if (left > minLeft) {\n\t              width -= range.x;\n\t              left += range.x;\n\t            } else if (range.y <= 0 && top <= minTop) {\n\t              renderable = false;\n\t            }\n\t          } else {\n\t            width -= range.x;\n\t            left += range.x;\n\t          }\n\t\n\t          if (range.y <= 0) {\n\t            if (top > minTop) {\n\t              height -= range.y;\n\t              top += range.y;\n\t            }\n\t          } else {\n\t            height -= range.y;\n\t            top += range.y;\n\t          }\n\t        }\n\t\n\t        if (width < 0 && height < 0) {\n\t          action = ACTION_SOUTH_EAST;\n\t          height = 0;\n\t          width = 0;\n\t        } else if (width < 0) {\n\t          action = ACTION_NORTH_EAST;\n\t          width = 0;\n\t        } else if (height < 0) {\n\t          action = ACTION_SOUTH_WEST;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_SOUTH_WEST:\n\t        if (aspectRatio) {\n\t          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n\t            renderable = false;\n\t            break;\n\t          }\n\t\n\t          width -= range.x;\n\t          left += range.x;\n\t          height = width / aspectRatio;\n\t        } else {\n\t          if (range.x <= 0) {\n\t            if (left > minLeft) {\n\t              width -= range.x;\n\t              left += range.x;\n\t            } else if (range.y >= 0 && bottom >= maxHeight) {\n\t              renderable = false;\n\t            }\n\t          } else {\n\t            width -= range.x;\n\t            left += range.x;\n\t          }\n\t\n\t          if (range.y >= 0) {\n\t            if (bottom < maxHeight) {\n\t              height += range.y;\n\t            }\n\t          } else {\n\t            height += range.y;\n\t          }\n\t        }\n\t\n\t        if (width < 0 && height < 0) {\n\t          action = ACTION_NORTH_EAST;\n\t          height = 0;\n\t          width = 0;\n\t        } else if (width < 0) {\n\t          action = ACTION_SOUTH_EAST;\n\t          width = 0;\n\t        } else if (height < 0) {\n\t          action = ACTION_NORTH_WEST;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_SOUTH_EAST:\n\t        if (aspectRatio) {\n\t          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n\t            renderable = false;\n\t            break;\n\t          }\n\t\n\t          width += range.x;\n\t          height = width / aspectRatio;\n\t        } else {\n\t          if (range.x >= 0) {\n\t            if (right < maxWidth) {\n\t              width += range.x;\n\t            } else if (range.y >= 0 && bottom >= maxHeight) {\n\t              renderable = false;\n\t            }\n\t          } else {\n\t            width += range.x;\n\t          }\n\t\n\t          if (range.y >= 0) {\n\t            if (bottom < maxHeight) {\n\t              height += range.y;\n\t            }\n\t          } else {\n\t            height += range.y;\n\t          }\n\t        }\n\t\n\t        if (width < 0 && height < 0) {\n\t          action = ACTION_NORTH_WEST;\n\t          height = 0;\n\t          width = 0;\n\t        } else if (width < 0) {\n\t          action = ACTION_SOUTH_WEST;\n\t          width = 0;\n\t        } else if (height < 0) {\n\t          action = ACTION_NORTH_EAST;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      // Move canvas\n\t      case 'move':\n\t        self.move(range.x, range.y);\n\t        renderable = false;\n\t        break;\n\t\n\t      // Zoom canvas\n\t      case 'zoom':\n\t        self.zoom(function (x1, y1, x2, y2) {\n\t          var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n\t          var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n\t\n\t          return (z2 - z1) / z1;\n\t        }(Math.abs(self.startX - self.startX2), Math.abs(self.startY - self.startY2), Math.abs(self.endX - self.endX2), Math.abs(self.endY - self.endY2)), originalEvent);\n\t        self.startX2 = self.endX2;\n\t        self.startY2 = self.endY2;\n\t        renderable = false;\n\t        break;\n\t\n\t      // Create crop box\n\t      case 'crop':\n\t        if (!range.x || !range.y) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        offset = $.getOffset(self.cropper);\n\t        left = self.startX - offset.left;\n\t        top = self.startY - offset.top;\n\t        width = cropBoxData.minWidth;\n\t        height = cropBoxData.minHeight;\n\t\n\t        if (range.x > 0) {\n\t          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n\t        } else if (range.x < 0) {\n\t          left -= width;\n\t          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n\t        }\n\t\n\t        if (range.y < 0) {\n\t          top -= height;\n\t        }\n\t\n\t        // Show the crop box if is hidden\n\t        if (!self.cropped) {\n\t          $.removeClass(self.cropBox, 'cropper-hidden');\n\t          self.cropped = true;\n\t\n\t          if (self.limited) {\n\t            self.limitCropBox(true, true);\n\t          }\n\t        }\n\t\n\t        break;\n\t\n\t      // No default\n\t    }\n\t\n\t    if (renderable) {\n\t      cropBoxData.width = width;\n\t      cropBoxData.height = height;\n\t      cropBoxData.left = left;\n\t      cropBoxData.top = top;\n\t      self.action = action;\n\t\n\t      self.renderCropBox();\n\t    }\n\t\n\t    // Override\n\t    self.startX = self.endX;\n\t    self.startY = self.endY;\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\texports.default = {\n\t  // Show the crop box manually\n\t  crop: function crop() {\n\t    var self = this;\n\t\n\t    if (self.ready && !self.disabled) {\n\t      if (!self.cropped) {\n\t        self.cropped = true;\n\t        self.limitCropBox(true, true);\n\t\n\t        if (self.options.modal) {\n\t          $.addClass(self.dragBox, 'cropper-modal');\n\t        }\n\t\n\t        $.removeClass(self.cropBox, 'cropper-hidden');\n\t      }\n\t\n\t      self.setCropBoxData(self.initialCropBoxData);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Reset the image and crop box to their initial states\n\t  reset: function reset() {\n\t    var self = this;\n\t\n\t    if (self.ready && !self.disabled) {\n\t      self.imageData = $.extend({}, self.initialImageData);\n\t      self.canvasData = $.extend({}, self.initialCanvasData);\n\t      self.cropBoxData = $.extend({}, self.initialCropBoxData);\n\t\n\t      self.renderCanvas();\n\t\n\t      if (self.cropped) {\n\t        self.renderCropBox();\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Clear the crop box\n\t  clear: function clear() {\n\t    var self = this;\n\t\n\t    if (self.cropped && !self.disabled) {\n\t      $.extend(self.cropBoxData, {\n\t        left: 0,\n\t        top: 0,\n\t        width: 0,\n\t        height: 0\n\t      });\n\t\n\t      self.cropped = false;\n\t      self.renderCropBox();\n\t\n\t      self.limitCanvas();\n\t\n\t      // Render canvas after crop box rendered\n\t      self.renderCanvas();\n\t\n\t      $.removeClass(self.dragBox, 'cropper-modal');\n\t      $.addClass(self.cropBox, 'cropper-hidden');\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Replace the image's src and rebuild the cropper\n\t   *\n\t   * @param {String} url\n\t   * @param {Boolean} onlyColorChanged (optional)\n\t   */\n\t  replace: function replace(url, onlyColorChanged) {\n\t    var self = this;\n\t\n\t    if (!self.disabled && url) {\n\t      if (self.isImg) {\n\t        self.element.src = url;\n\t      }\n\t\n\t      if (onlyColorChanged) {\n\t        self.url = url;\n\t        self.image.src = url;\n\t\n\t        if (self.ready) {\n\t          self.image2.src = url;\n\t\n\t          $.each(self.previews, function (element) {\n\t            $.getByTag(element, 'img')[0].src = url;\n\t          });\n\t        }\n\t      } else {\n\t        if (self.isImg) {\n\t          self.replaced = true;\n\t        }\n\t\n\t        // Clear previous data\n\t        self.options.data = null;\n\t        self.load(url);\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Enable (unfreeze) the cropper\n\t  enable: function enable() {\n\t    var self = this;\n\t\n\t    if (self.ready) {\n\t      self.disabled = false;\n\t      $.removeClass(self.cropper, 'cropper-disabled');\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Disable (freeze) the cropper\n\t  disable: function disable() {\n\t    var self = this;\n\t\n\t    if (self.ready) {\n\t      self.disabled = true;\n\t      $.addClass(self.cropper, 'cropper-disabled');\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Destroy the cropper and remove the instance from the image\n\t  destroy: function destroy() {\n\t    var self = this;\n\t    var element = self.element;\n\t    var image = self.image;\n\t\n\t    if (self.loaded) {\n\t      if (self.isImg && self.replaced) {\n\t        element.src = self.originalUrl;\n\t      }\n\t\n\t      self.unbuild();\n\t      $.removeClass(element, 'cropper-hidden');\n\t    } else if (self.isImg) {\n\t      $.removeListener(element, 'load', self.start);\n\t    } else if (image) {\n\t      $.removeChild(image);\n\t    }\n\t\n\t    $.removeData(element, 'cropper');\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Move the canvas with relative offsets\n\t   *\n\t   * @param {Number} offsetX\n\t   * @param {Number} offsetY (optional)\n\t   */\n\t  move: function move(offsetX, offsetY) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t\n\t    return self.moveTo($.isUndefined(offsetX) ? offsetX : canvasData.left + Number(offsetX), $.isUndefined(offsetY) ? offsetY : canvasData.top + Number(offsetY));\n\t  },\n\t\n\t\n\t  /**\n\t   * Move the canvas to an absolute point\n\t   *\n\t   * @param {Number} x\n\t   * @param {Number} y (optional)\n\t   */\n\t  moveTo: function moveTo(x, y) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var changed = false;\n\t\n\t    // If \"y\" is not present, its default value is \"x\"\n\t    if ($.isUndefined(y)) {\n\t      y = x;\n\t    }\n\t\n\t    x = Number(x);\n\t    y = Number(y);\n\t\n\t    if (self.ready && !self.disabled && self.options.movable) {\n\t      if ($.isNumber(x)) {\n\t        canvasData.left = x;\n\t        changed = true;\n\t      }\n\t\n\t      if ($.isNumber(y)) {\n\t        canvasData.top = y;\n\t        changed = true;\n\t      }\n\t\n\t      if (changed) {\n\t        self.renderCanvas(true);\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Zoom the canvas with a relative ratio\n\t   *\n\t   * @param {Number} ratio\n\t   * @param {Event} _originalEvent (private)\n\t   */\n\t  zoom: function zoom(ratio, _originalEvent) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t\n\t    ratio = Number(ratio);\n\t\n\t    if (ratio < 0) {\n\t      ratio = 1 / (1 - ratio);\n\t    } else {\n\t      ratio = 1 + ratio;\n\t    }\n\t\n\t    return self.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, _originalEvent);\n\t  },\n\t\n\t\n\t  /**\n\t   * Zoom the canvas to an absolute ratio\n\t   *\n\t   * @param {Number} ratio\n\t   * @param {Event} _originalEvent (private)\n\t   */\n\t  zoomTo: function zoomTo(ratio, _originalEvent) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var canvasData = self.canvasData;\n\t    var width = canvasData.width;\n\t    var height = canvasData.height;\n\t    var naturalWidth = canvasData.naturalWidth;\n\t    var naturalHeight = canvasData.naturalHeight;\n\t    var newWidth = void 0;\n\t    var newHeight = void 0;\n\t    var offset = void 0;\n\t    var center = void 0;\n\t\n\t    ratio = Number(ratio);\n\t\n\t    if (ratio >= 0 && self.ready && !self.disabled && options.zoomable) {\n\t      newWidth = naturalWidth * ratio;\n\t      newHeight = naturalHeight * ratio;\n\t\n\t      if ($.dispatchEvent(self.element, 'zoom', {\n\t        originalEvent: _originalEvent,\n\t        oldRatio: width / naturalWidth,\n\t        ratio: newWidth / naturalWidth\n\t      }) === false) {\n\t        return self;\n\t      }\n\t\n\t      if (_originalEvent) {\n\t        offset = $.getOffset(self.cropper);\n\t        center = _originalEvent.touches ? $.getTouchesCenter(_originalEvent.touches) : {\n\t          pageX: _originalEvent.pageX,\n\t          pageY: _originalEvent.pageY\n\t        };\n\t\n\t        // Zoom from the triggering point of the event\n\t        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n\t        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n\t      } else {\n\t        // Zoom from the center of the canvas\n\t        canvasData.left -= (newWidth - width) / 2;\n\t        canvasData.top -= (newHeight - height) / 2;\n\t      }\n\t\n\t      canvasData.width = newWidth;\n\t      canvasData.height = newHeight;\n\t      self.renderCanvas(true);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Rotate the canvas with a relative degree\n\t   *\n\t   * @param {Number} degree\n\t   */\n\t  rotate: function rotate(degree) {\n\t    var self = this;\n\t\n\t    return self.rotateTo((self.imageData.rotate || 0) + Number(degree));\n\t  },\n\t\n\t\n\t  /**\n\t   * Rotate the canvas to an absolute degree\n\t   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#rotate()\n\t   *\n\t   * @param {Number} degree\n\t   */\n\t  rotateTo: function rotateTo(degree) {\n\t    var self = this;\n\t\n\t    degree = Number(degree);\n\t\n\t    if ($.isNumber(degree) && self.ready && !self.disabled && self.options.rotatable) {\n\t      self.imageData.rotate = degree % 360;\n\t      self.rotated = true;\n\t      self.renderCanvas(true);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Scale the image\n\t   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#scale()\n\t   *\n\t   * @param {Number} scaleX\n\t   * @param {Number} scaleY (optional)\n\t   */\n\t  scale: function scale(scaleX, scaleY) {\n\t    var self = this;\n\t    var imageData = self.imageData;\n\t    var changed = false;\n\t\n\t    // If \"scaleY\" is not present, its default value is \"scaleX\"\n\t    if ($.isUndefined(scaleY)) {\n\t      scaleY = scaleX;\n\t    }\n\t\n\t    scaleX = Number(scaleX);\n\t    scaleY = Number(scaleY);\n\t\n\t    if (self.ready && !self.disabled && self.options.scalable) {\n\t      if ($.isNumber(scaleX)) {\n\t        imageData.scaleX = scaleX;\n\t        changed = true;\n\t      }\n\t\n\t      if ($.isNumber(scaleY)) {\n\t        imageData.scaleY = scaleY;\n\t        changed = true;\n\t      }\n\t\n\t      if (changed) {\n\t        self.renderImage(true);\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Scale the abscissa of the image\n\t   *\n\t   * @param {Number} scaleX\n\t   */\n\t  scaleX: function scaleX(_scaleX) {\n\t    var self = this;\n\t    var scaleY = self.imageData.scaleY;\n\t\n\t    return self.scale(_scaleX, $.isNumber(scaleY) ? scaleY : 1);\n\t  },\n\t\n\t\n\t  /**\n\t   * Scale the ordinate of the image\n\t   *\n\t   * @param {Number} scaleY\n\t   */\n\t  scaleY: function scaleY(_scaleY) {\n\t    var self = this;\n\t    var scaleX = self.imageData.scaleX;\n\t\n\t    return self.scale($.isNumber(scaleX) ? scaleX : 1, _scaleY);\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the cropped area position and size data (base on the original image)\n\t   *\n\t   * @param {Boolean} rounded (optional)\n\t   * @return {Object} data\n\t   */\n\t  getData: function getData(rounded) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var imageData = self.imageData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = self.cropBoxData;\n\t    var ratio = void 0;\n\t    var data = void 0;\n\t\n\t    if (self.ready && self.cropped) {\n\t      data = {\n\t        x: cropBoxData.left - canvasData.left,\n\t        y: cropBoxData.top - canvasData.top,\n\t        width: cropBoxData.width,\n\t        height: cropBoxData.height\n\t      };\n\t\n\t      ratio = imageData.width / imageData.naturalWidth;\n\t\n\t      $.each(data, function (n, i) {\n\t        n /= ratio;\n\t        data[i] = rounded ? Math.round(n) : n;\n\t      });\n\t    } else {\n\t      data = {\n\t        x: 0,\n\t        y: 0,\n\t        width: 0,\n\t        height: 0\n\t      };\n\t    }\n\t\n\t    if (options.rotatable) {\n\t      data.rotate = imageData.rotate || 0;\n\t    }\n\t\n\t    if (options.scalable) {\n\t      data.scaleX = imageData.scaleX || 1;\n\t      data.scaleY = imageData.scaleY || 1;\n\t    }\n\t\n\t    return data;\n\t  },\n\t\n\t\n\t  /**\n\t   * Set the cropped area position and size with new data\n\t   *\n\t   * @param {Object} data\n\t   */\n\t  setData: function setData(data) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var imageData = self.imageData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = {};\n\t    var rotated = void 0;\n\t    var scaled = void 0;\n\t    var ratio = void 0;\n\t\n\t    if ($.isFunction(data)) {\n\t      data = data.call(self.element);\n\t    }\n\t\n\t    if (self.ready && !self.disabled && $.isPlainObject(data)) {\n\t      if (options.rotatable) {\n\t        if ($.isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n\t          imageData.rotate = data.rotate;\n\t          self.rotated = rotated = true;\n\t        }\n\t      }\n\t\n\t      if (options.scalable) {\n\t        if ($.isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n\t          imageData.scaleX = data.scaleX;\n\t          scaled = true;\n\t        }\n\t\n\t        if ($.isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n\t          imageData.scaleY = data.scaleY;\n\t          scaled = true;\n\t        }\n\t      }\n\t\n\t      if (rotated) {\n\t        self.renderCanvas();\n\t      } else if (scaled) {\n\t        self.renderImage();\n\t      }\n\t\n\t      ratio = imageData.width / imageData.naturalWidth;\n\t\n\t      if ($.isNumber(data.x)) {\n\t        cropBoxData.left = data.x * ratio + canvasData.left;\n\t      }\n\t\n\t      if ($.isNumber(data.y)) {\n\t        cropBoxData.top = data.y * ratio + canvasData.top;\n\t      }\n\t\n\t      if ($.isNumber(data.width)) {\n\t        cropBoxData.width = data.width * ratio;\n\t      }\n\t\n\t      if ($.isNumber(data.height)) {\n\t        cropBoxData.height = data.height * ratio;\n\t      }\n\t\n\t      self.setCropBoxData(cropBoxData);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the container size data\n\t   *\n\t   * @return {Object} data\n\t   */\n\t  getContainerData: function getContainerData() {\n\t    var self = this;\n\t\n\t    return self.ready ? self.containerData : {};\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the image position and size data\n\t   *\n\t   * @return {Object} data\n\t   */\n\t  getImageData: function getImageData() {\n\t    var self = this;\n\t\n\t    return self.loaded ? self.imageData : {};\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the canvas position and size data\n\t   *\n\t   * @return {Object} data\n\t   */\n\t  getCanvasData: function getCanvasData() {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var data = {};\n\t\n\t    if (self.ready) {\n\t      $.each(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n\t        data[n] = canvasData[n];\n\t      });\n\t    }\n\t\n\t    return data;\n\t  },\n\t\n\t\n\t  /**\n\t   * Set the canvas position and size with new data\n\t   *\n\t   * @param {Object} data\n\t   */\n\t  setCanvasData: function setCanvasData(data) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var aspectRatio = canvasData.aspectRatio;\n\t\n\t    if ($.isFunction(data)) {\n\t      data = data.call(self.element);\n\t    }\n\t\n\t    if (self.ready && !self.disabled && $.isPlainObject(data)) {\n\t      if ($.isNumber(data.left)) {\n\t        canvasData.left = data.left;\n\t      }\n\t\n\t      if ($.isNumber(data.top)) {\n\t        canvasData.top = data.top;\n\t      }\n\t\n\t      if ($.isNumber(data.width)) {\n\t        canvasData.width = data.width;\n\t        canvasData.height = data.width / aspectRatio;\n\t      } else if ($.isNumber(data.height)) {\n\t        canvasData.height = data.height;\n\t        canvasData.width = data.height * aspectRatio;\n\t      }\n\t\n\t      self.renderCanvas(true);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the crop box position and size data\n\t   *\n\t   * @return {Object} data\n\t   */\n\t  getCropBoxData: function getCropBoxData() {\n\t    var self = this;\n\t    var cropBoxData = self.cropBoxData;\n\t    var data = void 0;\n\t\n\t    if (self.ready && self.cropped) {\n\t      data = {\n\t        left: cropBoxData.left,\n\t        top: cropBoxData.top,\n\t        width: cropBoxData.width,\n\t        height: cropBoxData.height\n\t      };\n\t    }\n\t\n\t    return data || {};\n\t  },\n\t\n\t\n\t  /**\n\t   * Set the crop box position and size with new data\n\t   *\n\t   * @param {Object} data\n\t   */\n\t  setCropBoxData: function setCropBoxData(data) {\n\t    var self = this;\n\t    var cropBoxData = self.cropBoxData;\n\t    var aspectRatio = self.options.aspectRatio;\n\t    var widthChanged = void 0;\n\t    var heightChanged = void 0;\n\t\n\t    if ($.isFunction(data)) {\n\t      data = data.call(self.element);\n\t    }\n\t\n\t    if (self.ready && self.cropped && !self.disabled && $.isPlainObject(data)) {\n\t      if ($.isNumber(data.left)) {\n\t        cropBoxData.left = data.left;\n\t      }\n\t\n\t      if ($.isNumber(data.top)) {\n\t        cropBoxData.top = data.top;\n\t      }\n\t\n\t      if ($.isNumber(data.width)) {\n\t        widthChanged = true;\n\t        cropBoxData.width = data.width;\n\t      }\n\t\n\t      if ($.isNumber(data.height)) {\n\t        heightChanged = true;\n\t        cropBoxData.height = data.height;\n\t      }\n\t\n\t      if (aspectRatio) {\n\t        if (widthChanged) {\n\t          cropBoxData.height = cropBoxData.width / aspectRatio;\n\t        } else if (heightChanged) {\n\t          cropBoxData.width = cropBoxData.height * aspectRatio;\n\t        }\n\t      }\n\t\n\t      self.renderCropBox();\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Get a canvas drawn the cropped image\n\t   *\n\t   * @param {Object} options (optional)\n\t   * @return {HTMLCanvasElement} canvas\n\t   */\n\t  getCroppedCanvas: function getCroppedCanvas(options) {\n\t    var self = this;\n\t\n\t    if (!self.ready || !window.HTMLCanvasElement) {\n\t      return null;\n\t    }\n\t\n\t    // Return the whole canvas if not cropped\n\t    if (!self.cropped) {\n\t      return $.getSourceCanvas(self.image, self.imageData);\n\t    }\n\t\n\t    if (!$.isPlainObject(options)) {\n\t      options = {};\n\t    }\n\t\n\t    var data = self.getData();\n\t    var originalWidth = data.width;\n\t    var originalHeight = data.height;\n\t    var aspectRatio = originalWidth / originalHeight;\n\t    var scaledWidth = void 0;\n\t    var scaledHeight = void 0;\n\t    var scaledRatio = void 0;\n\t\n\t    if ($.isPlainObject(options)) {\n\t      scaledWidth = options.width;\n\t      scaledHeight = options.height;\n\t\n\t      if (scaledWidth) {\n\t        scaledHeight = scaledWidth / aspectRatio;\n\t        scaledRatio = scaledWidth / originalWidth;\n\t      } else if (scaledHeight) {\n\t        scaledWidth = scaledHeight * aspectRatio;\n\t        scaledRatio = scaledHeight / originalHeight;\n\t      }\n\t    }\n\t\n\t    // The canvas element will use `Math.floor` on a float number, so floor first\n\t    var canvasWidth = Math.floor(scaledWidth || originalWidth);\n\t    var canvasHeight = Math.floor(scaledHeight || originalHeight);\n\t\n\t    var canvas = $.createElement('canvas');\n\t    var context = canvas.getContext('2d');\n\t\n\t    canvas.width = canvasWidth;\n\t    canvas.height = canvasHeight;\n\t\n\t    if (options.fillColor) {\n\t      context.fillStyle = options.fillColor;\n\t      context.fillRect(0, 0, canvasWidth, canvasHeight);\n\t    }\n\t\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\t    var parameters = function () {\n\t      var source = $.getSourceCanvas(self.image, self.imageData);\n\t      var sourceWidth = source.width;\n\t      var sourceHeight = source.height;\n\t      var canvasData = self.canvasData;\n\t      var params = [source];\n\t\n\t      // Source canvas\n\t      var srcX = data.x + canvasData.naturalWidth * (Math.abs(data.scaleX || 1) - 1) / 2;\n\t      var srcY = data.y + canvasData.naturalHeight * (Math.abs(data.scaleY || 1) - 1) / 2;\n\t      var srcWidth = void 0;\n\t      var srcHeight = void 0;\n\t\n\t      // Destination canvas\n\t      var dstX = void 0;\n\t      var dstY = void 0;\n\t      var dstWidth = void 0;\n\t      var dstHeight = void 0;\n\t\n\t      if (srcX <= -originalWidth || srcX > sourceWidth) {\n\t        srcX = srcWidth = dstX = dstWidth = 0;\n\t      } else if (srcX <= 0) {\n\t        dstX = -srcX;\n\t        srcX = 0;\n\t        srcWidth = dstWidth = Math.min(sourceWidth, originalWidth + srcX);\n\t      } else if (srcX <= sourceWidth) {\n\t        dstX = 0;\n\t        srcWidth = dstWidth = Math.min(originalWidth, sourceWidth - srcX);\n\t      }\n\t\n\t      if (srcWidth <= 0 || srcY <= -originalHeight || srcY > sourceHeight) {\n\t        srcY = srcHeight = dstY = dstHeight = 0;\n\t      } else if (srcY <= 0) {\n\t        dstY = -srcY;\n\t        srcY = 0;\n\t        srcHeight = dstHeight = Math.min(sourceHeight, originalHeight + srcY);\n\t      } else if (srcY <= sourceHeight) {\n\t        dstY = 0;\n\t        srcHeight = dstHeight = Math.min(originalHeight, sourceHeight - srcY);\n\t      }\n\t\n\t      params.push(Math.floor(srcX), Math.floor(srcY), Math.floor(srcWidth), Math.floor(srcHeight));\n\t\n\t      // Scale destination sizes\n\t      if (scaledRatio) {\n\t        dstX *= scaledRatio;\n\t        dstY *= scaledRatio;\n\t        dstWidth *= scaledRatio;\n\t        dstHeight *= scaledRatio;\n\t      }\n\t\n\t      // Avoid \"IndexSizeError\" in IE and Firefox\n\t      if (dstWidth > 0 && dstHeight > 0) {\n\t        params.push(Math.floor(dstX), Math.floor(dstY), Math.floor(dstWidth), Math.floor(dstHeight));\n\t      }\n\t\n\t      return params;\n\t    }();\n\t\n\t    context.drawImage.apply(context, _toConsumableArray(parameters));\n\t\n\t    return canvas;\n\t  },\n\t\n\t\n\t  /**\n\t   * Change the aspect ratio of the crop box\n\t   *\n\t   * @param {Number} aspectRatio\n\t   */\n\t  setAspectRatio: function setAspectRatio(aspectRatio) {\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    if (!self.disabled && !$.isUndefined(aspectRatio)) {\n\t      // 0 -> NaN\n\t      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\t\n\t      if (self.ready) {\n\t        self.initCropBox();\n\t\n\t        if (self.cropped) {\n\t          self.renderCropBox();\n\t        }\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Change the drag mode\n\t   *\n\t   * @param {String} mode (optional)\n\t   */\n\t  setDragMode: function setDragMode(mode) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var dragBox = self.dragBox;\n\t    var face = self.face;\n\t    var croppable = void 0;\n\t    var movable = void 0;\n\t\n\t    if (self.loaded && !self.disabled) {\n\t      croppable = mode === 'crop';\n\t      movable = options.movable && mode === 'move';\n\t      mode = croppable || movable ? mode : 'none';\n\t\n\t      $.setData(dragBox, 'action', mode);\n\t      $.toggleClass(dragBox, 'cropper-crop', croppable);\n\t      $.toggleClass(dragBox, 'cropper-move', movable);\n\t\n\t      if (!options.cropBoxMovable) {\n\t        // Sync drag mode to crop box when it is not movable\n\t        $.setData(face, 'action', mode);\n\t        $.toggleClass(face, 'cropper-crop', croppable);\n\t        $.toggleClass(face, 'cropper-move', movable);\n\t      }\n\t    }\n\t\n\t    return self;\n\t  }\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=cropper.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 1-ddb8e369.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar optionProps = ['dragMode', 'aspectRatio', 'data',\n// unchangeable props start from here\n'viewMode', 'preview', 'responsive', 'restore', 'checkCrossOrigin', 'checkOrientation', 'modal', 'guides', 'center', 'highlight', 'background', 'autoCrop', 'autoCropArea', 'movable', 'rotatable', 'scalable', 'zoomable', 'zoomOnTouch', 'zoomOnWheel', 'wheelZoomRation', 'cropBoxMovable', 'cropBoxResizable', 'toggleDragModeOnDblclick', 'minContainerWidth', 'minContainerHeight', 'minCanvasWidth', 'minCanvasHeight', 'minCropBoxWidth', 'minCropBoxHeight', 'ready', 'cropstart', 'cropmove', 'cropend', 'crop', 'zoom'];\n\nvar unchangeableProps = optionProps.slice(3);\n\nvar ReactCropper = function (_Component) {\n  _inherits(ReactCropper, _Component);\n\n  function ReactCropper() {\n    _classCallCheck(this, ReactCropper);\n\n    return _possibleConstructorReturn(this, (ReactCropper.__proto__ || Object.getPrototypeOf(ReactCropper)).apply(this, arguments));\n  }\n\n  _createClass(ReactCropper, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var options = Object.keys(this.props).filter(function (propKey) {\n        return optionProps.indexOf(propKey) !== -1;\n      }).reduce(function (prevOptions, propKey) {\n        return _extends({}, prevOptions, _defineProperty({}, propKey, _this2.props[propKey]));\n      }, {});\n\n      var Cropper = require('cropperjs').default;\n      this.cropper = new Cropper(this.img, options);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      if (nextProps.src !== this.props.src) {\n        this.cropper.reset().clear().replace(nextProps.src);\n      }\n      if (nextProps.aspectRatio !== this.props.aspectRatio) {\n        this.setAspectRatio(nextProps.aspectRatio);\n      }\n      if (nextProps.data !== this.props.data) {\n        this.setData(nextProps.data);\n      }\n      if (nextProps.dragMode !== this.props.dragMode) {\n        this.setDragMode(nextProps.dragMode);\n      }\n      if (nextProps.cropBoxData !== this.props.cropBoxData) {\n        this.setCropBoxData(nextProps.cropBoxData);\n      }\n      if (nextProps.canvasData !== this.props.canvasData) {\n        this.setCanvasData(nextProps.canvasData);\n      }\n      if (nextProps.moveTo !== this.props.moveTo) {\n        if (nextProps.moveTo.length > 1) {\n          this.moveTo(nextProps.moveTo[0], nextProps.moveTo[1]);\n        } else {\n          this.moveTo(nextProps.moveTo[0]);\n        }\n      }\n      if (nextProps.zoomTo !== this.props.zoomTo) {\n        this.zoomTo(nextProps.zoomTo);\n      }\n      if (nextProps.rotateTo !== this.props.rotateTo) {\n        this.rotateTo(nextProps.rotateTo);\n      }\n      if (nextProps.scaleX !== this.props.scaleX) {\n        this.scaleX(nextProps.scaleX);\n      }\n      if (nextProps.scaleY !== this.props.scaleY) {\n        this.scaleY(nextProps.scaleY);\n      }\n      if (nextProps.enable !== this.props.enable) {\n        if (nextProps.enable) {\n          this.enable();\n        } else {\n          this.disable();\n        }\n      }\n\n      Object.keys(nextProps).forEach(function (propKey) {\n        if (nextProps[propKey] !== _this3.props[propKey] && unchangeableProps.indexOf(propKey) !== -1) {\n          throw new Error('prop: ' + propKey + ' can\\'t be change after componentDidMount');\n        }\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.img) {\n        // Destroy the cropper, this makes sure events such as resize are cleaned up and do not leak\n        this.cropper.destroy();\n        delete this.img;\n        delete this.cropper;\n      }\n    }\n  }, {\n    key: 'setDragMode',\n    value: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }, {\n    key: 'setAspectRatio',\n    value: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    }\n  }, {\n    key: 'getCroppedCanvas',\n    value: function getCroppedCanvas(options) {\n      return this.cropper.getCroppedCanvas(options);\n    }\n  }, {\n    key: 'setCropBoxData',\n    value: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    }\n  }, {\n    key: 'getCropBoxData',\n    value: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    }\n  }, {\n    key: 'setCanvasData',\n    value: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    }\n  }, {\n    key: 'getCanvasData',\n    value: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    }\n  }, {\n    key: 'getImageData',\n    value: function getImageData() {\n      return this.cropper.getImageData();\n    }\n  }, {\n    key: 'getContainerData',\n    value: function getContainerData() {\n      return this.cropper.getContainerData();\n    }\n  }, {\n    key: 'setData',\n    value: function setData(data) {\n      return this.cropper.setData(data);\n    }\n  }, {\n    key: 'getData',\n    value: function getData(rounded) {\n      return this.cropper.getData(rounded);\n    }\n  }, {\n    key: 'crop',\n    value: function crop() {\n      return this.cropper.crop();\n    }\n  }, {\n    key: 'move',\n    value: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    }\n  }, {\n    key: 'moveTo',\n    value: function moveTo(x, y) {\n      return this.cropper.moveTo(x, y);\n    }\n  }, {\n    key: 'zoom',\n    value: function zoom(ratio) {\n      return this.cropper.zoom(ratio);\n    }\n  }, {\n    key: 'zoomTo',\n    value: function zoomTo(ratio) {\n      return this.cropper.zoomTo(ratio);\n    }\n  }, {\n    key: 'rotate',\n    value: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    }\n  }, {\n    key: 'rotateTo',\n    value: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      return this.cropper.enable();\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      return this.cropper.disable();\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      return this.cropper.reset();\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      return this.cropper.clear();\n    }\n  }, {\n    key: 'replace',\n    value: function replace(url, onlyColorChanged) {\n      return this.cropper.replace(url, onlyColorChanged);\n    }\n  }, {\n    key: 'scale',\n    value: function scale(scaleX, scaleY) {\n      return this.cropper.scale(scaleX, scaleY);\n    }\n  }, {\n    key: 'scaleX',\n    value: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    }\n  }, {\n    key: 'scaleY',\n    value: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          src = _props.src,\n          alt = _props.alt,\n          crossOrigin = _props.crossOrigin;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          src: null,\n          crossOrigin: null,\n          alt: null,\n          style: this.props.style,\n          className: this.props.className\n        },\n        _react2.default.createElement('img', {\n          crossOrigin: crossOrigin,\n          ref: function ref(img) {\n            _this4.img = img;\n          },\n          src: src,\n          alt: alt === undefined ? 'picture' : alt,\n          style: { opacity: 0 }\n        })\n      );\n    }\n  }]);\n\n  return ReactCropper;\n}(_react.Component);\n\nReactCropper.propTypes = {\n  style: _react.PropTypes.object,\n  className: _react.PropTypes.string,\n\n  // react cropper options\n  crossOrigin: _react.PropTypes.string,\n  src: _react.PropTypes.string,\n  alt: _react.PropTypes.string,\n\n  // props of option can be changed after componentDidmount\n  aspectRatio: _react.PropTypes.number,\n  dragMode: _react.PropTypes.oneOf(['crop', 'move', 'none']),\n  data: _react.PropTypes.shape({\n    x: _react.PropTypes.number,\n    y: _react.PropTypes.number,\n    width: _react.PropTypes.number,\n    height: _react.PropTypes.number,\n    rotate: _react.PropTypes.number,\n    scaleX: _react.PropTypes.number,\n    scaleY: _react.PropTypes.number\n  }),\n  scaleX: _react.PropTypes.number,\n  scaleY: _react.PropTypes.number,\n  enable: _react.PropTypes.bool,\n  cropBoxData: _react.PropTypes.shape({\n    left: _react.PropTypes.number,\n    top: _react.PropTypes.number,\n    width: _react.PropTypes.number,\n    hegiht: _react.PropTypes.number\n  }),\n  canvasData: _react.PropTypes.shape({\n    left: _react.PropTypes.number,\n    top: _react.PropTypes.number,\n    width: _react.PropTypes.number,\n    hegiht: _react.PropTypes.number\n  }),\n  zoomTo: _react.PropTypes.number,\n  moveTo: _react.PropTypes.arrayOf(_react.PropTypes.number),\n  rotateTo: _react.PropTypes.number,\n\n  // cropperjs options\n  // https://github.com/fengyuanchen/cropperjs#options\n  // aspectRatio, dragMode, data\n  viewMode: _react.PropTypes.oneOf([0, 1, 2, 3]),\n  preview: _react.PropTypes.string,\n  responsive: _react.PropTypes.bool,\n  restore: _react.PropTypes.bool,\n  checkCrossOrigin: _react.PropTypes.bool,\n  checkOrientation: _react.PropTypes.bool,\n  modal: _react.PropTypes.bool,\n  guides: _react.PropTypes.bool,\n  center: _react.PropTypes.bool,\n  highlight: _react.PropTypes.bool,\n  background: _react.PropTypes.bool,\n  autoCrop: _react.PropTypes.bool,\n  autoCropArea: _react.PropTypes.number,\n  movable: _react.PropTypes.bool,\n  rotatable: _react.PropTypes.bool,\n  scalable: _react.PropTypes.bool,\n  zoomable: _react.PropTypes.bool,\n  zoomOnTouch: _react.PropTypes.bool,\n  zoomOnWheel: _react.PropTypes.bool,\n  wheelZoomRation: _react.PropTypes.number,\n  cropBoxMovable: _react.PropTypes.bool,\n  cropBoxResizable: _react.PropTypes.bool,\n  toggleDragModeOnDblclick: _react.PropTypes.bool,\n  minContainerWidth: _react.PropTypes.number,\n  minContainerHeight: _react.PropTypes.number,\n  minCanvasWidth: _react.PropTypes.number,\n  minCanvasHeight: _react.PropTypes.number,\n  minCropBoxWidth: _react.PropTypes.number,\n  minCropBoxHeight: _react.PropTypes.number,\n  ready: _react.PropTypes.func,\n  cropstart: _react.PropTypes.func,\n  cropmove: _react.PropTypes.func,\n  cropend: _react.PropTypes.func,\n  crop: _react.PropTypes.func,\n  zoom: _react.PropTypes.func\n};\n\nReactCropper.defaultProps = {\n  src: null,\n  dragMode: 'crop',\n  data: null,\n  scaleX: 1,\n  scaleY: 1,\n  enable: true,\n  zoomTo: 1,\n  rotateTo: 0\n};\n\nexports.default = ReactCropper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-cropper/dist/react-cropper.js\n// module id = 583\n// module chunks = 1","/*!\n * Cropper.js v0.8.1\n * https://github.com/fengyuanchen/cropperjs\n *\n * Copyright (c) 2015-2016 Fengyuan Chen\n * Released under the MIT license\n *\n * Date: 2016-09-03T04:55:16.458Z\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _defaults = __webpack_require__(1);\n\t\n\tvar _defaults2 = _interopRequireDefault(_defaults);\n\t\n\tvar _template = __webpack_require__(2);\n\t\n\tvar _template2 = _interopRequireDefault(_template);\n\t\n\tvar _render = __webpack_require__(3);\n\t\n\tvar _render2 = _interopRequireDefault(_render);\n\t\n\tvar _preview = __webpack_require__(5);\n\t\n\tvar _preview2 = _interopRequireDefault(_preview);\n\t\n\tvar _events = __webpack_require__(6);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _handlers = __webpack_require__(7);\n\t\n\tvar _handlers2 = _interopRequireDefault(_handlers);\n\t\n\tvar _change = __webpack_require__(8);\n\t\n\tvar _change2 = _interopRequireDefault(_change);\n\t\n\tvar _methods = __webpack_require__(9);\n\t\n\tvar _methods2 = _interopRequireDefault(_methods);\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Constants\n\tvar NAMESPACE = 'cropper';\n\t\n\t// Classes\n\tvar CLASS_HIDDEN = NAMESPACE + '-hidden';\n\t\n\t// Events\n\tvar EVENT_ERROR = 'error';\n\tvar EVENT_LOAD = 'load';\n\tvar EVENT_READY = 'ready';\n\tvar EVENT_CROP = 'crop';\n\t\n\t// RegExps\n\tvar REGEXP_DATA_URL = /^data:/;\n\tvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg.*;base64,/;\n\t\n\tvar AnotherCropper = void 0;\n\t\n\tvar Cropper = function () {\n\t  function Cropper(element, options) {\n\t    _classCallCheck(this, Cropper);\n\t\n\t    var self = this;\n\t\n\t    self.element = element;\n\t    self.options = $.extend({}, _defaults2.default, $.isPlainObject(options) && options);\n\t    self.loaded = false;\n\t    self.ready = false;\n\t    self.complete = false;\n\t    self.rotated = false;\n\t    self.cropped = false;\n\t    self.disabled = false;\n\t    self.replaced = false;\n\t    self.limited = false;\n\t    self.wheeling = false;\n\t    self.isImg = false;\n\t    self.originalUrl = '';\n\t    self.canvasData = null;\n\t    self.cropBoxData = null;\n\t    self.previews = null;\n\t    self.init();\n\t  }\n\t\n\t  _createClass(Cropper, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      var self = this;\n\t      var element = self.element;\n\t      var tagName = element.tagName.toLowerCase();\n\t      var url = void 0;\n\t\n\t      if ($.getData(element, NAMESPACE)) {\n\t        return;\n\t      }\n\t\n\t      $.setData(element, NAMESPACE, self);\n\t\n\t      if (tagName === 'img') {\n\t        self.isImg = true;\n\t\n\t        // e.g.: \"img/picture.jpg\"\n\t        self.originalUrl = url = element.getAttribute('src');\n\t\n\t        // Stop when it's a blank image\n\t        if (!url) {\n\t          return;\n\t        }\n\t\n\t        // e.g.: \"http://example.com/img/picture.jpg\"\n\t        url = element.src;\n\t      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n\t        url = element.toDataURL();\n\t      }\n\t\n\t      self.load(url);\n\t    }\n\t  }, {\n\t    key: 'load',\n\t    value: function load(url) {\n\t      var self = this;\n\t      var options = self.options;\n\t      var element = self.element;\n\t\n\t      if (!url) {\n\t        return;\n\t      }\n\t\n\t      self.url = url;\n\t      self.imageData = {};\n\t\n\t      if (!options.checkOrientation || !window.ArrayBuffer) {\n\t        self.clone();\n\t        return;\n\t      }\n\t\n\t      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\t      if (REGEXP_DATA_URL.test(url)) {\n\t        if (REGEXP_DATA_URL_JPEG) {\n\t          self.read($.dataURLToArrayBuffer(url));\n\t        } else {\n\t          self.clone();\n\t        }\n\t        return;\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest();\n\t\n\t      xhr.onerror = xhr.onabort = function () {\n\t        self.clone();\n\t      };\n\t\n\t      xhr.onload = function () {\n\t        self.read(xhr.response);\n\t      };\n\t\n\t      if (options.checkCrossOrigin && $.isCrossOriginURL(url) && element.crossOrigin) {\n\t        url = $.addTimestamp(url);\n\t      }\n\t\n\t      xhr.open('get', url);\n\t      xhr.responseType = 'arraybuffer';\n\t      xhr.send();\n\t    }\n\t  }, {\n\t    key: 'read',\n\t    value: function read(arrayBuffer) {\n\t      var self = this;\n\t      var options = self.options;\n\t      var orientation = $.getOrientation(arrayBuffer);\n\t      var imageData = self.imageData;\n\t      var rotate = 0;\n\t      var scaleX = 1;\n\t      var scaleY = 1;\n\t\n\t      if (orientation > 1) {\n\t        self.url = $.arrayBufferToDataURL(arrayBuffer);\n\t\n\t        switch (orientation) {\n\t\n\t          // flip horizontal\n\t          case 2:\n\t            scaleX = -1;\n\t            break;\n\t\n\t          // rotate left 180°\n\t          case 3:\n\t            rotate = -180;\n\t            break;\n\t\n\t          // flip vertical\n\t          case 4:\n\t            scaleY = -1;\n\t            break;\n\t\n\t          // flip vertical + rotate right 90°\n\t          case 5:\n\t            rotate = 90;\n\t            scaleY = -1;\n\t            break;\n\t\n\t          // rotate right 90°\n\t          case 6:\n\t            rotate = 90;\n\t            break;\n\t\n\t          // flip horizontal + rotate right 90°\n\t          case 7:\n\t            rotate = 90;\n\t            scaleX = -1;\n\t            break;\n\t\n\t          // rotate left 90°\n\t          case 8:\n\t            rotate = -90;\n\t            break;\n\t        }\n\t      }\n\t\n\t      if (options.rotatable) {\n\t        imageData.rotate = rotate;\n\t      }\n\t\n\t      if (options.scalable) {\n\t        imageData.scaleX = scaleX;\n\t        imageData.scaleY = scaleY;\n\t      }\n\t\n\t      self.clone();\n\t    }\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      var self = this;\n\t      var element = self.element;\n\t      var url = self.url;\n\t      var crossOrigin = void 0;\n\t      var crossOriginUrl = void 0;\n\t      var start = void 0;\n\t      var stop = void 0;\n\t\n\t      if (self.options.checkCrossOrigin && $.isCrossOriginURL(url)) {\n\t        crossOrigin = element.crossOrigin;\n\t\n\t        if (crossOrigin) {\n\t          crossOriginUrl = url;\n\t        } else {\n\t          crossOrigin = 'anonymous';\n\t\n\t          // Bust cache when there is not a \"crossOrigin\" property\n\t          crossOriginUrl = $.addTimestamp(url);\n\t        }\n\t      }\n\t\n\t      self.crossOrigin = crossOrigin;\n\t      self.crossOriginUrl = crossOriginUrl;\n\t\n\t      var image = $.createElement('img');\n\t\n\t      if (crossOrigin) {\n\t        image.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      image.src = crossOriginUrl || url;\n\t      self.image = image;\n\t      self.onStart = start = $.proxy(self.start, self);\n\t      self.onStop = stop = $.proxy(self.stop, self);\n\t\n\t      if (self.isImg) {\n\t        if (element.complete) {\n\t          self.start();\n\t        } else {\n\t          $.addListener(element, EVENT_LOAD, start);\n\t        }\n\t      } else {\n\t        $.addListener(image, EVENT_LOAD, start);\n\t        $.addListener(image, EVENT_ERROR, stop);\n\t        $.addClass(image, 'cropper-hide');\n\t        element.parentNode.insertBefore(image, element.nextSibling);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'start',\n\t    value: function start(event) {\n\t      var self = this;\n\t      var image = self.isImg ? self.element : self.image;\n\t\n\t      if (event) {\n\t        $.removeListener(image, EVENT_LOAD, self.onStart);\n\t        $.removeListener(image, EVENT_ERROR, self.onStop);\n\t      }\n\t\n\t      $.getImageSize(image, function (naturalWidth, naturalHeight) {\n\t        $.extend(self.imageData, {\n\t          naturalWidth: naturalWidth,\n\t          naturalHeight: naturalHeight,\n\t          aspectRatio: naturalWidth / naturalHeight\n\t        });\n\t\n\t        self.loaded = true;\n\t        self.build();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      var self = this;\n\t      var image = self.image;\n\t\n\t      $.removeListener(image, EVENT_LOAD, self.onStart);\n\t      $.removeListener(image, EVENT_ERROR, self.onStop);\n\t\n\t      $.removeChild(image);\n\t      self.image = null;\n\t    }\n\t  }, {\n\t    key: 'build',\n\t    value: function build() {\n\t      var self = this;\n\t      var options = self.options;\n\t      var element = self.element;\n\t      var image = self.image;\n\t      var container = void 0;\n\t      var cropper = void 0;\n\t      var canvas = void 0;\n\t      var dragBox = void 0;\n\t      var cropBox = void 0;\n\t      var face = void 0;\n\t\n\t      if (!self.loaded) {\n\t        return;\n\t      }\n\t\n\t      // Unbuild first when replace\n\t      if (self.ready) {\n\t        self.unbuild();\n\t      }\n\t\n\t      var template = $.createElement('div');\n\t      template.innerHTML = _template2.default;\n\t\n\t      // Create cropper elements\n\t      self.container = container = element.parentNode;\n\t      self.cropper = cropper = $.getByClass(template, 'cropper-container')[0];\n\t      self.canvas = canvas = $.getByClass(cropper, 'cropper-canvas')[0];\n\t      self.dragBox = dragBox = $.getByClass(cropper, 'cropper-drag-box')[0];\n\t      self.cropBox = cropBox = $.getByClass(cropper, 'cropper-crop-box')[0];\n\t      self.viewBox = $.getByClass(cropper, 'cropper-view-box')[0];\n\t      self.face = face = $.getByClass(cropBox, 'cropper-face')[0];\n\t\n\t      $.appendChild(canvas, image);\n\t\n\t      // Hide the original image\n\t      $.addClass(element, CLASS_HIDDEN);\n\t\n\t      // Inserts the cropper after to the current image\n\t      container.insertBefore(cropper, element.nextSibling);\n\t\n\t      // Show the image if is hidden\n\t      if (!self.isImg) {\n\t        $.removeClass(image, 'cropper-hide');\n\t      }\n\t\n\t      self.initPreview();\n\t      self.bind();\n\t\n\t      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n\t      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\t\n\t      if (options.autoCrop) {\n\t        self.cropped = true;\n\t\n\t        if (options.modal) {\n\t          $.addClass(dragBox, 'cropper-modal');\n\t        }\n\t      } else {\n\t        $.addClass(cropBox, CLASS_HIDDEN);\n\t      }\n\t\n\t      if (!options.guides) {\n\t        $.addClass($.getByClass(cropBox, 'cropper-dashed'), CLASS_HIDDEN);\n\t      }\n\t\n\t      if (!options.center) {\n\t        $.addClass($.getByClass(cropBox, 'cropper-center'), CLASS_HIDDEN);\n\t      }\n\t\n\t      if (options.background) {\n\t        $.addClass(cropper, 'cropper-bg');\n\t      }\n\t\n\t      if (!options.highlight) {\n\t        $.addClass(face, 'cropper-invisible');\n\t      }\n\t\n\t      if (options.cropBoxMovable) {\n\t        $.addClass(face, 'cropper-move');\n\t        $.setData(face, 'action', 'all');\n\t      }\n\t\n\t      if (!options.cropBoxResizable) {\n\t        $.addClass($.getByClass(cropBox, 'cropper-line'), CLASS_HIDDEN);\n\t        $.addClass($.getByClass(cropBox, 'cropper-point'), CLASS_HIDDEN);\n\t      }\n\t\n\t      self.setDragMode(options.dragMode);\n\t      self.render();\n\t      self.ready = true;\n\t      self.setData(options.data);\n\t\n\t      // Call the \"ready\" option asynchronously to keep \"image.cropper\" is defined\n\t      self.completing = setTimeout(function () {\n\t        if ($.isFunction(options.ready)) {\n\t          $.addListener(element, EVENT_READY, options.ready, true);\n\t        }\n\t\n\t        $.dispatchEvent(element, EVENT_READY);\n\t        $.dispatchEvent(element, EVENT_CROP, self.getData());\n\t\n\t        self.complete = true;\n\t      }, 0);\n\t    }\n\t  }, {\n\t    key: 'unbuild',\n\t    value: function unbuild() {\n\t      var self = this;\n\t\n\t      if (!self.ready) {\n\t        return;\n\t      }\n\t\n\t      if (!self.complete) {\n\t        clearTimeout(self.completing);\n\t      }\n\t\n\t      self.ready = false;\n\t      self.complete = false;\n\t      self.initialImageData = null;\n\t\n\t      // Clear `initialCanvasData` is necessary when replace\n\t      self.initialCanvasData = null;\n\t      self.initialCropBoxData = null;\n\t      self.containerData = null;\n\t      self.canvasData = null;\n\t\n\t      // Clear `cropBoxData` is necessary when replace\n\t      self.cropBoxData = null;\n\t      self.unbind();\n\t\n\t      self.resetPreview();\n\t      self.previews = null;\n\t\n\t      self.viewBox = null;\n\t      self.cropBox = null;\n\t      self.dragBox = null;\n\t      self.canvas = null;\n\t      self.container = null;\n\t\n\t      $.removeChild(self.cropper);\n\t      self.cropper = null;\n\t    }\n\t  }], [{\n\t    key: 'noConflict',\n\t    value: function noConflict() {\n\t      window.Cropper = AnotherCropper;\n\t      return Cropper;\n\t    }\n\t  }, {\n\t    key: 'setDefaults',\n\t    value: function setDefaults(options) {\n\t      $.extend(_defaults2.default, $.isPlainObject(options) && options);\n\t    }\n\t  }]);\n\t\n\t  return Cropper;\n\t}();\n\t\n\t$.extend(Cropper.prototype, _render2.default);\n\t$.extend(Cropper.prototype, _preview2.default);\n\t$.extend(Cropper.prototype, _events2.default);\n\t$.extend(Cropper.prototype, _handlers2.default);\n\t$.extend(Cropper.prototype, _change2.default);\n\t$.extend(Cropper.prototype, _methods2.default);\n\t\n\tif (typeof window !== 'undefined') {\n\t  AnotherCropper = window.Cropper;\n\t  window.Cropper = Cropper;\n\t}\n\t\n\texports.default = Cropper;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  // Define the view mode of the cropper\n\t  viewMode: 0, // 0, 1, 2, 3\n\t\n\t  // Define the dragging mode of the cropper\n\t  dragMode: 'crop', // 'crop', 'move' or 'none'\n\t\n\t  // Define the aspect ratio of the crop box\n\t  aspectRatio: NaN,\n\t\n\t  // An object with the previous cropping result data\n\t  data: null,\n\t\n\t  // A selector for adding extra containers to preview\n\t  preview: '',\n\t\n\t  // Re-render the cropper when resize the window\n\t  responsive: true,\n\t\n\t  // Restore the cropped area after resize the window\n\t  restore: true,\n\t\n\t  // Check if the current image is a cross-origin image\n\t  checkCrossOrigin: true,\n\t\n\t  // Check the current image's Exif Orientation information\n\t  checkOrientation: true,\n\t\n\t  // Show the black modal\n\t  modal: true,\n\t\n\t  // Show the dashed lines for guiding\n\t  guides: true,\n\t\n\t  // Show the center indicator for guiding\n\t  center: true,\n\t\n\t  // Show the white modal to highlight the crop box\n\t  highlight: true,\n\t\n\t  // Show the grid background\n\t  background: true,\n\t\n\t  // Enable to crop the image automatically when initialize\n\t  autoCrop: true,\n\t\n\t  // Define the percentage of automatic cropping area when initializes\n\t  autoCropArea: 0.8,\n\t\n\t  // Enable to move the image\n\t  movable: true,\n\t\n\t  // Enable to rotate the image\n\t  rotatable: true,\n\t\n\t  // Enable to scale the image\n\t  scalable: true,\n\t\n\t  // Enable to zoom the image\n\t  zoomable: true,\n\t\n\t  // Enable to zoom the image by dragging touch\n\t  zoomOnTouch: true,\n\t\n\t  // Enable to zoom the image by wheeling mouse\n\t  zoomOnWheel: true,\n\t\n\t  // Define zoom ratio when zoom the image by wheeling mouse\n\t  wheelZoomRatio: 0.1,\n\t\n\t  // Enable to move the crop box\n\t  cropBoxMovable: true,\n\t\n\t  // Enable to resize the crop box\n\t  cropBoxResizable: true,\n\t\n\t  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n\t  toggleDragModeOnDblclick: true,\n\t\n\t  // Size limitation\n\t  minCanvasWidth: 0,\n\t  minCanvasHeight: 0,\n\t  minCropBoxWidth: 0,\n\t  minCropBoxHeight: 0,\n\t  minContainerWidth: 200,\n\t  minContainerHeight: 100,\n\t\n\t  // Shortcuts of events\n\t  ready: null,\n\t  cropstart: null,\n\t  cropmove: null,\n\t  cropend: null,\n\t  crop: null,\n\t  zoom: null\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = '<div class=\"cropper-container\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = {\n\t  render: function render() {\n\t    var self = this;\n\t\n\t    self.initContainer();\n\t    self.initCanvas();\n\t    self.initCropBox();\n\t\n\t    self.renderCanvas();\n\t\n\t    if (self.cropped) {\n\t      self.renderCropBox();\n\t    }\n\t  },\n\t  initContainer: function initContainer() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var element = self.element;\n\t    var container = self.container;\n\t    var cropper = self.cropper;\n\t    var containerData = void 0;\n\t\n\t    $.addClass(cropper, 'cropper-hidden');\n\t    $.removeClass(element, 'cropper-hidden');\n\t\n\t    self.containerData = containerData = {\n\t      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n\t      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n\t    };\n\t\n\t    $.setStyle(cropper, {\n\t      width: containerData.width,\n\t      height: containerData.height\n\t    });\n\t\n\t    $.addClass(element, 'cropper-hidden');\n\t    $.removeClass(cropper, 'cropper-hidden');\n\t  },\n\t\n\t\n\t  // Canvas (image wrapper)\n\t  initCanvas: function initCanvas() {\n\t    var self = this;\n\t    var viewMode = self.options.viewMode;\n\t    var containerData = self.containerData;\n\t    var imageData = self.imageData;\n\t    var rotated = Math.abs(imageData.rotate) === 90;\n\t    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n\t    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n\t    var aspectRatio = naturalWidth / naturalHeight;\n\t    var canvasWidth = containerData.width;\n\t    var canvasHeight = containerData.height;\n\t\n\t    if (containerData.height * aspectRatio > containerData.width) {\n\t      if (viewMode === 3) {\n\t        canvasWidth = containerData.height * aspectRatio;\n\t      } else {\n\t        canvasHeight = containerData.width / aspectRatio;\n\t      }\n\t    } else if (viewMode === 3) {\n\t      canvasHeight = containerData.width / aspectRatio;\n\t    } else {\n\t      canvasWidth = containerData.height * aspectRatio;\n\t    }\n\t\n\t    var canvasData = {\n\t      naturalWidth: naturalWidth,\n\t      naturalHeight: naturalHeight,\n\t      aspectRatio: aspectRatio,\n\t      width: canvasWidth,\n\t      height: canvasHeight\n\t    };\n\t\n\t    canvasData.oldLeft = canvasData.left = (containerData.width - canvasWidth) / 2;\n\t    canvasData.oldTop = canvasData.top = (containerData.height - canvasHeight) / 2;\n\t\n\t    self.canvasData = canvasData;\n\t    self.limited = viewMode === 1 || viewMode === 2;\n\t    self.limitCanvas(true, true);\n\t    self.initialImageData = $.extend({}, imageData);\n\t    self.initialCanvasData = $.extend({}, canvasData);\n\t  },\n\t  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var viewMode = options.viewMode;\n\t    var containerData = self.containerData;\n\t    var canvasData = self.canvasData;\n\t    var aspectRatio = canvasData.aspectRatio;\n\t    var cropBoxData = self.cropBoxData;\n\t    var cropped = self.cropped && cropBoxData;\n\t    var minCanvasWidth = void 0;\n\t    var minCanvasHeight = void 0;\n\t    var newCanvasLeft = void 0;\n\t    var newCanvasTop = void 0;\n\t\n\t    if (sizeLimited) {\n\t      minCanvasWidth = Number(options.minCanvasWidth) || 0;\n\t      minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\t\n\t      if (viewMode > 1) {\n\t        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n\t        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\t\n\t        if (viewMode === 3) {\n\t          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n\t            minCanvasWidth = minCanvasHeight * aspectRatio;\n\t          } else {\n\t            minCanvasHeight = minCanvasWidth / aspectRatio;\n\t          }\n\t        }\n\t      } else if (viewMode > 0) {\n\t        if (minCanvasWidth) {\n\t          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n\t        } else if (minCanvasHeight) {\n\t          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n\t        } else if (cropped) {\n\t          minCanvasWidth = cropBoxData.width;\n\t          minCanvasHeight = cropBoxData.height;\n\t\n\t          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n\t            minCanvasWidth = minCanvasHeight * aspectRatio;\n\t          } else {\n\t            minCanvasHeight = minCanvasWidth / aspectRatio;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (minCanvasWidth && minCanvasHeight) {\n\t        if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n\t          minCanvasHeight = minCanvasWidth / aspectRatio;\n\t        } else {\n\t          minCanvasWidth = minCanvasHeight * aspectRatio;\n\t        }\n\t      } else if (minCanvasWidth) {\n\t        minCanvasHeight = minCanvasWidth / aspectRatio;\n\t      } else if (minCanvasHeight) {\n\t        minCanvasWidth = minCanvasHeight * aspectRatio;\n\t      }\n\t\n\t      canvasData.minWidth = minCanvasWidth;\n\t      canvasData.minHeight = minCanvasHeight;\n\t      canvasData.maxWidth = Infinity;\n\t      canvasData.maxHeight = Infinity;\n\t    }\n\t\n\t    if (positionLimited) {\n\t      if (viewMode) {\n\t        newCanvasLeft = containerData.width - canvasData.width;\n\t        newCanvasTop = containerData.height - canvasData.height;\n\t\n\t        canvasData.minLeft = Math.min(0, newCanvasLeft);\n\t        canvasData.minTop = Math.min(0, newCanvasTop);\n\t        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n\t        canvasData.maxTop = Math.max(0, newCanvasTop);\n\t\n\t        if (cropped && self.limited) {\n\t          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n\t          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n\t          canvasData.maxLeft = cropBoxData.left;\n\t          canvasData.maxTop = cropBoxData.top;\n\t\n\t          if (viewMode === 2) {\n\t            if (canvasData.width >= containerData.width) {\n\t              canvasData.minLeft = Math.min(0, newCanvasLeft);\n\t              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n\t            }\n\t\n\t            if (canvasData.height >= containerData.height) {\n\t              canvasData.minTop = Math.min(0, newCanvasTop);\n\t              canvasData.maxTop = Math.max(0, newCanvasTop);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        canvasData.minLeft = -canvasData.width;\n\t        canvasData.minTop = -canvasData.height;\n\t        canvasData.maxLeft = containerData.width;\n\t        canvasData.maxTop = containerData.height;\n\t      }\n\t    }\n\t  },\n\t  renderCanvas: function renderCanvas(changed) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var imageData = self.imageData;\n\t    var rotate = imageData.rotate;\n\t    var aspectRatio = void 0;\n\t    var rotatedData = void 0;\n\t\n\t    if (self.rotated) {\n\t      self.rotated = false;\n\t\n\t      // Computes rotated sizes with image sizes\n\t      rotatedData = $.getRotatedSizes({\n\t        width: imageData.width,\n\t        height: imageData.height,\n\t        degree: rotate\n\t      });\n\t\n\t      aspectRatio = rotatedData.width / rotatedData.height;\n\t\n\t      if (aspectRatio !== canvasData.aspectRatio) {\n\t        canvasData.left -= (rotatedData.width - canvasData.width) / 2;\n\t        canvasData.top -= (rotatedData.height - canvasData.height) / 2;\n\t        canvasData.width = rotatedData.width;\n\t        canvasData.height = rotatedData.height;\n\t        canvasData.aspectRatio = aspectRatio;\n\t        canvasData.naturalWidth = imageData.naturalWidth;\n\t        canvasData.naturalHeight = imageData.naturalHeight;\n\t\n\t        // Computes rotated sizes with natural image sizes\n\t        if (rotate % 180) {\n\t          rotatedData = $.getRotatedSizes({\n\t            width: imageData.naturalWidth,\n\t            height: imageData.naturalHeight,\n\t            degree: rotate\n\t          });\n\t\n\t          canvasData.naturalWidth = rotatedData.width;\n\t          canvasData.naturalHeight = rotatedData.height;\n\t        }\n\t\n\t        self.limitCanvas(true, false);\n\t      }\n\t    }\n\t\n\t    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n\t      canvasData.left = canvasData.oldLeft;\n\t    }\n\t\n\t    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n\t      canvasData.top = canvasData.oldTop;\n\t    }\n\t\n\t    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n\t    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n\t\n\t    self.limitCanvas(false, true);\n\t\n\t    canvasData.oldLeft = canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n\t    canvasData.oldTop = canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n\t\n\t    $.setStyle(self.canvas, {\n\t      width: canvasData.width,\n\t      height: canvasData.height,\n\t      left: canvasData.left,\n\t      top: canvasData.top\n\t    });\n\t\n\t    self.renderImage();\n\t\n\t    if (self.cropped && self.limited) {\n\t      self.limitCropBox(true, true);\n\t    }\n\t\n\t    if (changed) {\n\t      self.output();\n\t    }\n\t  },\n\t  renderImage: function renderImage(changed) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var imageData = self.imageData;\n\t    var newImageData = void 0;\n\t    var reversedData = void 0;\n\t    var reversedWidth = void 0;\n\t    var reversedHeight = void 0;\n\t\n\t    if (imageData.rotate) {\n\t      reversedData = $.getRotatedSizes({\n\t        width: canvasData.width,\n\t        height: canvasData.height,\n\t        degree: imageData.rotate,\n\t        aspectRatio: imageData.aspectRatio\n\t      }, true);\n\t\n\t      reversedWidth = reversedData.width;\n\t      reversedHeight = reversedData.height;\n\t\n\t      newImageData = {\n\t        width: reversedWidth,\n\t        height: reversedHeight,\n\t        left: (canvasData.width - reversedWidth) / 2,\n\t        top: (canvasData.height - reversedHeight) / 2\n\t      };\n\t    }\n\t\n\t    $.extend(imageData, newImageData || {\n\t      width: canvasData.width,\n\t      height: canvasData.height,\n\t      left: 0,\n\t      top: 0\n\t    });\n\t\n\t    var transform = $.getTransform(imageData);\n\t\n\t    $.setStyle(self.image, {\n\t      width: imageData.width,\n\t      height: imageData.height,\n\t      marginLeft: imageData.left,\n\t      marginTop: imageData.top,\n\t      WebkitTransform: transform,\n\t      msTransform: transform,\n\t      transform: transform\n\t    });\n\t\n\t    if (changed) {\n\t      self.output();\n\t    }\n\t  },\n\t  initCropBox: function initCropBox() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var aspectRatio = options.aspectRatio;\n\t    var autoCropArea = Number(options.autoCropArea) || 0.8;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = {\n\t      width: canvasData.width,\n\t      height: canvasData.height\n\t    };\n\t\n\t    if (aspectRatio) {\n\t      if (canvasData.height * aspectRatio > canvasData.width) {\n\t        cropBoxData.height = cropBoxData.width / aspectRatio;\n\t      } else {\n\t        cropBoxData.width = cropBoxData.height * aspectRatio;\n\t      }\n\t    }\n\t\n\t    self.cropBoxData = cropBoxData;\n\t    self.limitCropBox(true, true);\n\t\n\t    // Initialize auto crop area\n\t    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n\t    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\t\n\t    // The width/height of auto crop area must large than \"minWidth/Height\"\n\t    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n\t    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n\t    cropBoxData.oldLeft = cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n\t    cropBoxData.oldTop = cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n\t\n\t    self.initialCropBoxData = $.extend({}, cropBoxData);\n\t  },\n\t  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var aspectRatio = options.aspectRatio;\n\t    var containerData = self.containerData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = self.cropBoxData;\n\t    var limited = self.limited;\n\t    var minCropBoxWidth = void 0;\n\t    var minCropBoxHeight = void 0;\n\t    var maxCropBoxWidth = void 0;\n\t    var maxCropBoxHeight = void 0;\n\t\n\t    if (sizeLimited) {\n\t      minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n\t      minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n\t\n\t      // The min/maxCropBoxWidth/Height must be less than containerWidth/Height\n\t      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n\t      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\t      maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n\t      maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\n\t\n\t      if (aspectRatio) {\n\t        if (minCropBoxWidth && minCropBoxHeight) {\n\t          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n\t            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n\t          } else {\n\t            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n\t          }\n\t        } else if (minCropBoxWidth) {\n\t          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n\t        } else if (minCropBoxHeight) {\n\t          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n\t        }\n\t\n\t        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n\t          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n\t        } else {\n\t          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n\t        }\n\t      }\n\t\n\t      // The minWidth/Height must be less than maxWidth/Height\n\t      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n\t      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n\t      cropBoxData.maxWidth = maxCropBoxWidth;\n\t      cropBoxData.maxHeight = maxCropBoxHeight;\n\t    }\n\t\n\t    if (positionLimited) {\n\t      if (limited) {\n\t        cropBoxData.minLeft = Math.max(0, canvasData.left);\n\t        cropBoxData.minTop = Math.max(0, canvasData.top);\n\t        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n\t        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n\t      } else {\n\t        cropBoxData.minLeft = 0;\n\t        cropBoxData.minTop = 0;\n\t        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n\t        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n\t      }\n\t    }\n\t  },\n\t  renderCropBox: function renderCropBox() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var containerData = self.containerData;\n\t    var cropBoxData = self.cropBoxData;\n\t\n\t    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n\t      cropBoxData.left = cropBoxData.oldLeft;\n\t    }\n\t\n\t    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n\t      cropBoxData.top = cropBoxData.oldTop;\n\t    }\n\t\n\t    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n\t    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\t\n\t    self.limitCropBox(false, true);\n\t\n\t    cropBoxData.oldLeft = cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n\t    cropBoxData.oldTop = cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n\t\n\t    if (options.movable && options.cropBoxMovable) {\n\t      // Turn to move the canvas when the crop box is equal to the container\n\t      $.setData(self.face, 'action', cropBoxData.width === containerData.width && cropBoxData.height === containerData.height ? 'move' : 'all');\n\t    }\n\t\n\t    $.setStyle(self.cropBox, {\n\t      width: cropBoxData.width,\n\t      height: cropBoxData.height,\n\t      left: cropBoxData.left,\n\t      top: cropBoxData.top\n\t    });\n\t\n\t    if (self.cropped && self.limited) {\n\t      self.limitCanvas(true, true);\n\t    }\n\t\n\t    if (!self.disabled) {\n\t      self.output();\n\t    }\n\t  },\n\t  output: function output() {\n\t    var self = this;\n\t\n\t    self.preview();\n\t\n\t    if (self.complete) {\n\t      $.dispatchEvent(self.element, 'crop', self.getData());\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\texports.typeOf = typeOf;\n\texports.isNumber = isNumber;\n\texports.isUndefined = isUndefined;\n\texports.isObject = isObject;\n\texports.isPlainObject = isPlainObject;\n\texports.isFunction = isFunction;\n\texports.isArray = isArray;\n\texports.toArray = toArray;\n\texports.trim = trim;\n\texports.each = each;\n\texports.extend = extend;\n\texports.proxy = proxy;\n\texports.setStyle = setStyle;\n\texports.hasClass = hasClass;\n\texports.addClass = addClass;\n\texports.removeClass = removeClass;\n\texports.toggleClass = toggleClass;\n\texports.hyphenate = hyphenate;\n\texports.getData = getData;\n\texports.setData = setData;\n\texports.removeData = removeData;\n\texports.removeListener = removeListener;\n\texports.dispatchEvent = dispatchEvent;\n\texports.getEvent = getEvent;\n\texports.getOffset = getOffset;\n\texports.getTouchesCenter = getTouchesCenter;\n\texports.getByTag = getByTag;\n\texports.getByClass = getByClass;\n\texports.createElement = createElement;\n\texports.appendChild = appendChild;\n\texports.removeChild = removeChild;\n\texports.empty = empty;\n\texports.isCrossOriginURL = isCrossOriginURL;\n\texports.addTimestamp = addTimestamp;\n\texports.getImageSize = getImageSize;\n\texports.getTransform = getTransform;\n\texports.getRotatedSizes = getRotatedSizes;\n\texports.getSourceCanvas = getSourceCanvas;\n\texports.getStringFromCharCode = getStringFromCharCode;\n\texports.getOrientation = getOrientation;\n\texports.dataURLToArrayBuffer = dataURLToArrayBuffer;\n\texports.arrayBufferToDataURL = arrayBufferToDataURL;\n\t// RegExps\n\tvar REGEXP_DATA_URL_HEAD = /^data:([^;]+);base64,/;\n\tvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\tvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:\\/\\?#]+):?(\\d*)/i;\n\tvar REGEXP_SPACES = /\\s+/;\n\tvar REGEXP_SUFFIX = /^(width|height|left|top|marginLeft|marginTop)$/;\n\tvar REGEXP_TRIM = /^\\s+(.*)\\s+$/;\n\tvar REGEXP_USERAGENT = /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i;\n\tvar navigator = window.navigator;\n\tvar IS_SAFARI_OR_UIWEBVIEW = navigator && REGEXP_USERAGENT.test(navigator.userAgent);\n\t\n\t// Utilities\n\tvar objectProto = Object.prototype;\n\tvar toString = objectProto.toString;\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\tvar slice = Array.prototype.slice;\n\tvar fromCharCode = String.fromCharCode;\n\t\n\tfunction typeOf(obj) {\n\t  return toString.call(obj).slice(8, -1).toLowerCase();\n\t}\n\t\n\tfunction isNumber(num) {\n\t  return typeof num === 'number' && !isNaN(num);\n\t}\n\t\n\tfunction isUndefined(obj) {\n\t  return typeof obj === 'undefined';\n\t}\n\t\n\tfunction isObject(obj) {\n\t  return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t  if (!isObject(obj)) {\n\t    return false;\n\t  }\n\t\n\t  try {\n\t    var _constructor = obj.constructor;\n\t    var prototype = _constructor.prototype;\n\t\n\t    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\t\n\tfunction isFunction(fn) {\n\t  return typeOf(fn) === 'function';\n\t}\n\t\n\tfunction isArray(arr) {\n\t  return Array.isArray ? Array.isArray(arr) : typeOf(arr) === 'array';\n\t}\n\t\n\tfunction toArray(obj, offset) {\n\t  offset = offset >= 0 ? offset : 0;\n\t\n\t  if (Array.from) {\n\t    return Array.from(obj).slice(offset);\n\t  }\n\t\n\t  return slice.call(obj, offset);\n\t}\n\t\n\tfunction trim(str) {\n\t  if (typeof str === 'string') {\n\t    str = str.trim ? str.trim() : str.replace(REGEXP_TRIM, '$1');\n\t  }\n\t\n\t  return str;\n\t}\n\t\n\tfunction each(obj, callback) {\n\t  if (obj && isFunction(callback)) {\n\t    var i = void 0;\n\t\n\t    if (isArray(obj) || isNumber(obj.length) /* array-like */) {\n\t        var length = obj.length;\n\t\n\t        for (i = 0; i < length; i++) {\n\t          if (callback.call(obj, obj[i], i, obj) === false) {\n\t            break;\n\t          }\n\t        }\n\t      } else if (isObject(obj)) {\n\t      Object.keys(obj).forEach(function (key) {\n\t        callback.call(obj, obj[key], key, obj);\n\t      });\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\tfunction extend() {\n\t  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  var deep = args[0] === true;\n\t  var data = deep ? args[1] : args[0];\n\t\n\t  if (args.length > 1) {\n\t    // if (Object.assign) {\n\t    //   return Object.assign.apply(Object, args);\n\t    // }\n\t\n\t    args.shift();\n\t\n\t    args.forEach(function (arg) {\n\t      if (isObject(arg)) {\n\t        Object.keys(arg).forEach(function (key) {\n\t          if (deep && isObject(data[key])) {\n\t            extend(true, data[key], arg[key]);\n\t          } else {\n\t            data[key] = arg[key];\n\t          }\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  return data;\n\t}\n\t\n\tfunction proxy(fn, context) {\n\t  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t    args[_key2 - 2] = arguments[_key2];\n\t  }\n\t\n\t  return function () {\n\t    for (var _len3 = arguments.length, args2 = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t      args2[_key3] = arguments[_key3];\n\t    }\n\t\n\t    return fn.apply(context, args.concat(args2));\n\t  };\n\t}\n\t\n\tfunction setStyle(element, styles) {\n\t  var style = element.style;\n\t\n\t  each(styles, function (value, property) {\n\t    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n\t      value += 'px';\n\t    }\n\t\n\t    style[property] = value;\n\t  });\n\t}\n\t\n\tfunction hasClass(element, value) {\n\t  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n\t}\n\t\n\tfunction addClass(element, value) {\n\t  if (isNumber(element.length)) {\n\t    each(element, function (elem) {\n\t      addClass(elem, value);\n\t    });\n\t    return;\n\t  }\n\t\n\t  if (element.classList) {\n\t    element.classList.add(value);\n\t    return;\n\t  }\n\t\n\t  var className = trim(element.className);\n\t\n\t  if (!className) {\n\t    element.className = value;\n\t  } else if (className.indexOf(value) < 0) {\n\t    element.className = className + ' ' + value;\n\t  }\n\t}\n\t\n\tfunction removeClass(element, value) {\n\t  if (isNumber(element.length)) {\n\t    each(element, function (elem) {\n\t      removeClass(elem, value);\n\t    });\n\t    return;\n\t  }\n\t\n\t  if (element.classList) {\n\t    element.classList.remove(value);\n\t    return;\n\t  }\n\t\n\t  if (element.className.indexOf(value) >= 0) {\n\t    element.className = element.className.replace(value, '');\n\t  }\n\t}\n\t\n\tfunction toggleClass(element, value, added) {\n\t  if (isNumber(element.length)) {\n\t    each(element, function (elem) {\n\t      toggleClass(elem, value, added);\n\t    });\n\t    return;\n\t  }\n\t\n\t  // IE10-11 doesn't support the second parameter of `classList.toggle`\n\t  if (added) {\n\t    addClass(element, value);\n\t  } else {\n\t    removeClass(element, value);\n\t  }\n\t}\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n\t}\n\t\n\tfunction getData(element, name) {\n\t  if (isObject(element[name])) {\n\t    return element[name];\n\t  } else if (element.dataset) {\n\t    return element.dataset[name];\n\t  }\n\t\n\t  return element.getAttribute('data-' + hyphenate(name));\n\t}\n\t\n\tfunction setData(element, name, data) {\n\t  if (isObject(data)) {\n\t    element[name] = data;\n\t  } else if (element.dataset) {\n\t    element.dataset[name] = data;\n\t  } else {\n\t    element.setAttribute('data-' + hyphenate(name), data);\n\t  }\n\t}\n\t\n\tfunction removeData(element, name) {\n\t  if (isObject(element[name])) {\n\t    delete element[name];\n\t  } else if (element.dataset) {\n\t    delete element.dataset[name];\n\t  } else {\n\t    element.removeAttribute('data-' + hyphenate(name));\n\t  }\n\t}\n\t\n\tfunction removeListener(element, type, handler) {\n\t  var types = trim(type).split(REGEXP_SPACES);\n\t\n\t  if (types.length > 1) {\n\t    each(types, function (t) {\n\t      removeListener(element, t, handler);\n\t    });\n\t    return;\n\t  }\n\t\n\t  if (element.removeEventListener) {\n\t    element.removeEventListener(type, handler, false);\n\t  } else if (element.detachEvent) {\n\t    element.detachEvent('on' + type, handler);\n\t  }\n\t}\n\t\n\tfunction addListener(element, type, _handler, once) {\n\t  var types = trim(type).split(REGEXP_SPACES);\n\t  var originalHandler = _handler;\n\t\n\t  if (types.length > 1) {\n\t    each(types, function (t) {\n\t      addListener(element, t, _handler);\n\t    });\n\t    return;\n\t  }\n\t\n\t  if (once) {\n\t    _handler = function handler() {\n\t      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t        args[_key4] = arguments[_key4];\n\t      }\n\t\n\t      removeListener(element, type, _handler);\n\t\n\t      return originalHandler.apply(element, args);\n\t    };\n\t  }\n\t\n\t  if (element.addEventListener) {\n\t    element.addEventListener(type, _handler, false);\n\t  } else if (element.attachEvent) {\n\t    element.attachEvent('on${type}', _handler);\n\t  }\n\t}\n\t\n\texports.addListener = addListener;\n\tfunction dispatchEvent(element, type, data) {\n\t  if (element.dispatchEvent) {\n\t    var event = void 0;\n\t\n\t    // Event and CustomEvent on IE9-11 are global objects, not constructors\n\t    if (isFunction(Event) && isFunction(CustomEvent)) {\n\t      if (isUndefined(data)) {\n\t        event = new Event(type, {\n\t          bubbles: true,\n\t          cancelable: true\n\t        });\n\t      } else {\n\t        event = new CustomEvent(type, {\n\t          detail: data,\n\t          bubbles: true,\n\t          cancelable: true\n\t        });\n\t      }\n\t    } else if (isUndefined(data)) {\n\t      event = document.createEvent('Event');\n\t      event.initEvent(type, true, true);\n\t    } else {\n\t      event = document.createEvent('CustomEvent');\n\t      event.initCustomEvent(type, true, true, data);\n\t    }\n\t\n\t    // IE9+\n\t    return element.dispatchEvent(event);\n\t  } else if (element.fireEvent) {\n\t    // IE6-10 (native events only)\n\t    return element.fireEvent('on' + type);\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tfunction getEvent(event) {\n\t  var e = event || window.event;\n\t\n\t  // Fix target property (IE8)\n\t  if (!e.target) {\n\t    e.target = e.srcElement || document;\n\t  }\n\t\n\t  if (!isNumber(e.pageX) && isNumber(e.clientX)) {\n\t    var eventDoc = event.target.ownerDocument || document;\n\t    var doc = eventDoc.documentElement;\n\t    var body = eventDoc.body;\n\t\n\t    e.pageX = e.clientX + ((doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0));\n\t    e.pageY = e.clientY + ((doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0));\n\t  }\n\t\n\t  return e;\n\t}\n\t\n\tfunction getOffset(element) {\n\t  var doc = document.documentElement;\n\t  var box = element.getBoundingClientRect();\n\t\n\t  return {\n\t    left: box.left + ((window.scrollX || doc && doc.scrollLeft || 0) - (doc && doc.clientLeft || 0)),\n\t    top: box.top + ((window.scrollY || doc && doc.scrollTop || 0) - (doc && doc.clientTop || 0))\n\t  };\n\t}\n\t\n\tfunction getTouchesCenter(touches) {\n\t  var length = touches.length;\n\t  var pageX = 0;\n\t  var pageY = 0;\n\t\n\t  if (length) {\n\t    each(touches, function (touch) {\n\t      pageX += touch.pageX;\n\t      pageY += touch.pageY;\n\t    });\n\t\n\t    pageX /= length;\n\t    pageY /= length;\n\t  }\n\t\n\t  return {\n\t    pageX: pageX,\n\t    pageY: pageY\n\t  };\n\t}\n\t\n\tfunction getByTag(element, tagName) {\n\t  return element.getElementsByTagName(tagName);\n\t}\n\t\n\tfunction getByClass(element, className) {\n\t  return element.getElementsByClassName ? element.getElementsByClassName(className) : element.querySelectorAll('.' + className);\n\t}\n\t\n\tfunction createElement(tagName) {\n\t  return document.createElement(tagName);\n\t}\n\t\n\tfunction appendChild(element, elem) {\n\t  element.appendChild(elem);\n\t}\n\t\n\tfunction removeChild(element) {\n\t  if (element.parentNode) {\n\t    element.parentNode.removeChild(element);\n\t  }\n\t}\n\t\n\tfunction empty(element) {\n\t  while (element.firstChild) {\n\t    element.removeChild(element.firstChild);\n\t  }\n\t}\n\t\n\tfunction isCrossOriginURL(url) {\n\t  var parts = url.match(REGEXP_ORIGINS);\n\t\n\t  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n\t}\n\t\n\tfunction addTimestamp(url) {\n\t  var timestamp = 'timestamp=' + new Date().getTime();\n\t\n\t  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n\t}\n\t\n\tfunction getImageSize(image, callback) {\n\t  // Modern browsers (ignore Safari)\n\t  if (image.naturalWidth && !IS_SAFARI_OR_UIWEBVIEW) {\n\t    callback(image.naturalWidth, image.naturalHeight);\n\t    return;\n\t  }\n\t\n\t  // IE8: Don't use `new Image()` here\n\t  var newImage = createElement('img');\n\t\n\t  newImage.onload = function load() {\n\t    callback(this.width, this.height);\n\t  };\n\t\n\t  newImage.src = image.src;\n\t}\n\t\n\tfunction getTransform(data) {\n\t  var transforms = [];\n\t  var rotate = data.rotate;\n\t  var scaleX = data.scaleX;\n\t  var scaleY = data.scaleY;\n\t\n\t  // Rotate should come first before scale to match orientation transform\n\t  if (isNumber(rotate) && rotate !== 0) {\n\t    transforms.push('rotate(' + rotate + 'deg)');\n\t  }\n\t\n\t  if (isNumber(scaleX) && scaleX !== 1) {\n\t    transforms.push('scaleX(' + scaleX + ')');\n\t  }\n\t\n\t  if (isNumber(scaleY) && scaleY !== 1) {\n\t    transforms.push('scaleY(' + scaleY + ')');\n\t  }\n\t\n\t  return transforms.length ? transforms.join(' ') : 'none';\n\t}\n\t\n\tfunction getRotatedSizes(data, reversed) {\n\t  var deg = Math.abs(data.degree) % 180;\n\t  var arc = (deg > 90 ? 180 - deg : deg) * Math.PI / 180;\n\t  var sinArc = Math.sin(arc);\n\t  var cosArc = Math.cos(arc);\n\t  var width = data.width;\n\t  var height = data.height;\n\t  var aspectRatio = data.aspectRatio;\n\t  var newWidth = void 0;\n\t  var newHeight = void 0;\n\t\n\t  if (!reversed) {\n\t    newWidth = width * cosArc + height * sinArc;\n\t    newHeight = width * sinArc + height * cosArc;\n\t  } else {\n\t    newWidth = width / (cosArc + sinArc / aspectRatio);\n\t    newHeight = newWidth / aspectRatio;\n\t  }\n\t\n\t  return {\n\t    width: newWidth,\n\t    height: newHeight\n\t  };\n\t}\n\t\n\tfunction getSourceCanvas(image, data) {\n\t  var canvas = createElement('canvas');\n\t  var context = canvas.getContext('2d');\n\t  var dstX = 0;\n\t  var dstY = 0;\n\t  var dstWidth = data.naturalWidth;\n\t  var dstHeight = data.naturalHeight;\n\t  var rotate = data.rotate;\n\t  var scaleX = data.scaleX;\n\t  var scaleY = data.scaleY;\n\t  var scalable = isNumber(scaleX) && isNumber(scaleY) && (scaleX !== 1 || scaleY !== 1);\n\t  var rotatable = isNumber(rotate) && rotate !== 0;\n\t  var advanced = rotatable || scalable;\n\t  var canvasWidth = dstWidth * Math.abs(scaleX || 1);\n\t  var canvasHeight = dstHeight * Math.abs(scaleY || 1);\n\t  var translateX = void 0;\n\t  var translateY = void 0;\n\t  var rotated = void 0;\n\t\n\t  if (scalable) {\n\t    translateX = canvasWidth / 2;\n\t    translateY = canvasHeight / 2;\n\t  }\n\t\n\t  if (rotatable) {\n\t    rotated = getRotatedSizes({\n\t      width: canvasWidth,\n\t      height: canvasHeight,\n\t      degree: rotate\n\t    });\n\t\n\t    canvasWidth = rotated.width;\n\t    canvasHeight = rotated.height;\n\t    translateX = canvasWidth / 2;\n\t    translateY = canvasHeight / 2;\n\t  }\n\t\n\t  canvas.width = canvasWidth;\n\t  canvas.height = canvasHeight;\n\t\n\t  if (advanced) {\n\t    dstX = -dstWidth / 2;\n\t    dstY = -dstHeight / 2;\n\t\n\t    context.save();\n\t    context.translate(translateX, translateY);\n\t  }\n\t\n\t  // Rotate should come first before scale as in the \"getTransform\" function\n\t  if (rotatable) {\n\t    context.rotate(rotate * Math.PI / 180);\n\t  }\n\t\n\t  if (scalable) {\n\t    context.scale(scaleX, scaleY);\n\t  }\n\t\n\t  context.drawImage(image, Math.floor(dstX), Math.floor(dstY), Math.floor(dstWidth), Math.floor(dstHeight));\n\t\n\t  if (advanced) {\n\t    context.restore();\n\t  }\n\t\n\t  return canvas;\n\t}\n\t\n\tfunction getStringFromCharCode(dataView, start, length) {\n\t  var str = '';\n\t  var i = start;\n\t\n\t  for (length += start; i < length; i++) {\n\t    str += fromCharCode(dataView.getUint8(i));\n\t  }\n\t\n\t  return str;\n\t}\n\t\n\tfunction getOrientation(arrayBuffer) {\n\t  var dataView = new DataView(arrayBuffer);\n\t  var length = dataView.byteLength;\n\t  var orientation = void 0;\n\t  var exifIDCode = void 0;\n\t  var tiffOffset = void 0;\n\t  var firstIFDOffset = void 0;\n\t  var littleEndian = void 0;\n\t  var endianness = void 0;\n\t  var app1Start = void 0;\n\t  var ifdStart = void 0;\n\t  var offset = void 0;\n\t  var i = void 0;\n\t\n\t  // Only handle JPEG image (start by 0xFFD8)\n\t  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n\t    offset = 2;\n\t\n\t    while (offset < length) {\n\t      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n\t        app1Start = offset;\n\t        break;\n\t      }\n\t\n\t      offset++;\n\t    }\n\t  }\n\t\n\t  if (app1Start) {\n\t    exifIDCode = app1Start + 4;\n\t    tiffOffset = app1Start + 10;\n\t\n\t    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n\t      endianness = dataView.getUint16(tiffOffset);\n\t      littleEndian = endianness === 0x4949;\n\t\n\t      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n\t          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n\t            firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\t\n\t            if (firstIFDOffset >= 0x00000008) {\n\t              ifdStart = tiffOffset + firstIFDOffset;\n\t            }\n\t          }\n\t        }\n\t    }\n\t  }\n\t\n\t  if (ifdStart) {\n\t    length = dataView.getUint16(ifdStart, littleEndian);\n\t\n\t    for (i = 0; i < length; i++) {\n\t      offset = ifdStart + i * 12 + 2;\n\t\n\t      if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n\t          // 8 is the offset of the current tag's value\n\t          offset += 8;\n\t\n\t          // Get the original orientation value\n\t          orientation = dataView.getUint16(offset, littleEndian);\n\t\n\t          // Override the orientation with its default value for Safari\n\t          if (IS_SAFARI_OR_UIWEBVIEW) {\n\t            dataView.setUint16(offset, 1, littleEndian);\n\t          }\n\t\n\t          break;\n\t        }\n\t    }\n\t  }\n\t\n\t  return orientation;\n\t}\n\t\n\tfunction dataURLToArrayBuffer(dataURL) {\n\t  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n\t  var binary = atob(base64);\n\t  var length = binary.length;\n\t  var arrayBuffer = new ArrayBuffer(length);\n\t  var dataView = new Uint8Array(arrayBuffer);\n\t  var i = void 0;\n\t\n\t  for (i = 0; i < length; i++) {\n\t    dataView[i] = binary.charCodeAt(i);\n\t  }\n\t\n\t  return arrayBuffer;\n\t}\n\t\n\t// Only available for JPEG image\n\tfunction arrayBufferToDataURL(arrayBuffer) {\n\t  var dataView = new Uint8Array(arrayBuffer);\n\t  var length = dataView.length;\n\t  var base64 = '';\n\t  var i = void 0;\n\t\n\t  for (i = 0; i < length; i++) {\n\t    base64 += fromCharCode(dataView[i]);\n\t  }\n\t\n\t  return 'data:image/jpeg;base64,' + btoa(base64);\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar DATA_PREVIEW = 'preview';\n\t\n\texports.default = {\n\t  initPreview: function initPreview() {\n\t    var self = this;\n\t    var preview = self.options.preview;\n\t    var image = $.createElement('img');\n\t    var crossOrigin = self.crossOrigin;\n\t    var url = crossOrigin ? self.crossOriginUrl : self.url;\n\t\n\t    if (crossOrigin) {\n\t      image.crossOrigin = crossOrigin;\n\t    }\n\t\n\t    image.src = url;\n\t    $.appendChild(self.viewBox, image);\n\t    self.image2 = image;\n\t\n\t    if (!preview) {\n\t      return;\n\t    }\n\t\n\t    var previews = document.querySelectorAll(preview);\n\t\n\t    self.previews = previews;\n\t\n\t    $.each(previews, function (element) {\n\t      var img = $.createElement('img');\n\t\n\t      // Save the original size for recover\n\t      $.setData(element, DATA_PREVIEW, {\n\t        width: element.offsetWidth,\n\t        height: element.offsetHeight,\n\t        html: element.innerHTML\n\t      });\n\t\n\t      if (crossOrigin) {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t\n\t      /**\n\t       * Override img element styles\n\t       * Add `display:block` to avoid margin top issue\n\t       * Add `height:auto` to override `height` attribute on IE8\n\t       * (Occur only when margin-top <= -height)\n\t       */\n\t\n\t      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n\t\n\t      $.empty(element);\n\t      $.appendChild(element, img);\n\t    });\n\t  },\n\t  resetPreview: function resetPreview() {\n\t    $.each(this.previews, function (element) {\n\t      var data = $.getData(element, DATA_PREVIEW);\n\t\n\t      $.setStyle(element, {\n\t        width: data.width,\n\t        height: data.height\n\t      });\n\t\n\t      element.innerHTML = data.html;\n\t      $.removeData(element, DATA_PREVIEW);\n\t    });\n\t  },\n\t  preview: function preview() {\n\t    var self = this;\n\t    var imageData = self.imageData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = self.cropBoxData;\n\t    var cropBoxWidth = cropBoxData.width;\n\t    var cropBoxHeight = cropBoxData.height;\n\t    var width = imageData.width;\n\t    var height = imageData.height;\n\t    var left = cropBoxData.left - canvasData.left - imageData.left;\n\t    var top = cropBoxData.top - canvasData.top - imageData.top;\n\t    var transform = $.getTransform(imageData);\n\t    var transforms = {\n\t      WebkitTransform: transform,\n\t      msTransform: transform,\n\t      transform: transform\n\t    };\n\t\n\t    if (!self.cropped || self.disabled) {\n\t      return;\n\t    }\n\t\n\t    $.setStyle(self.image2, $.extend({\n\t      width: width,\n\t      height: height,\n\t      marginLeft: -left,\n\t      marginTop: -top\n\t    }, transforms));\n\t\n\t    $.each(self.previews, function (element) {\n\t      var data = $.getData(element, DATA_PREVIEW);\n\t      var originalWidth = data.width;\n\t      var originalHeight = data.height;\n\t      var newWidth = originalWidth;\n\t      var newHeight = originalHeight;\n\t      var ratio = 1;\n\t\n\t      if (cropBoxWidth) {\n\t        ratio = originalWidth / cropBoxWidth;\n\t        newHeight = cropBoxHeight * ratio;\n\t      }\n\t\n\t      if (cropBoxHeight && newHeight > originalHeight) {\n\t        ratio = originalHeight / cropBoxHeight;\n\t        newWidth = cropBoxWidth * ratio;\n\t        newHeight = originalHeight;\n\t      }\n\t\n\t      $.setStyle(element, {\n\t        width: newWidth,\n\t        height: newHeight\n\t      });\n\t\n\t      $.setStyle($.getByTag(element, 'img')[0], $.extend({\n\t        width: width * ratio,\n\t        height: height * ratio,\n\t        marginLeft: -left * ratio,\n\t        marginTop: -top * ratio\n\t      }, transforms));\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// Events\n\tvar EVENT_MOUSE_DOWN = 'mousedown touchstart pointerdown MSPointerDown';\n\tvar EVENT_MOUSE_MOVE = 'mousemove touchmove pointermove MSPointerMove';\n\tvar EVENT_MOUSE_UP = 'mouseup touchend touchcancel pointerup pointercancel' + ' MSPointerUp MSPointerCancel';\n\tvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\n\tvar EVENT_DBLCLICK = 'dblclick';\n\tvar EVENT_RESIZE = 'resize';\n\tvar EVENT_CROP_START = 'cropstart';\n\tvar EVENT_CROP_MOVE = 'cropmove';\n\tvar EVENT_CROP_END = 'cropend';\n\tvar EVENT_CROP = 'crop';\n\tvar EVENT_ZOOM = 'zoom';\n\t\n\texports.default = {\n\t  bind: function bind() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var element = self.element;\n\t    var cropper = self.cropper;\n\t\n\t    if ($.isFunction(options.cropstart)) {\n\t      $.addListener(element, EVENT_CROP_START, options.cropstart);\n\t    }\n\t\n\t    if ($.isFunction(options.cropmove)) {\n\t      $.addListener(element, EVENT_CROP_MOVE, options.cropmove);\n\t    }\n\t\n\t    if ($.isFunction(options.cropend)) {\n\t      $.addListener(element, EVENT_CROP_END, options.cropend);\n\t    }\n\t\n\t    if ($.isFunction(options.crop)) {\n\t      $.addListener(element, EVENT_CROP, options.crop);\n\t    }\n\t\n\t    if ($.isFunction(options.zoom)) {\n\t      $.addListener(element, EVENT_ZOOM, options.zoom);\n\t    }\n\t\n\t    $.addListener(cropper, EVENT_MOUSE_DOWN, self.onCropStart = $.proxy(self.cropStart, self));\n\t\n\t    if (options.zoomable && options.zoomOnWheel) {\n\t      $.addListener(cropper, EVENT_WHEEL, self.onWheel = $.proxy(self.wheel, self));\n\t    }\n\t\n\t    if (options.toggleDragModeOnDblclick) {\n\t      $.addListener(cropper, EVENT_DBLCLICK, self.onDblclick = $.proxy(self.dblclick, self));\n\t    }\n\t\n\t    $.addListener(document, EVENT_MOUSE_MOVE, self.onCropMove = $.proxy(self.cropMove, self));\n\t    $.addListener(document, EVENT_MOUSE_UP, self.onCropEnd = $.proxy(self.cropEnd, self));\n\t\n\t    if (options.responsive) {\n\t      $.addListener(window, EVENT_RESIZE, self.onResize = $.proxy(self.resize, self));\n\t    }\n\t  },\n\t  unbind: function unbind() {\n\t    var self = this;\n\t    var options = self.options;\n\t    var element = self.element;\n\t    var cropper = self.cropper;\n\t\n\t    if ($.isFunction(options.cropstart)) {\n\t      $.removeListener(element, EVENT_CROP_START, options.cropstart);\n\t    }\n\t\n\t    if ($.isFunction(options.cropmove)) {\n\t      $.removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n\t    }\n\t\n\t    if ($.isFunction(options.cropend)) {\n\t      $.removeListener(element, EVENT_CROP_END, options.cropend);\n\t    }\n\t\n\t    if ($.isFunction(options.crop)) {\n\t      $.removeListener(element, EVENT_CROP, options.crop);\n\t    }\n\t\n\t    if ($.isFunction(options.zoom)) {\n\t      $.removeListener(element, EVENT_ZOOM, options.zoom);\n\t    }\n\t\n\t    $.removeListener(cropper, EVENT_MOUSE_DOWN, self.onCropStart);\n\t\n\t    if (options.zoomable && options.zoomOnWheel) {\n\t      $.removeListener(cropper, EVENT_WHEEL, self.onWheel);\n\t    }\n\t\n\t    if (options.toggleDragModeOnDblclick) {\n\t      $.removeListener(cropper, EVENT_DBLCLICK, self.onDblclick);\n\t    }\n\t\n\t    $.removeListener(document, EVENT_MOUSE_MOVE, self.onCropMove);\n\t    $.removeListener(document, EVENT_MOUSE_UP, self.onCropEnd);\n\t\n\t    if (options.responsive) {\n\t      $.removeListener(window, EVENT_RESIZE, self.onResize);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.REGEXP_ACTIONS = undefined;\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar REGEXP_ACTIONS = exports.REGEXP_ACTIONS = /^(e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\n\t\n\texports.default = {\n\t  resize: function resize() {\n\t    var self = this;\n\t    var restore = self.options.restore;\n\t    var container = self.container;\n\t    var containerData = self.containerData;\n\t\n\t    // Check `container` is necessary for IE8\n\t    if (self.disabled || !containerData) {\n\t      return;\n\t    }\n\t\n\t    var ratio = container.offsetWidth / containerData.width;\n\t    var canvasData = void 0;\n\t    var cropBoxData = void 0;\n\t\n\t    // Resize when width changed or height changed\n\t    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n\t      if (restore) {\n\t        canvasData = self.getCanvasData();\n\t        cropBoxData = self.getCropBoxData();\n\t      }\n\t\n\t      self.render();\n\t\n\t      if (restore) {\n\t        self.setCanvasData($.each(canvasData, function (n, i) {\n\t          canvasData[i] = n * ratio;\n\t        }));\n\t        self.setCropBoxData($.each(cropBoxData, function (n, i) {\n\t          cropBoxData[i] = n * ratio;\n\t        }));\n\t      }\n\t    }\n\t  },\n\t  dblclick: function dblclick() {\n\t    var self = this;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    self.setDragMode($.hasClass(self.dragBox, 'cropper-crop') ? 'move' : 'crop');\n\t  },\n\t  wheel: function wheel(event) {\n\t    var self = this;\n\t    var e = $.getEvent(event);\n\t    var ratio = Number(self.options.wheelZoomRatio) || 0.1;\n\t    var delta = 1;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    e.preventDefault();\n\t\n\t    // Limit wheel speed to prevent zoom too fast (#21)\n\t    if (self.wheeling) {\n\t      return;\n\t    }\n\t\n\t    self.wheeling = true;\n\t\n\t    setTimeout(function () {\n\t      self.wheeling = false;\n\t    }, 50);\n\t\n\t    if (e.deltaY) {\n\t      delta = e.deltaY > 0 ? 1 : -1;\n\t    } else if (e.wheelDelta) {\n\t      delta = -e.wheelDelta / 120;\n\t    } else if (e.detail) {\n\t      delta = e.detail > 0 ? 1 : -1;\n\t    }\n\t\n\t    self.zoom(-delta * ratio, e);\n\t  },\n\t  cropStart: function cropStart(event) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var e = $.getEvent(event);\n\t    var touches = e.touches;\n\t    var touchesLength = void 0;\n\t    var touch = void 0;\n\t    var action = void 0;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    if (touches) {\n\t      touchesLength = touches.length;\n\t\n\t      if (touchesLength > 1) {\n\t        if (options.zoomable && options.zoomOnTouch && touchesLength === 2) {\n\t          touch = touches[1];\n\t          self.startX2 = touch.pageX;\n\t          self.startY2 = touch.pageY;\n\t          action = 'zoom';\n\t        } else {\n\t          return;\n\t        }\n\t      }\n\t\n\t      touch = touches[0];\n\t    }\n\t\n\t    action = action || $.getData(e.target, 'action');\n\t\n\t    if (REGEXP_ACTIONS.test(action)) {\n\t      if ($.dispatchEvent(self.element, 'cropstart', {\n\t        originalEvent: e,\n\t        action: action\n\t      }) === false) {\n\t        return;\n\t      }\n\t\n\t      e.preventDefault();\n\t\n\t      self.action = action;\n\t      self.cropping = false;\n\t\n\t      self.startX = touch ? touch.pageX : e.pageX;\n\t      self.startY = touch ? touch.pageY : e.pageY;\n\t\n\t      if (action === 'crop') {\n\t        self.cropping = true;\n\t        $.addClass(self.dragBox, 'cropper-modal');\n\t      }\n\t    }\n\t  },\n\t  cropMove: function cropMove(event) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var e = $.getEvent(event);\n\t    var touches = e.touches;\n\t    var action = self.action;\n\t    var touchesLength = void 0;\n\t    var touch = void 0;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    if (touches) {\n\t      touchesLength = touches.length;\n\t\n\t      if (touchesLength > 1) {\n\t        if (options.zoomable && options.zoomOnTouch && touchesLength === 2) {\n\t          touch = touches[1];\n\t          self.endX2 = touch.pageX;\n\t          self.endY2 = touch.pageY;\n\t        } else {\n\t          return;\n\t        }\n\t      }\n\t\n\t      touch = touches[0];\n\t    }\n\t\n\t    if (action) {\n\t      if ($.dispatchEvent(self.element, 'cropmove', {\n\t        originalEvent: e,\n\t        action: action\n\t      }) === false) {\n\t        return;\n\t      }\n\t\n\t      e.preventDefault();\n\t\n\t      self.endX = touch ? touch.pageX : e.pageX;\n\t      self.endY = touch ? touch.pageY : e.pageY;\n\t\n\t      self.change(e.shiftKey, action === 'zoom' ? e : null);\n\t    }\n\t  },\n\t  cropEnd: function cropEnd(event) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var e = $.getEvent(event);\n\t    var action = self.action;\n\t\n\t    if (self.disabled) {\n\t      return;\n\t    }\n\t\n\t    if (action) {\n\t      e.preventDefault();\n\t\n\t      if (self.cropping) {\n\t        self.cropping = false;\n\t        $.toggleClass(self.dragBox, 'cropper-modal', self.cropped && options.modal);\n\t      }\n\t\n\t      self.action = '';\n\t\n\t      $.dispatchEvent(self.element, 'cropend', {\n\t        originalEvent: e,\n\t        action: action\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// Actions\n\tvar ACTION_EAST = 'e';\n\tvar ACTION_WEST = 'w';\n\tvar ACTION_SOUTH = 's';\n\tvar ACTION_NORTH = 'n';\n\tvar ACTION_SOUTH_EAST = 'se';\n\tvar ACTION_SOUTH_WEST = 'sw';\n\tvar ACTION_NORTH_EAST = 'ne';\n\tvar ACTION_NORTH_WEST = 'nw';\n\t\n\texports.default = {\n\t  change: function change(shiftKey, originalEvent) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var containerData = self.containerData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = self.cropBoxData;\n\t    var aspectRatio = options.aspectRatio;\n\t    var action = self.action;\n\t    var width = cropBoxData.width;\n\t    var height = cropBoxData.height;\n\t    var left = cropBoxData.left;\n\t    var top = cropBoxData.top;\n\t    var right = left + width;\n\t    var bottom = top + height;\n\t    var minLeft = 0;\n\t    var minTop = 0;\n\t    var maxWidth = containerData.width;\n\t    var maxHeight = containerData.height;\n\t    var renderable = true;\n\t    var offset = void 0;\n\t\n\t    // Locking aspect ratio in \"free mode\" by holding shift key\n\t    if (!aspectRatio && shiftKey) {\n\t      aspectRatio = width && height ? width / height : 1;\n\t    }\n\t\n\t    if (self.limited) {\n\t      minLeft = cropBoxData.minLeft;\n\t      minTop = cropBoxData.minTop;\n\t      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n\t      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n\t    }\n\t\n\t    var range = {\n\t      x: self.endX - self.startX,\n\t      y: self.endY - self.startY\n\t    };\n\t\n\t    if (aspectRatio) {\n\t      range.X = range.y * aspectRatio;\n\t      range.Y = range.x / aspectRatio;\n\t    }\n\t\n\t    switch (action) {\n\t      // Move crop box\n\t      case 'all':\n\t        left += range.x;\n\t        top += range.y;\n\t        break;\n\t\n\t      // Resize crop box\n\t      case ACTION_EAST:\n\t        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        width += range.x;\n\t\n\t        if (aspectRatio) {\n\t          height = width / aspectRatio;\n\t          top -= range.Y / 2;\n\t        }\n\t\n\t        if (width < 0) {\n\t          action = ACTION_WEST;\n\t          width = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_NORTH:\n\t        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        height -= range.y;\n\t        top += range.y;\n\t\n\t        if (aspectRatio) {\n\t          width = height * aspectRatio;\n\t          left += range.X / 2;\n\t        }\n\t\n\t        if (height < 0) {\n\t          action = ACTION_SOUTH;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_WEST:\n\t        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        width -= range.x;\n\t        left += range.x;\n\t\n\t        if (aspectRatio) {\n\t          height = width / aspectRatio;\n\t          top += range.Y / 2;\n\t        }\n\t\n\t        if (width < 0) {\n\t          action = ACTION_EAST;\n\t          width = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_SOUTH:\n\t        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        height += range.y;\n\t\n\t        if (aspectRatio) {\n\t          width = height * aspectRatio;\n\t          left -= range.X / 2;\n\t        }\n\t\n\t        if (height < 0) {\n\t          action = ACTION_NORTH;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_NORTH_EAST:\n\t        if (aspectRatio) {\n\t          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n\t            renderable = false;\n\t            break;\n\t          }\n\t\n\t          height -= range.y;\n\t          top += range.y;\n\t          width = height * aspectRatio;\n\t        } else {\n\t          if (range.x >= 0) {\n\t            if (right < maxWidth) {\n\t              width += range.x;\n\t            } else if (range.y <= 0 && top <= minTop) {\n\t              renderable = false;\n\t            }\n\t          } else {\n\t            width += range.x;\n\t          }\n\t\n\t          if (range.y <= 0) {\n\t            if (top > minTop) {\n\t              height -= range.y;\n\t              top += range.y;\n\t            }\n\t          } else {\n\t            height -= range.y;\n\t            top += range.y;\n\t          }\n\t        }\n\t\n\t        if (width < 0 && height < 0) {\n\t          action = ACTION_SOUTH_WEST;\n\t          height = 0;\n\t          width = 0;\n\t        } else if (width < 0) {\n\t          action = ACTION_NORTH_WEST;\n\t          width = 0;\n\t        } else if (height < 0) {\n\t          action = ACTION_SOUTH_EAST;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_NORTH_WEST:\n\t        if (aspectRatio) {\n\t          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n\t            renderable = false;\n\t            break;\n\t          }\n\t\n\t          height -= range.y;\n\t          top += range.y;\n\t          width = height * aspectRatio;\n\t          left += range.X;\n\t        } else {\n\t          if (range.x <= 0) {\n\t            if (left > minLeft) {\n\t              width -= range.x;\n\t              left += range.x;\n\t            } else if (range.y <= 0 && top <= minTop) {\n\t              renderable = false;\n\t            }\n\t          } else {\n\t            width -= range.x;\n\t            left += range.x;\n\t          }\n\t\n\t          if (range.y <= 0) {\n\t            if (top > minTop) {\n\t              height -= range.y;\n\t              top += range.y;\n\t            }\n\t          } else {\n\t            height -= range.y;\n\t            top += range.y;\n\t          }\n\t        }\n\t\n\t        if (width < 0 && height < 0) {\n\t          action = ACTION_SOUTH_EAST;\n\t          height = 0;\n\t          width = 0;\n\t        } else if (width < 0) {\n\t          action = ACTION_NORTH_EAST;\n\t          width = 0;\n\t        } else if (height < 0) {\n\t          action = ACTION_SOUTH_WEST;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_SOUTH_WEST:\n\t        if (aspectRatio) {\n\t          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n\t            renderable = false;\n\t            break;\n\t          }\n\t\n\t          width -= range.x;\n\t          left += range.x;\n\t          height = width / aspectRatio;\n\t        } else {\n\t          if (range.x <= 0) {\n\t            if (left > minLeft) {\n\t              width -= range.x;\n\t              left += range.x;\n\t            } else if (range.y >= 0 && bottom >= maxHeight) {\n\t              renderable = false;\n\t            }\n\t          } else {\n\t            width -= range.x;\n\t            left += range.x;\n\t          }\n\t\n\t          if (range.y >= 0) {\n\t            if (bottom < maxHeight) {\n\t              height += range.y;\n\t            }\n\t          } else {\n\t            height += range.y;\n\t          }\n\t        }\n\t\n\t        if (width < 0 && height < 0) {\n\t          action = ACTION_NORTH_EAST;\n\t          height = 0;\n\t          width = 0;\n\t        } else if (width < 0) {\n\t          action = ACTION_SOUTH_EAST;\n\t          width = 0;\n\t        } else if (height < 0) {\n\t          action = ACTION_NORTH_WEST;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      case ACTION_SOUTH_EAST:\n\t        if (aspectRatio) {\n\t          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n\t            renderable = false;\n\t            break;\n\t          }\n\t\n\t          width += range.x;\n\t          height = width / aspectRatio;\n\t        } else {\n\t          if (range.x >= 0) {\n\t            if (right < maxWidth) {\n\t              width += range.x;\n\t            } else if (range.y >= 0 && bottom >= maxHeight) {\n\t              renderable = false;\n\t            }\n\t          } else {\n\t            width += range.x;\n\t          }\n\t\n\t          if (range.y >= 0) {\n\t            if (bottom < maxHeight) {\n\t              height += range.y;\n\t            }\n\t          } else {\n\t            height += range.y;\n\t          }\n\t        }\n\t\n\t        if (width < 0 && height < 0) {\n\t          action = ACTION_NORTH_WEST;\n\t          height = 0;\n\t          width = 0;\n\t        } else if (width < 0) {\n\t          action = ACTION_SOUTH_WEST;\n\t          width = 0;\n\t        } else if (height < 0) {\n\t          action = ACTION_NORTH_EAST;\n\t          height = 0;\n\t        }\n\t\n\t        break;\n\t\n\t      // Move canvas\n\t      case 'move':\n\t        self.move(range.x, range.y);\n\t        renderable = false;\n\t        break;\n\t\n\t      // Zoom canvas\n\t      case 'zoom':\n\t        self.zoom(function (x1, y1, x2, y2) {\n\t          var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n\t          var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n\t\n\t          return (z2 - z1) / z1;\n\t        }(Math.abs(self.startX - self.startX2), Math.abs(self.startY - self.startY2), Math.abs(self.endX - self.endX2), Math.abs(self.endY - self.endY2)), originalEvent);\n\t        self.startX2 = self.endX2;\n\t        self.startY2 = self.endY2;\n\t        renderable = false;\n\t        break;\n\t\n\t      // Create crop box\n\t      case 'crop':\n\t        if (!range.x || !range.y) {\n\t          renderable = false;\n\t          break;\n\t        }\n\t\n\t        offset = $.getOffset(self.cropper);\n\t        left = self.startX - offset.left;\n\t        top = self.startY - offset.top;\n\t        width = cropBoxData.minWidth;\n\t        height = cropBoxData.minHeight;\n\t\n\t        if (range.x > 0) {\n\t          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n\t        } else if (range.x < 0) {\n\t          left -= width;\n\t          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n\t        }\n\t\n\t        if (range.y < 0) {\n\t          top -= height;\n\t        }\n\t\n\t        // Show the crop box if is hidden\n\t        if (!self.cropped) {\n\t          $.removeClass(self.cropBox, 'cropper-hidden');\n\t          self.cropped = true;\n\t\n\t          if (self.limited) {\n\t            self.limitCropBox(true, true);\n\t          }\n\t        }\n\t\n\t        break;\n\t\n\t      // No default\n\t    }\n\t\n\t    if (renderable) {\n\t      cropBoxData.width = width;\n\t      cropBoxData.height = height;\n\t      cropBoxData.left = left;\n\t      cropBoxData.top = top;\n\t      self.action = action;\n\t\n\t      self.renderCropBox();\n\t    }\n\t\n\t    // Override\n\t    self.startX = self.endX;\n\t    self.startY = self.endY;\n\t  }\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utilities = __webpack_require__(4);\n\t\n\tvar $ = _interopRequireWildcard(_utilities);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\texports.default = {\n\t  // Show the crop box manually\n\t  crop: function crop() {\n\t    var self = this;\n\t\n\t    if (self.ready && !self.disabled) {\n\t      if (!self.cropped) {\n\t        self.cropped = true;\n\t        self.limitCropBox(true, true);\n\t\n\t        if (self.options.modal) {\n\t          $.addClass(self.dragBox, 'cropper-modal');\n\t        }\n\t\n\t        $.removeClass(self.cropBox, 'cropper-hidden');\n\t      }\n\t\n\t      self.setCropBoxData(self.initialCropBoxData);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Reset the image and crop box to their initial states\n\t  reset: function reset() {\n\t    var self = this;\n\t\n\t    if (self.ready && !self.disabled) {\n\t      self.imageData = $.extend({}, self.initialImageData);\n\t      self.canvasData = $.extend({}, self.initialCanvasData);\n\t      self.cropBoxData = $.extend({}, self.initialCropBoxData);\n\t\n\t      self.renderCanvas();\n\t\n\t      if (self.cropped) {\n\t        self.renderCropBox();\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Clear the crop box\n\t  clear: function clear() {\n\t    var self = this;\n\t\n\t    if (self.cropped && !self.disabled) {\n\t      $.extend(self.cropBoxData, {\n\t        left: 0,\n\t        top: 0,\n\t        width: 0,\n\t        height: 0\n\t      });\n\t\n\t      self.cropped = false;\n\t      self.renderCropBox();\n\t\n\t      self.limitCanvas();\n\t\n\t      // Render canvas after crop box rendered\n\t      self.renderCanvas();\n\t\n\t      $.removeClass(self.dragBox, 'cropper-modal');\n\t      $.addClass(self.cropBox, 'cropper-hidden');\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Replace the image's src and rebuild the cropper\n\t   *\n\t   * @param {String} url\n\t   * @param {Boolean} onlyColorChanged (optional)\n\t   */\n\t  replace: function replace(url, onlyColorChanged) {\n\t    var self = this;\n\t\n\t    if (!self.disabled && url) {\n\t      if (self.isImg) {\n\t        self.element.src = url;\n\t      }\n\t\n\t      if (onlyColorChanged) {\n\t        self.url = url;\n\t        self.image.src = url;\n\t\n\t        if (self.ready) {\n\t          self.image2.src = url;\n\t\n\t          $.each(self.previews, function (element) {\n\t            $.getByTag(element, 'img')[0].src = url;\n\t          });\n\t        }\n\t      } else {\n\t        if (self.isImg) {\n\t          self.replaced = true;\n\t        }\n\t\n\t        // Clear previous data\n\t        self.options.data = null;\n\t        self.load(url);\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Enable (unfreeze) the cropper\n\t  enable: function enable() {\n\t    var self = this;\n\t\n\t    if (self.ready) {\n\t      self.disabled = false;\n\t      $.removeClass(self.cropper, 'cropper-disabled');\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Disable (freeze) the cropper\n\t  disable: function disable() {\n\t    var self = this;\n\t\n\t    if (self.ready) {\n\t      self.disabled = true;\n\t      $.addClass(self.cropper, 'cropper-disabled');\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  // Destroy the cropper and remove the instance from the image\n\t  destroy: function destroy() {\n\t    var self = this;\n\t    var element = self.element;\n\t    var image = self.image;\n\t\n\t    if (self.loaded) {\n\t      if (self.isImg && self.replaced) {\n\t        element.src = self.originalUrl;\n\t      }\n\t\n\t      self.unbuild();\n\t      $.removeClass(element, 'cropper-hidden');\n\t    } else if (self.isImg) {\n\t      $.removeListener(element, 'load', self.start);\n\t    } else if (image) {\n\t      $.removeChild(image);\n\t    }\n\t\n\t    $.removeData(element, 'cropper');\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Move the canvas with relative offsets\n\t   *\n\t   * @param {Number} offsetX\n\t   * @param {Number} offsetY (optional)\n\t   */\n\t  move: function move(offsetX, offsetY) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t\n\t    return self.moveTo($.isUndefined(offsetX) ? offsetX : canvasData.left + Number(offsetX), $.isUndefined(offsetY) ? offsetY : canvasData.top + Number(offsetY));\n\t  },\n\t\n\t\n\t  /**\n\t   * Move the canvas to an absolute point\n\t   *\n\t   * @param {Number} x\n\t   * @param {Number} y (optional)\n\t   */\n\t  moveTo: function moveTo(x, y) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var changed = false;\n\t\n\t    // If \"y\" is not present, its default value is \"x\"\n\t    if ($.isUndefined(y)) {\n\t      y = x;\n\t    }\n\t\n\t    x = Number(x);\n\t    y = Number(y);\n\t\n\t    if (self.ready && !self.disabled && self.options.movable) {\n\t      if ($.isNumber(x)) {\n\t        canvasData.left = x;\n\t        changed = true;\n\t      }\n\t\n\t      if ($.isNumber(y)) {\n\t        canvasData.top = y;\n\t        changed = true;\n\t      }\n\t\n\t      if (changed) {\n\t        self.renderCanvas(true);\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Zoom the canvas with a relative ratio\n\t   *\n\t   * @param {Number} ratio\n\t   * @param {Event} _originalEvent (private)\n\t   */\n\t  zoom: function zoom(ratio, _originalEvent) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t\n\t    ratio = Number(ratio);\n\t\n\t    if (ratio < 0) {\n\t      ratio = 1 / (1 - ratio);\n\t    } else {\n\t      ratio = 1 + ratio;\n\t    }\n\t\n\t    return self.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, _originalEvent);\n\t  },\n\t\n\t\n\t  /**\n\t   * Zoom the canvas to an absolute ratio\n\t   *\n\t   * @param {Number} ratio\n\t   * @param {Event} _originalEvent (private)\n\t   */\n\t  zoomTo: function zoomTo(ratio, _originalEvent) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var canvasData = self.canvasData;\n\t    var width = canvasData.width;\n\t    var height = canvasData.height;\n\t    var naturalWidth = canvasData.naturalWidth;\n\t    var naturalHeight = canvasData.naturalHeight;\n\t    var newWidth = void 0;\n\t    var newHeight = void 0;\n\t    var offset = void 0;\n\t    var center = void 0;\n\t\n\t    ratio = Number(ratio);\n\t\n\t    if (ratio >= 0 && self.ready && !self.disabled && options.zoomable) {\n\t      newWidth = naturalWidth * ratio;\n\t      newHeight = naturalHeight * ratio;\n\t\n\t      if ($.dispatchEvent(self.element, 'zoom', {\n\t        originalEvent: _originalEvent,\n\t        oldRatio: width / naturalWidth,\n\t        ratio: newWidth / naturalWidth\n\t      }) === false) {\n\t        return self;\n\t      }\n\t\n\t      if (_originalEvent) {\n\t        offset = $.getOffset(self.cropper);\n\t        center = _originalEvent.touches ? $.getTouchesCenter(_originalEvent.touches) : {\n\t          pageX: _originalEvent.pageX,\n\t          pageY: _originalEvent.pageY\n\t        };\n\t\n\t        // Zoom from the triggering point of the event\n\t        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n\t        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n\t      } else {\n\t        // Zoom from the center of the canvas\n\t        canvasData.left -= (newWidth - width) / 2;\n\t        canvasData.top -= (newHeight - height) / 2;\n\t      }\n\t\n\t      canvasData.width = newWidth;\n\t      canvasData.height = newHeight;\n\t      self.renderCanvas(true);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Rotate the canvas with a relative degree\n\t   *\n\t   * @param {Number} degree\n\t   */\n\t  rotate: function rotate(degree) {\n\t    var self = this;\n\t\n\t    return self.rotateTo((self.imageData.rotate || 0) + Number(degree));\n\t  },\n\t\n\t\n\t  /**\n\t   * Rotate the canvas to an absolute degree\n\t   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#rotate()\n\t   *\n\t   * @param {Number} degree\n\t   */\n\t  rotateTo: function rotateTo(degree) {\n\t    var self = this;\n\t\n\t    degree = Number(degree);\n\t\n\t    if ($.isNumber(degree) && self.ready && !self.disabled && self.options.rotatable) {\n\t      self.imageData.rotate = degree % 360;\n\t      self.rotated = true;\n\t      self.renderCanvas(true);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Scale the image\n\t   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#scale()\n\t   *\n\t   * @param {Number} scaleX\n\t   * @param {Number} scaleY (optional)\n\t   */\n\t  scale: function scale(scaleX, scaleY) {\n\t    var self = this;\n\t    var imageData = self.imageData;\n\t    var changed = false;\n\t\n\t    // If \"scaleY\" is not present, its default value is \"scaleX\"\n\t    if ($.isUndefined(scaleY)) {\n\t      scaleY = scaleX;\n\t    }\n\t\n\t    scaleX = Number(scaleX);\n\t    scaleY = Number(scaleY);\n\t\n\t    if (self.ready && !self.disabled && self.options.scalable) {\n\t      if ($.isNumber(scaleX)) {\n\t        imageData.scaleX = scaleX;\n\t        changed = true;\n\t      }\n\t\n\t      if ($.isNumber(scaleY)) {\n\t        imageData.scaleY = scaleY;\n\t        changed = true;\n\t      }\n\t\n\t      if (changed) {\n\t        self.renderImage(true);\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Scale the abscissa of the image\n\t   *\n\t   * @param {Number} scaleX\n\t   */\n\t  scaleX: function scaleX(_scaleX) {\n\t    var self = this;\n\t    var scaleY = self.imageData.scaleY;\n\t\n\t    return self.scale(_scaleX, $.isNumber(scaleY) ? scaleY : 1);\n\t  },\n\t\n\t\n\t  /**\n\t   * Scale the ordinate of the image\n\t   *\n\t   * @param {Number} scaleY\n\t   */\n\t  scaleY: function scaleY(_scaleY) {\n\t    var self = this;\n\t    var scaleX = self.imageData.scaleX;\n\t\n\t    return self.scale($.isNumber(scaleX) ? scaleX : 1, _scaleY);\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the cropped area position and size data (base on the original image)\n\t   *\n\t   * @param {Boolean} rounded (optional)\n\t   * @return {Object} data\n\t   */\n\t  getData: function getData(rounded) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var imageData = self.imageData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = self.cropBoxData;\n\t    var ratio = void 0;\n\t    var data = void 0;\n\t\n\t    if (self.ready && self.cropped) {\n\t      data = {\n\t        x: cropBoxData.left - canvasData.left,\n\t        y: cropBoxData.top - canvasData.top,\n\t        width: cropBoxData.width,\n\t        height: cropBoxData.height\n\t      };\n\t\n\t      ratio = imageData.width / imageData.naturalWidth;\n\t\n\t      $.each(data, function (n, i) {\n\t        n /= ratio;\n\t        data[i] = rounded ? Math.round(n) : n;\n\t      });\n\t    } else {\n\t      data = {\n\t        x: 0,\n\t        y: 0,\n\t        width: 0,\n\t        height: 0\n\t      };\n\t    }\n\t\n\t    if (options.rotatable) {\n\t      data.rotate = imageData.rotate || 0;\n\t    }\n\t\n\t    if (options.scalable) {\n\t      data.scaleX = imageData.scaleX || 1;\n\t      data.scaleY = imageData.scaleY || 1;\n\t    }\n\t\n\t    return data;\n\t  },\n\t\n\t\n\t  /**\n\t   * Set the cropped area position and size with new data\n\t   *\n\t   * @param {Object} data\n\t   */\n\t  setData: function setData(data) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var imageData = self.imageData;\n\t    var canvasData = self.canvasData;\n\t    var cropBoxData = {};\n\t    var rotated = void 0;\n\t    var scaled = void 0;\n\t    var ratio = void 0;\n\t\n\t    if ($.isFunction(data)) {\n\t      data = data.call(self.element);\n\t    }\n\t\n\t    if (self.ready && !self.disabled && $.isPlainObject(data)) {\n\t      if (options.rotatable) {\n\t        if ($.isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n\t          imageData.rotate = data.rotate;\n\t          self.rotated = rotated = true;\n\t        }\n\t      }\n\t\n\t      if (options.scalable) {\n\t        if ($.isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n\t          imageData.scaleX = data.scaleX;\n\t          scaled = true;\n\t        }\n\t\n\t        if ($.isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n\t          imageData.scaleY = data.scaleY;\n\t          scaled = true;\n\t        }\n\t      }\n\t\n\t      if (rotated) {\n\t        self.renderCanvas();\n\t      } else if (scaled) {\n\t        self.renderImage();\n\t      }\n\t\n\t      ratio = imageData.width / imageData.naturalWidth;\n\t\n\t      if ($.isNumber(data.x)) {\n\t        cropBoxData.left = data.x * ratio + canvasData.left;\n\t      }\n\t\n\t      if ($.isNumber(data.y)) {\n\t        cropBoxData.top = data.y * ratio + canvasData.top;\n\t      }\n\t\n\t      if ($.isNumber(data.width)) {\n\t        cropBoxData.width = data.width * ratio;\n\t      }\n\t\n\t      if ($.isNumber(data.height)) {\n\t        cropBoxData.height = data.height * ratio;\n\t      }\n\t\n\t      self.setCropBoxData(cropBoxData);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the container size data\n\t   *\n\t   * @return {Object} data\n\t   */\n\t  getContainerData: function getContainerData() {\n\t    var self = this;\n\t\n\t    return self.ready ? self.containerData : {};\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the image position and size data\n\t   *\n\t   * @return {Object} data\n\t   */\n\t  getImageData: function getImageData() {\n\t    var self = this;\n\t\n\t    return self.loaded ? self.imageData : {};\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the canvas position and size data\n\t   *\n\t   * @return {Object} data\n\t   */\n\t  getCanvasData: function getCanvasData() {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var data = {};\n\t\n\t    if (self.ready) {\n\t      $.each(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n\t        data[n] = canvasData[n];\n\t      });\n\t    }\n\t\n\t    return data;\n\t  },\n\t\n\t\n\t  /**\n\t   * Set the canvas position and size with new data\n\t   *\n\t   * @param {Object} data\n\t   */\n\t  setCanvasData: function setCanvasData(data) {\n\t    var self = this;\n\t    var canvasData = self.canvasData;\n\t    var aspectRatio = canvasData.aspectRatio;\n\t\n\t    if ($.isFunction(data)) {\n\t      data = data.call(self.element);\n\t    }\n\t\n\t    if (self.ready && !self.disabled && $.isPlainObject(data)) {\n\t      if ($.isNumber(data.left)) {\n\t        canvasData.left = data.left;\n\t      }\n\t\n\t      if ($.isNumber(data.top)) {\n\t        canvasData.top = data.top;\n\t      }\n\t\n\t      if ($.isNumber(data.width)) {\n\t        canvasData.width = data.width;\n\t        canvasData.height = data.width / aspectRatio;\n\t      } else if ($.isNumber(data.height)) {\n\t        canvasData.height = data.height;\n\t        canvasData.width = data.height * aspectRatio;\n\t      }\n\t\n\t      self.renderCanvas(true);\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Get the crop box position and size data\n\t   *\n\t   * @return {Object} data\n\t   */\n\t  getCropBoxData: function getCropBoxData() {\n\t    var self = this;\n\t    var cropBoxData = self.cropBoxData;\n\t    var data = void 0;\n\t\n\t    if (self.ready && self.cropped) {\n\t      data = {\n\t        left: cropBoxData.left,\n\t        top: cropBoxData.top,\n\t        width: cropBoxData.width,\n\t        height: cropBoxData.height\n\t      };\n\t    }\n\t\n\t    return data || {};\n\t  },\n\t\n\t\n\t  /**\n\t   * Set the crop box position and size with new data\n\t   *\n\t   * @param {Object} data\n\t   */\n\t  setCropBoxData: function setCropBoxData(data) {\n\t    var self = this;\n\t    var cropBoxData = self.cropBoxData;\n\t    var aspectRatio = self.options.aspectRatio;\n\t    var widthChanged = void 0;\n\t    var heightChanged = void 0;\n\t\n\t    if ($.isFunction(data)) {\n\t      data = data.call(self.element);\n\t    }\n\t\n\t    if (self.ready && self.cropped && !self.disabled && $.isPlainObject(data)) {\n\t      if ($.isNumber(data.left)) {\n\t        cropBoxData.left = data.left;\n\t      }\n\t\n\t      if ($.isNumber(data.top)) {\n\t        cropBoxData.top = data.top;\n\t      }\n\t\n\t      if ($.isNumber(data.width)) {\n\t        widthChanged = true;\n\t        cropBoxData.width = data.width;\n\t      }\n\t\n\t      if ($.isNumber(data.height)) {\n\t        heightChanged = true;\n\t        cropBoxData.height = data.height;\n\t      }\n\t\n\t      if (aspectRatio) {\n\t        if (widthChanged) {\n\t          cropBoxData.height = cropBoxData.width / aspectRatio;\n\t        } else if (heightChanged) {\n\t          cropBoxData.width = cropBoxData.height * aspectRatio;\n\t        }\n\t      }\n\t\n\t      self.renderCropBox();\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Get a canvas drawn the cropped image\n\t   *\n\t   * @param {Object} options (optional)\n\t   * @return {HTMLCanvasElement} canvas\n\t   */\n\t  getCroppedCanvas: function getCroppedCanvas(options) {\n\t    var self = this;\n\t\n\t    if (!self.ready || !window.HTMLCanvasElement) {\n\t      return null;\n\t    }\n\t\n\t    // Return the whole canvas if not cropped\n\t    if (!self.cropped) {\n\t      return $.getSourceCanvas(self.image, self.imageData);\n\t    }\n\t\n\t    if (!$.isPlainObject(options)) {\n\t      options = {};\n\t    }\n\t\n\t    var data = self.getData();\n\t    var originalWidth = data.width;\n\t    var originalHeight = data.height;\n\t    var aspectRatio = originalWidth / originalHeight;\n\t    var scaledWidth = void 0;\n\t    var scaledHeight = void 0;\n\t    var scaledRatio = void 0;\n\t\n\t    if ($.isPlainObject(options)) {\n\t      scaledWidth = options.width;\n\t      scaledHeight = options.height;\n\t\n\t      if (scaledWidth) {\n\t        scaledHeight = scaledWidth / aspectRatio;\n\t        scaledRatio = scaledWidth / originalWidth;\n\t      } else if (scaledHeight) {\n\t        scaledWidth = scaledHeight * aspectRatio;\n\t        scaledRatio = scaledHeight / originalHeight;\n\t      }\n\t    }\n\t\n\t    // The canvas element will use `Math.floor` on a float number, so floor first\n\t    var canvasWidth = Math.floor(scaledWidth || originalWidth);\n\t    var canvasHeight = Math.floor(scaledHeight || originalHeight);\n\t\n\t    var canvas = $.createElement('canvas');\n\t    var context = canvas.getContext('2d');\n\t\n\t    canvas.width = canvasWidth;\n\t    canvas.height = canvasHeight;\n\t\n\t    if (options.fillColor) {\n\t      context.fillStyle = options.fillColor;\n\t      context.fillRect(0, 0, canvasWidth, canvasHeight);\n\t    }\n\t\n\t    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\t    var parameters = function () {\n\t      var source = $.getSourceCanvas(self.image, self.imageData);\n\t      var sourceWidth = source.width;\n\t      var sourceHeight = source.height;\n\t      var canvasData = self.canvasData;\n\t      var params = [source];\n\t\n\t      // Source canvas\n\t      var srcX = data.x + canvasData.naturalWidth * (Math.abs(data.scaleX || 1) - 1) / 2;\n\t      var srcY = data.y + canvasData.naturalHeight * (Math.abs(data.scaleY || 1) - 1) / 2;\n\t      var srcWidth = void 0;\n\t      var srcHeight = void 0;\n\t\n\t      // Destination canvas\n\t      var dstX = void 0;\n\t      var dstY = void 0;\n\t      var dstWidth = void 0;\n\t      var dstHeight = void 0;\n\t\n\t      if (srcX <= -originalWidth || srcX > sourceWidth) {\n\t        srcX = srcWidth = dstX = dstWidth = 0;\n\t      } else if (srcX <= 0) {\n\t        dstX = -srcX;\n\t        srcX = 0;\n\t        srcWidth = dstWidth = Math.min(sourceWidth, originalWidth + srcX);\n\t      } else if (srcX <= sourceWidth) {\n\t        dstX = 0;\n\t        srcWidth = dstWidth = Math.min(originalWidth, sourceWidth - srcX);\n\t      }\n\t\n\t      if (srcWidth <= 0 || srcY <= -originalHeight || srcY > sourceHeight) {\n\t        srcY = srcHeight = dstY = dstHeight = 0;\n\t      } else if (srcY <= 0) {\n\t        dstY = -srcY;\n\t        srcY = 0;\n\t        srcHeight = dstHeight = Math.min(sourceHeight, originalHeight + srcY);\n\t      } else if (srcY <= sourceHeight) {\n\t        dstY = 0;\n\t        srcHeight = dstHeight = Math.min(originalHeight, sourceHeight - srcY);\n\t      }\n\t\n\t      params.push(Math.floor(srcX), Math.floor(srcY), Math.floor(srcWidth), Math.floor(srcHeight));\n\t\n\t      // Scale destination sizes\n\t      if (scaledRatio) {\n\t        dstX *= scaledRatio;\n\t        dstY *= scaledRatio;\n\t        dstWidth *= scaledRatio;\n\t        dstHeight *= scaledRatio;\n\t      }\n\t\n\t      // Avoid \"IndexSizeError\" in IE and Firefox\n\t      if (dstWidth > 0 && dstHeight > 0) {\n\t        params.push(Math.floor(dstX), Math.floor(dstY), Math.floor(dstWidth), Math.floor(dstHeight));\n\t      }\n\t\n\t      return params;\n\t    }();\n\t\n\t    context.drawImage.apply(context, _toConsumableArray(parameters));\n\t\n\t    return canvas;\n\t  },\n\t\n\t\n\t  /**\n\t   * Change the aspect ratio of the crop box\n\t   *\n\t   * @param {Number} aspectRatio\n\t   */\n\t  setAspectRatio: function setAspectRatio(aspectRatio) {\n\t    var self = this;\n\t    var options = self.options;\n\t\n\t    if (!self.disabled && !$.isUndefined(aspectRatio)) {\n\t      // 0 -> NaN\n\t      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\t\n\t      if (self.ready) {\n\t        self.initCropBox();\n\t\n\t        if (self.cropped) {\n\t          self.renderCropBox();\n\t        }\n\t      }\n\t    }\n\t\n\t    return self;\n\t  },\n\t\n\t\n\t  /**\n\t   * Change the drag mode\n\t   *\n\t   * @param {String} mode (optional)\n\t   */\n\t  setDragMode: function setDragMode(mode) {\n\t    var self = this;\n\t    var options = self.options;\n\t    var dragBox = self.dragBox;\n\t    var face = self.face;\n\t    var croppable = void 0;\n\t    var movable = void 0;\n\t\n\t    if (self.loaded && !self.disabled) {\n\t      croppable = mode === 'crop';\n\t      movable = options.movable && mode === 'move';\n\t      mode = croppable || movable ? mode : 'none';\n\t\n\t      $.setData(dragBox, 'action', mode);\n\t      $.toggleClass(dragBox, 'cropper-crop', croppable);\n\t      $.toggleClass(dragBox, 'cropper-move', movable);\n\t\n\t      if (!options.cropBoxMovable) {\n\t        // Sync drag mode to crop box when it is not movable\n\t        $.setData(face, 'action', mode);\n\t        $.toggleClass(face, 'cropper-crop', croppable);\n\t        $.toggleClass(face, 'cropper-move', movable);\n\t      }\n\t    }\n\t\n\t    return self;\n\t  }\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=cropper.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/cropperjs/dist/cropper.js\n// module id = 692\n// module chunks = 1"],"sourceRoot":""}